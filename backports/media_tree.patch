diff --git a/drivers/media/common/b2c2/flexcop-fe-tuner.c b/drivers/media/common/b2c2/flexcop-fe-tuner.c
index aac1aad..eb83790 100644
--- a/drivers/media/common/b2c2/flexcop-fe-tuner.c
+++ b/drivers/media/common/b2c2/flexcop-fe-tuner.c
@@ -691,7 +691,7 @@ int flexcop_frontend_init(struct flexcop_device *fc)
 			goto fe_found;
 		/* Clean up partially attached frontend */
 		if (fc->fe) {
-			dvb_frontend_detach(fc->fe);
+			mediatree_dvb_frontend_detach(fc->fe);
 			fc->fe = NULL;
 		}
 	}
@@ -701,9 +701,9 @@ int flexcop_frontend_init(struct flexcop_device *fc)
 
 fe_found:
 	info("found '%s' .", fc->fe->ops.info.name);
-	if (dvb_register_frontend(&fc->dvb_adapter, fc->fe)) {
+	if (mediatree_dvb_register_frontend(&fc->dvb_adapter, fc->fe)) {
 		err("frontend registration failed!");
-		dvb_frontend_detach(fc->fe);
+		mediatree_dvb_frontend_detach(fc->fe);
 		fc->fe = NULL;
 		return -EINVAL;
 	}
@@ -714,8 +714,8 @@ fe_found:
 void flexcop_frontend_exit(struct flexcop_device *fc)
 {
 	if (fc->init_state & FC_STATE_FE_INIT) {
-		dvb_unregister_frontend(fc->fe);
-		dvb_frontend_detach(fc->fe);
+		mediatree_dvb_unregister_frontend(fc->fe);
+		mediatree_dvb_frontend_detach(fc->fe);
 	}
 	fc->init_state &= ~FC_STATE_FE_INIT;
 }
diff --git a/drivers/media/common/b2c2/flexcop.c b/drivers/media/common/b2c2/flexcop.c
index e7a88a2..883cb50 100644
--- a/drivers/media/common/b2c2/flexcop.c
+++ b/drivers/media/common/b2c2/flexcop.c
@@ -56,7 +56,7 @@ static int flexcop_dvb_stop_feed(struct dvb_demux_feed *dvbdmxfeed)
 
 static int flexcop_dvb_init(struct flexcop_device *fc)
 {
-	int ret = dvb_register_adapter(&fc->dvb_adapter,
+	int ret = mediatree_dvb_register_adapter(&fc->dvb_adapter,
 			"FlexCop Digital TV device", fc->owner,
 			fc->dev, adapter_nr);
 	if (ret < 0) {
@@ -73,7 +73,7 @@ static int flexcop_dvb_init(struct flexcop_device *fc)
 	fc->demux.stop_feed = flexcop_dvb_stop_feed;
 	fc->demux.write_to_decoder = NULL;
 
-	ret = dvb_dmx_init(&fc->demux);
+	ret = mediatree_dvb_dmx_init(&fc->demux);
 	if (ret < 0) {
 		err("dvb_dmx failed: error %d", ret);
 		goto err_dmx;
@@ -84,9 +84,9 @@ static int flexcop_dvb_init(struct flexcop_device *fc)
 	fc->dmxdev.filternum = fc->demux.feednum;
 	fc->dmxdev.demux = &fc->demux.dmx;
 	fc->dmxdev.capabilities = 0;
-	ret = dvb_dmxdev_init(&fc->dmxdev, &fc->dvb_adapter);
+	ret = mediatree_dvb_dmxdev_init(&fc->dmxdev, &fc->dvb_adapter);
 	if (ret < 0) {
-		err("dvb_dmxdev_init failed: error %d", ret);
+		err("mediatree_dvb_dmxdev_init failed: error %d", ret);
 		goto err_dmx_dev;
 	}
 
@@ -109,9 +109,9 @@ static int flexcop_dvb_init(struct flexcop_device *fc)
 		goto err_connect_frontend;
 	}
 
-	ret = dvb_net_init(&fc->dvb_adapter, &fc->dvbnet, &fc->demux.dmx);
+	ret = mediatree_dvb_net_init(&fc->dvb_adapter, &fc->dvbnet, &fc->demux.dmx);
 	if (ret < 0) {
-		err("dvb_net_init failed: error %d", ret);
+		err("mediatree_dvb_net_init failed: error %d", ret);
 		goto err_net;
 	}
 
@@ -125,27 +125,27 @@ err_connect_frontend:
 err_dmx_add_mem_frontend:
 	fc->demux.dmx.remove_frontend(&fc->demux.dmx, &fc->hw_frontend);
 err_dmx_add_hw_frontend:
-	dvb_dmxdev_release(&fc->dmxdev);
+	mediatree_dvb_dmxdev_release(&fc->dmxdev);
 err_dmx_dev:
-	dvb_dmx_release(&fc->demux);
+	mediatree_dvb_dmx_release(&fc->demux);
 err_dmx:
-	dvb_unregister_adapter(&fc->dvb_adapter);
+	mediatree_dvb_unregister_adapter(&fc->dvb_adapter);
 	return ret;
 }
 
 static void flexcop_dvb_exit(struct flexcop_device *fc)
 {
 	if (fc->init_state & FC_STATE_DVB_INIT) {
-		dvb_net_release(&fc->dvbnet);
+		mediatree_dvb_net_release(&fc->dvbnet);
 
 		fc->demux.dmx.close(&fc->demux.dmx);
 		fc->demux.dmx.remove_frontend(&fc->demux.dmx,
 			&fc->mem_frontend);
 		fc->demux.dmx.remove_frontend(&fc->demux.dmx,
 			&fc->hw_frontend);
-		dvb_dmxdev_release(&fc->dmxdev);
-		dvb_dmx_release(&fc->demux);
-		dvb_unregister_adapter(&fc->dvb_adapter);
+		mediatree_dvb_dmxdev_release(&fc->dmxdev);
+		mediatree_dvb_dmx_release(&fc->demux);
+		mediatree_dvb_unregister_adapter(&fc->dvb_adapter);
 		deb_info("deinitialized dvb stuff\n");
 	}
 	fc->init_state &= ~FC_STATE_DVB_INIT;
@@ -155,13 +155,13 @@ static void flexcop_dvb_exit(struct flexcop_device *fc)
  * struct flexcop_device from the bus-parts */
 void flexcop_pass_dmx_data(struct flexcop_device *fc, u8 *buf, u32 len)
 {
-	dvb_dmx_swfilter(&fc->demux, buf, len);
+	mediatree_dvb_dmx_swfilter(&fc->demux, buf, len);
 }
 EXPORT_SYMBOL(flexcop_pass_dmx_data);
 
 void flexcop_pass_dmx_packets(struct flexcop_device *fc, u8 *buf, u32 no)
 {
-	dvb_dmx_swfilter_packets(&fc->demux, buf, no);
+	mediatree_dvb_dmx_swfilter_packets(&fc->demux, buf, no);
 }
 EXPORT_SYMBOL(flexcop_pass_dmx_packets);
 
diff --git a/drivers/media/common/siano/smsdvb-main.c b/drivers/media/common/siano/smsdvb-main.c
index f80caaa..9d23d30 100644
--- a/drivers/media/common/siano/smsdvb-main.c
+++ b/drivers/media/common/siano/smsdvb-main.c
@@ -555,7 +555,7 @@ static int smsdvb_onresponse(void *context, struct smscore_buffer_t *cb)
 		 * to it and if the device has tuned
 		 */
 		if (client->feed_users && client->has_tuned)
-			dvb_dmx_swfilter(&client->demux, p,
+			mediatree_dvb_dmx_swfilter(&client->demux, p,
 					 cb->size - sizeof(struct sms_msg_hdr));
 		break;
 
@@ -656,11 +656,11 @@ static void smsdvb_unregister_client(struct smsdvb_client_t *client)
 
 	smsdvb_debugfs_release(client);
 	smscore_unregister_client(client->smsclient);
-	dvb_unregister_frontend(&client->frontend);
-	dvb_dmxdev_release(&client->dmxdev);
-	dvb_dmx_release(&client->demux);
+	mediatree_dvb_unregister_frontend(&client->frontend);
+	mediatree_dvb_dmxdev_release(&client->dmxdev);
+	mediatree_dvb_dmx_release(&client->demux);
 	smsdvb_media_device_unregister(client);
-	dvb_unregister_adapter(&client->adapter);
+	mediatree_dvb_unregister_adapter(&client->adapter);
 	kfree(client);
 }
 
@@ -1115,12 +1115,12 @@ static int smsdvb_hotplug(struct smscore_device_t *coredev,
 		return -ENOMEM;
 
 	/* register dvb adapter */
-	rc = dvb_register_adapter(&client->adapter,
+	rc = mediatree_dvb_register_adapter(&client->adapter,
 				  sms_get_board(
 					smscore_get_board_id(coredev))->name,
 				  THIS_MODULE, device, adapter_nr);
 	if (rc < 0) {
-		pr_err("dvb_register_adapter() failed %d\n", rc);
+		pr_err("mediatree_dvb_register_adapter() failed %d\n", rc);
 		goto adapter_error;
 	}
 	dvb_register_media_controller(&client->adapter, coredev->media_dev);
@@ -1132,9 +1132,9 @@ static int smsdvb_hotplug(struct smscore_device_t *coredev,
 	client->demux.start_feed = smsdvb_start_feed;
 	client->demux.stop_feed = smsdvb_stop_feed;
 
-	rc = dvb_dmx_init(&client->demux);
+	rc = mediatree_dvb_dmx_init(&client->demux);
 	if (rc < 0) {
-		pr_err("dvb_dmx_init failed %d\n", rc);
+		pr_err("mediatree_dvb_dmx_init failed %d\n", rc);
 		goto dvbdmx_error;
 	}
 
@@ -1143,9 +1143,9 @@ static int smsdvb_hotplug(struct smscore_device_t *coredev,
 	client->dmxdev.demux = &client->demux.dmx;
 	client->dmxdev.capabilities = 0;
 
-	rc = dvb_dmxdev_init(&client->dmxdev, &client->adapter);
+	rc = mediatree_dvb_dmxdev_init(&client->dmxdev, &client->adapter);
 	if (rc < 0) {
-		pr_err("dvb_dmxdev_init failed %d\n", rc);
+		pr_err("mediatree_dvb_dmxdev_init failed %d\n", rc);
 		goto dmxdev_error;
 	}
 
@@ -1164,7 +1164,7 @@ static int smsdvb_hotplug(struct smscore_device_t *coredev,
 		break;
 	}
 
-	rc = dvb_register_frontend(&client->adapter, &client->frontend);
+	rc = mediatree_dvb_register_frontend(&client->adapter, &client->frontend);
 	if (rc < 0) {
 		pr_err("frontend registration failed %d\n", rc);
 		goto frontend_error;
@@ -1219,17 +1219,17 @@ media_graph_error:
 	smsdvb_debugfs_release(client);
 
 client_error:
-	dvb_unregister_frontend(&client->frontend);
+	mediatree_dvb_unregister_frontend(&client->frontend);
 
 frontend_error:
-	dvb_dmxdev_release(&client->dmxdev);
+	mediatree_dvb_dmxdev_release(&client->dmxdev);
 
 dmxdev_error:
-	dvb_dmx_release(&client->demux);
+	mediatree_dvb_dmx_release(&client->demux);
 
 dvbdmx_error:
 	smsdvb_media_device_unregister(client);
-	dvb_unregister_adapter(&client->adapter);
+	mediatree_dvb_unregister_adapter(&client->adapter);
 
 adapter_error:
 	kfree(client);
diff --git a/drivers/media/common/videobuf2/videobuf2-dvb.c b/drivers/media/common/videobuf2/videobuf2-dvb.c
index 9d571c9..e080cfd 100644
--- a/drivers/media/common/videobuf2/videobuf2-dvb.c
+++ b/drivers/media/common/videobuf2/videobuf2-dvb.c
@@ -27,7 +27,7 @@ static int dvb_fnc(struct vb2_buffer *vb, void *priv)
 {
 	struct vb2_dvb *dvb = priv;
 
-	dvb_dmx_swfilter(&dvb->demux, vb2_plane_vaddr(vb, 0),
+	mediatree_dvb_dmx_swfilter(&dvb->demux, vb2_plane_vaddr(vb, 0),
 				      vb2_get_plane_payload(vb, 0));
 	return 0;
 }
@@ -69,7 +69,7 @@ static int vb2_dvb_stop_feed(struct dvb_demux_feed *feed)
 	return err;
 }
 
-static int vb2_dvb_register_adapter(struct vb2_dvb_frontends *fe,
+static int vb2_mediatree_dvb_register_adapter(struct vb2_dvb_frontends *fe,
 			  struct module *module,
 			  void *adapter_priv,
 			  struct device *device,
@@ -83,10 +83,10 @@ static int vb2_dvb_register_adapter(struct vb2_dvb_frontends *fe,
 	mutex_init(&fe->lock);
 
 	/* register adapter */
-	result = dvb_register_adapter(&fe->adapter, adapter_name, module,
+	result = mediatree_dvb_register_adapter(&fe->adapter, adapter_name, module,
 		device, adapter_nr);
 	if (result < 0) {
-		pr_warn("%s: dvb_register_adapter failed (errno = %d)\n",
+		pr_warn("%s: mediatree_dvb_register_adapter failed (errno = %d)\n",
 		       adapter_name, result);
 	}
 	fe->adapter.priv = adapter_priv;
@@ -98,15 +98,15 @@ static int vb2_dvb_register_adapter(struct vb2_dvb_frontends *fe,
 	return result;
 }
 
-static int vb2_dvb_register_frontend(struct dvb_adapter *adapter,
+static int vb2_mediatree_dvb_register_frontend(struct dvb_adapter *adapter,
 	struct vb2_dvb *dvb)
 {
 	int result;
 
 	/* register frontend */
-	result = dvb_register_frontend(adapter, dvb->frontend);
+	result = mediatree_dvb_register_frontend(adapter, dvb->frontend);
 	if (result < 0) {
-		pr_warn("%s: dvb_register_frontend failed (errno = %d)\n",
+		pr_warn("%s: mediatree_dvb_register_frontend failed (errno = %d)\n",
 		       dvb->name, result);
 		goto fail_frontend;
 	}
@@ -120,9 +120,9 @@ static int vb2_dvb_register_frontend(struct dvb_adapter *adapter,
 	dvb->demux.feednum    = 256;
 	dvb->demux.start_feed = vb2_dvb_start_feed;
 	dvb->demux.stop_feed  = vb2_dvb_stop_feed;
-	result = dvb_dmx_init(&dvb->demux);
+	result = mediatree_dvb_dmx_init(&dvb->demux);
 	if (result < 0) {
-		pr_warn("%s: dvb_dmx_init failed (errno = %d)\n",
+		pr_warn("%s: mediatree_dvb_dmx_init failed (errno = %d)\n",
 		       dvb->name, result);
 		goto fail_dmx;
 	}
@@ -130,10 +130,10 @@ static int vb2_dvb_register_frontend(struct dvb_adapter *adapter,
 	dvb->dmxdev.filternum    = 256;
 	dvb->dmxdev.demux        = &dvb->demux.dmx;
 	dvb->dmxdev.capabilities = 0;
-	result = dvb_dmxdev_init(&dvb->dmxdev, adapter);
+	result = mediatree_dvb_dmxdev_init(&dvb->dmxdev, adapter);
 
 	if (result < 0) {
-		pr_warn("%s: dvb_dmxdev_init failed (errno = %d)\n",
+		pr_warn("%s: mediatree_dvb_dmxdev_init failed (errno = %d)\n",
 		       dvb->name, result);
 		goto fail_dmxdev;
 	}
@@ -162,9 +162,9 @@ static int vb2_dvb_register_frontend(struct dvb_adapter *adapter,
 	}
 
 	/* register network adapter */
-	result = dvb_net_init(adapter, &dvb->net, &dvb->demux.dmx);
+	result = mediatree_dvb_net_init(adapter, &dvb->net, &dvb->demux.dmx);
 	if (result < 0) {
-		pr_warn("%s: dvb_net_init failed (errno = %d)\n",
+		pr_warn("%s: mediatree_dvb_net_init failed (errno = %d)\n",
 		       dvb->name, result);
 		goto fail_fe_conn;
 	}
@@ -175,13 +175,13 @@ fail_fe_conn:
 fail_fe_mem:
 	dvb->demux.dmx.remove_frontend(&dvb->demux.dmx, &dvb->fe_hw);
 fail_fe_hw:
-	dvb_dmxdev_release(&dvb->dmxdev);
+	mediatree_dvb_dmxdev_release(&dvb->dmxdev);
 fail_dmxdev:
-	dvb_dmx_release(&dvb->demux);
+	mediatree_dvb_dmx_release(&dvb->demux);
 fail_dmx:
-	dvb_unregister_frontend(dvb->frontend);
+	mediatree_dvb_unregister_frontend(dvb->frontend);
 fail_frontend:
-	dvb_frontend_detach(dvb->frontend);
+	mediatree_dvb_frontend_detach(dvb->frontend);
 	dvb->frontend = NULL;
 
 	return result;
@@ -208,10 +208,10 @@ int vb2_dvb_register_bus(struct vb2_dvb_frontends *f,
 	}
 
 	/* Bring up the adapter */
-	res = vb2_dvb_register_adapter(f, module, adapter_priv, device, mdev,
+	res = vb2_mediatree_dvb_register_adapter(f, module, adapter_priv, device, mdev,
 		fe->dvb.name, adapter_nr, mfe_shared);
 	if (res < 0) {
-		pr_warn("vb2_dvb_register_adapter failed (errno = %d)\n", res);
+		pr_warn("vb2_mediatree_dvb_register_adapter failed (errno = %d)\n", res);
 		return res;
 	}
 
@@ -219,9 +219,9 @@ int vb2_dvb_register_bus(struct vb2_dvb_frontends *f,
 	mutex_lock(&f->lock);
 	list_for_each_safe(list, q, &f->felist) {
 		fe = list_entry(list, struct vb2_dvb_frontend, felist);
-		res = vb2_dvb_register_frontend(&f->adapter, &fe->dvb);
+		res = vb2_mediatree_dvb_register_frontend(&f->adapter, &fe->dvb);
 		if (res < 0) {
-			pr_warn("%s: vb2_dvb_register_frontend failed (errno = %d)\n",
+			pr_warn("%s: vb2_mediatree_dvb_register_frontend failed (errno = %d)\n",
 				fe->dvb.name, res);
 			goto err;
 		}
@@ -244,7 +244,7 @@ void vb2_dvb_unregister_bus(struct vb2_dvb_frontends *f)
 {
 	vb2_dvb_dealloc_frontends(f);
 
-	dvb_unregister_adapter(&f->adapter);
+	mediatree_dvb_unregister_adapter(&f->adapter);
 }
 EXPORT_SYMBOL(vb2_dvb_unregister_bus);
 
@@ -321,18 +321,18 @@ void vb2_dvb_dealloc_frontends(struct vb2_dvb_frontends *f)
 	list_for_each_safe(list, q, &f->felist) {
 		fe = list_entry(list, struct vb2_dvb_frontend, felist);
 		if (fe->dvb.net.dvbdev) {
-			dvb_net_release(&fe->dvb.net);
+			mediatree_dvb_net_release(&fe->dvb.net);
 			fe->dvb.demux.dmx.remove_frontend(&fe->dvb.demux.dmx,
 				&fe->dvb.fe_mem);
 			fe->dvb.demux.dmx.remove_frontend(&fe->dvb.demux.dmx,
 				&fe->dvb.fe_hw);
-			dvb_dmxdev_release(&fe->dvb.dmxdev);
-			dvb_dmx_release(&fe->dvb.demux);
-			dvb_unregister_frontend(fe->dvb.frontend);
+			mediatree_dvb_dmxdev_release(&fe->dvb.dmxdev);
+			mediatree_dvb_dmx_release(&fe->dvb.demux);
+			mediatree_dvb_unregister_frontend(fe->dvb.frontend);
 		}
 		if (fe->dvb.frontend)
 			/* always allocated, may have been reset */
-			dvb_frontend_detach(fe->dvb.frontend);
+			mediatree_dvb_frontend_detach(fe->dvb.frontend);
 		list_del(list); /* remove list entry */
 		kfree(fe);	/* free frontend allocation */
 	}
diff --git a/drivers/media/dvb-core/Makefile b/drivers/media/dvb-core/Makefile
index 62b028d..61e5c20 100644
--- a/drivers/media/dvb-core/Makefile
+++ b/drivers/media/dvb-core/Makefile
@@ -6,8 +6,8 @@
 dvb-net-$(CONFIG_DVB_NET) := dvb_net.o
 dvb-vb2-$(CONFIG_DVB_MMAP) := dvb_vb2.o
 
-dvb-core-objs := dvbdev.o dmxdev.o dvb_demux.o			\
+mediatree-dvb-core-objs := dvbdev.o dmxdev.o dvb_demux.o			\
 		 dvb_ca_en50221.o dvb_frontend.o		\
 		 $(dvb-net-y) dvb_ringbuffer.o $(dvb-vb2-y) dvb_math.o
 
-obj-$(CONFIG_DVB_CORE) += dvb-core.o
+obj-$(CONFIG_DVB_CORE) += mediatree-dvb-core.o
diff --git a/drivers/media/dvb-core/dmxdev.c b/drivers/media/dvb-core/dmxdev.c
index 6198d6f..4d3f7a7 100644
--- a/drivers/media/dvb-core/dmxdev.c
+++ b/drivers/media/dvb-core/dmxdev.c
@@ -42,13 +42,13 @@ static int dvb_dmxdev_buffer_write(struct dvb_ringbuffer *buf,
 	if (!buf->data)
 		return 0;
 
-	free = dvb_ringbuffer_free(buf);
+	free = mediatree_dvb_ringbuffer_free(buf);
 	if (len > free) {
 		dprintk("buffer overflow\n");
 		return -EOVERFLOW;
 	}
 
-	return dvb_ringbuffer_write(buf, src, len);
+	return mediatree_dvb_ringbuffer_write(buf, src, len);
 }
 
 static ssize_t dvb_dmxdev_buffer_read(struct dvb_ringbuffer *src,
@@ -64,33 +64,33 @@ static ssize_t dvb_dmxdev_buffer_read(struct dvb_ringbuffer *src,
 
 	if (src->error) {
 		ret = src->error;
-		dvb_ringbuffer_flush(src);
+		mediatree_dvb_ringbuffer_flush(src);
 		return ret;
 	}
 
 	for (todo = count; todo > 0; todo -= ret) {
-		if (non_blocking && dvb_ringbuffer_empty(src)) {
+		if (non_blocking && mediatree_dvb_ringbuffer_empty(src)) {
 			ret = -EWOULDBLOCK;
 			break;
 		}
 
 		ret = wait_event_interruptible(src->queue,
-					       !dvb_ringbuffer_empty(src) ||
+					       !mediatree_dvb_ringbuffer_empty(src) ||
 					       (src->error != 0));
 		if (ret < 0)
 			break;
 
 		if (src->error) {
 			ret = src->error;
-			dvb_ringbuffer_flush(src);
+			mediatree_dvb_ringbuffer_flush(src);
 			break;
 		}
 
-		avail = dvb_ringbuffer_avail(src);
+		avail = mediatree_dvb_ringbuffer_avail(src);
 		if (avail > todo)
 			avail = todo;
 
-		ret = dvb_ringbuffer_read_user(src, buf, avail);
+		ret = mediatree_dvb_ringbuffer_read_user(src, buf, avail);
 		if (ret < 0)
 			break;
 
@@ -169,7 +169,7 @@ static int dvb_dvr_open(struct inode *inode, struct file *file)
 			mutex_unlock(&dmxdev->mutex);
 			return -ENOMEM;
 		}
-		dvb_ringbuffer_init(&dmxdev->dvr_buffer, mem, DVR_BUFFER_SIZE);
+		mediatree_dvb_ringbuffer_init(&dmxdev->dvr_buffer, mem, DVR_BUFFER_SIZE);
 		if (dmxdev->may_do_mmap)
 			dvb_vb2_init(&dmxdev->dvr_vb2_ctx, "dvr",
 				     file->f_flags & O_NONBLOCK);
@@ -579,7 +579,7 @@ static int dvb_dmxdev_filter_stop(struct dmxdev_filter *dmxdevfilter)
 		return -EINVAL;
 	}
 
-	dvb_ringbuffer_flush(&dmxdevfilter->buffer);
+	mediatree_dvb_ringbuffer_flush(&dmxdevfilter->buffer);
 	return 0;
 }
 
@@ -683,7 +683,7 @@ static int dvb_dmxdev_filter_start(struct dmxdev_filter *filter)
 		spin_unlock_irq(&filter->dev->lock);
 	}
 
-	dvb_ringbuffer_flush(&filter->buffer);
+	mediatree_dvb_ringbuffer_flush(&filter->buffer);
 
 	switch (filter->type) {
 	case DMXDEV_TYPE_SEC:
@@ -810,7 +810,7 @@ static int dvb_demux_open(struct inode *inode, struct file *file)
 	dmxdev->may_do_mmap = 0;
 #endif
 
-	dvb_ringbuffer_init(&dmxdevfilter->buffer, NULL, 8192);
+	mediatree_dvb_ringbuffer_init(&dmxdevfilter->buffer, NULL, 8192);
 	dvb_vb2_init(&dmxdevfilter->vb2_ctx, "demux_filter",
 		     file->f_flags & O_NONBLOCK);
 	dmxdevfilter->type = DMXDEV_TYPE_NONE;
@@ -1201,7 +1201,7 @@ static __poll_t dvb_demux_poll(struct file *file, poll_table *wait)
 	if (dmxdevfilter->buffer.error)
 		mask |= (EPOLLIN | EPOLLRDNORM | EPOLLPRI | EPOLLERR);
 
-	if (!dvb_ringbuffer_empty(&dmxdevfilter->buffer))
+	if (!mediatree_dvb_ringbuffer_empty(&dmxdevfilter->buffer))
 		mask |= (EPOLLIN | EPOLLRDNORM | EPOLLPRI);
 
 	return mask;
@@ -1349,7 +1349,7 @@ static __poll_t dvb_dvr_poll(struct file *file, poll_table *wait)
 		if (dmxdev->dvr_buffer.error)
 			mask |= (EPOLLIN | EPOLLRDNORM | EPOLLPRI | EPOLLERR);
 
-		if (!dvb_ringbuffer_empty(&dmxdev->dvr_buffer))
+		if (!mediatree_dvb_ringbuffer_empty(&dmxdev->dvr_buffer))
 			mask |= (EPOLLIN | EPOLLRDNORM | EPOLLPRI);
 	} else
 		mask |= (EPOLLOUT | EPOLLWRNORM | EPOLLPRI);
@@ -1402,7 +1402,7 @@ static const struct dvb_device dvbdev_dvr = {
 #endif
 	.fops = &dvb_dvr_fops
 };
-int dvb_dmxdev_init(struct dmxdev *dmxdev, struct dvb_adapter *dvb_adapter)
+int mediatree_dvb_dmxdev_init(struct dmxdev *dmxdev, struct dvb_adapter *dvb_adapter)
 {
 	int i, ret;
 
@@ -1423,31 +1423,31 @@ int dvb_dmxdev_init(struct dmxdev *dmxdev, struct dvb_adapter *dvb_adapter)
 					    DMXDEV_STATE_FREE);
 	}
 
-	ret = dvb_register_device(dvb_adapter, &dmxdev->dvbdev, &dvbdev_demux, dmxdev,
+	ret = mediatree_dvb_register_device(dvb_adapter, &dmxdev->dvbdev, &dvbdev_demux, dmxdev,
 			    DVB_DEVICE_DEMUX, dmxdev->filternum);
 	if (ret < 0)
 		goto err_register_dvbdev;
 
-	ret = dvb_register_device(dvb_adapter, &dmxdev->dvr_dvbdev, &dvbdev_dvr,
+	ret = mediatree_dvb_register_device(dvb_adapter, &dmxdev->dvr_dvbdev, &dvbdev_dvr,
 			    dmxdev, DVB_DEVICE_DVR, dmxdev->filternum);
 	if (ret < 0)
 		goto err_register_dvr_dvbdev;
 
-	dvb_ringbuffer_init(&dmxdev->dvr_buffer, NULL, 8192);
+	mediatree_dvb_ringbuffer_init(&dmxdev->dvr_buffer, NULL, 8192);
 
 	return 0;
 
 err_register_dvr_dvbdev:
-	dvb_unregister_device(dmxdev->dvbdev);
+	mediatree_dvb_unregister_device(dmxdev->dvbdev);
 err_register_dvbdev:
 	vfree(dmxdev->filter);
 	dmxdev->filter = NULL;
 	return ret;
 }
 
-EXPORT_SYMBOL(dvb_dmxdev_init);
+EXPORT_SYMBOL(mediatree_dvb_dmxdev_init);
 
-void dvb_dmxdev_release(struct dmxdev *dmxdev)
+void mediatree_dvb_dmxdev_release(struct dmxdev *dmxdev)
 {
 	dmxdev->exit = 1;
 	if (dmxdev->dvbdev->users > 1) {
@@ -1459,12 +1459,12 @@ void dvb_dmxdev_release(struct dmxdev *dmxdev)
 				dmxdev->dvr_dvbdev->users == 1);
 	}
 
-	dvb_unregister_device(dmxdev->dvbdev);
-	dvb_unregister_device(dmxdev->dvr_dvbdev);
+	mediatree_dvb_unregister_device(dmxdev->dvbdev);
+	mediatree_dvb_unregister_device(dmxdev->dvr_dvbdev);
 
 	vfree(dmxdev->filter);
 	dmxdev->filter = NULL;
 	dmxdev->demux->close(dmxdev->demux);
 }
 
-EXPORT_SYMBOL(dvb_dmxdev_release);
+EXPORT_SYMBOL(mediatree_dvb_dmxdev_release);
diff --git a/drivers/media/dvb-core/dvb_ca_en50221.c b/drivers/media/dvb-core/dvb_ca_en50221.c
index 3c4e845..8722f6f 100644
--- a/drivers/media/dvb-core/dvb_ca_en50221.c
+++ b/drivers/media/dvb-core/dvb_ca_en50221.c
@@ -158,7 +158,7 @@ static void dvb_ca_private_free(struct dvb_ca_private *ca)
 {
 	unsigned int i;
 
-	dvb_free_device(ca->dvbdev);
+	mediatree_dvb_free_device(ca->dvbdev);
 	for (i = 0; i < ca->slot_count; i++)
 		vfree(ca->slot_info[i].rx_buffer.data);
 
@@ -648,7 +648,7 @@ static int dvb_ca_en50221_read_data(struct dvb_ca_private *ca, int slot,
 			status = -EIO;
 			goto exit;
 		}
-		buf_free = dvb_ringbuffer_free(&sl->rx_buffer);
+		buf_free = mediatree_dvb_ringbuffer_free(&sl->rx_buffer);
 
 		if (buf_free < (sl->link_buf_size +
 				DVB_RINGBUFFER_PKTHDRSIZE)) {
@@ -923,13 +923,13 @@ static int dvb_ca_en50221_slot_shutdown(struct dvb_ca_private *ca, int slot)
 }
 
 /**
- * dvb_ca_en50221_camchange_irq - A CAMCHANGE IRQ has occurred.
+ * mediatree_dvb_ca_en50221_camchange_irq - A CAMCHANGE IRQ has occurred.
  *
  * @pubca: CA instance.
  * @slot: Slot concerned.
  * @change_type: One of the DVB_CA_CAMCHANGE_* values.
  */
-void dvb_ca_en50221_camchange_irq(struct dvb_ca_en50221 *pubca, int slot,
+void mediatree_dvb_ca_en50221_camchange_irq(struct dvb_ca_en50221 *pubca, int slot,
 				  int change_type)
 {
 	struct dvb_ca_private *ca = pubca->private;
@@ -950,15 +950,15 @@ void dvb_ca_en50221_camchange_irq(struct dvb_ca_en50221 *pubca, int slot,
 	atomic_inc(&sl->camchange_count);
 	dvb_ca_en50221_thread_wakeup(ca);
 }
-EXPORT_SYMBOL(dvb_ca_en50221_camchange_irq);
+EXPORT_SYMBOL(mediatree_dvb_ca_en50221_camchange_irq);
 
 /**
- * dvb_ca_en50221_camready_irq - A CAMREADY IRQ has occurred.
+ * mediatree_dvb_ca_en50221_camready_irq - A CAMREADY IRQ has occurred.
  *
  * @pubca: CA instance.
  * @slot: Slot concerned.
  */
-void dvb_ca_en50221_camready_irq(struct dvb_ca_en50221 *pubca, int slot)
+void mediatree_dvb_ca_en50221_camready_irq(struct dvb_ca_en50221 *pubca, int slot)
 {
 	struct dvb_ca_private *ca = pubca->private;
 	struct dvb_ca_slot *sl = &ca->slot_info[slot];
@@ -970,15 +970,15 @@ void dvb_ca_en50221_camready_irq(struct dvb_ca_en50221 *pubca, int slot)
 		dvb_ca_en50221_thread_wakeup(ca);
 	}
 }
-EXPORT_SYMBOL(dvb_ca_en50221_camready_irq);
+EXPORT_SYMBOL(mediatree_dvb_ca_en50221_camready_irq);
 
 /**
- * dvb_ca_en50221_frda_irq - An FR or DA IRQ has occurred.
+ * mediatree_dvb_ca_en50221_frda_irq - An FR or DA IRQ has occurred.
  *
  * @pubca: CA instance.
  * @slot: Slot concerned.
  */
-void dvb_ca_en50221_frda_irq(struct dvb_ca_en50221 *pubca, int slot)
+void mediatree_dvb_ca_en50221_frda_irq(struct dvb_ca_en50221 *pubca, int slot)
 {
 	struct dvb_ca_private *ca = pubca->private;
 	struct dvb_ca_slot *sl = &ca->slot_info[slot];
@@ -1001,7 +1001,7 @@ void dvb_ca_en50221_frda_irq(struct dvb_ca_en50221 *pubca, int slot)
 		break;
 	}
 }
-EXPORT_SYMBOL(dvb_ca_en50221_frda_irq);
+EXPORT_SYMBOL(mediatree_dvb_ca_en50221_frda_irq);
 
 /* ************************************************************************** */
 /* EN50221 thread functions */
@@ -1239,7 +1239,7 @@ static void dvb_ca_en50221_thread_state_machine(struct dvb_ca_private *ca,
 				dvb_ca_en50221_thread_update_delay(ca);
 				break;
 			}
-			dvb_ringbuffer_init(&sl->rx_buffer, rxbuf,
+			mediatree_dvb_ringbuffer_init(&sl->rx_buffer, rxbuf,
 					    RX_BUFFER_SIZE);
 		}
 
@@ -1358,7 +1358,7 @@ static int dvb_ca_en50221_io_do_ioctl(struct file *file,
 			if (sl->slot_state != DVB_CA_SLOTSTATE_NONE) {
 				dvb_ca_en50221_slot_shutdown(ca, slot);
 				if (ca->flags & DVB_CA_EN50221_FLAG_IRQ_CAMCHANGE)
-					dvb_ca_en50221_camchange_irq(ca->pub,
+					mediatree_dvb_ca_en50221_camchange_irq(ca->pub,
 								     slot,
 								     DVB_CA_EN50221_CAMCHANGE_INSERTED);
 			}
@@ -1713,7 +1713,7 @@ static int dvb_ca_en50221_io_open(struct inode *inode, struct file *file)
 	if (!try_module_get(ca->pub->owner))
 		return -EIO;
 
-	err = dvb_generic_open(inode, file);
+	err = mediatree_dvb_generic_open(inode, file);
 	if (err < 0) {
 		module_put(ca->pub->owner);
 		return err;
@@ -1729,7 +1729,7 @@ static int dvb_ca_en50221_io_open(struct inode *inode, struct file *file)
 				 * because ca->open == 0. Data is not read in
 				 * this case
 				 */
-				dvb_ringbuffer_flush(&sl->rx_buffer);
+				mediatree_dvb_ringbuffer_flush(&sl->rx_buffer);
 			}
 		}
 	}
@@ -1763,7 +1763,7 @@ static int dvb_ca_en50221_io_release(struct inode *inode, struct file *file)
 	ca->open = 0;
 	dvb_ca_en50221_thread_update_delay(ca);
 
-	err = dvb_generic_release(inode, file);
+	err = mediatree_dvb_generic_release(inode, file);
 
 	module_put(ca->pub->owner);
 
@@ -1831,7 +1831,7 @@ static const struct dvb_device dvbdev_ca = {
 /* Initialisation/shutdown functions */
 
 /**
- * dvb_ca_en50221_init - Initialise a new DVB CA EN50221 interface device.
+ * mediatree_dvb_ca_en50221_init - Initialise a new DVB CA EN50221 interface device.
  *
  * @dvb_adapter: DVB adapter to attach the new CA device to.
  * @pubca: The dvb_ca instance.
@@ -1840,7 +1840,7 @@ static const struct dvb_device dvbdev_ca = {
  *
  * return: 0 on success, nonzero on failure
  */
-int dvb_ca_en50221_init(struct dvb_adapter *dvb_adapter,
+int mediatree_dvb_ca_en50221_init(struct dvb_adapter *dvb_adapter,
 			struct dvb_ca_en50221 *pubca, int flags, int slot_count)
 {
 	int ret;
@@ -1875,7 +1875,7 @@ int dvb_ca_en50221_init(struct dvb_adapter *dvb_adapter,
 	pubca->private = ca;
 
 	/* register the DVB device */
-	ret = dvb_register_device(dvb_adapter, &ca->dvbdev, &dvbdev_ca, ca,
+	ret = mediatree_dvb_register_device(dvb_adapter, &ca->dvbdev, &dvbdev_ca, ca,
 				  DVB_DEVICE_CA, 0);
 	if (ret)
 		goto free_slot_info;
@@ -1911,7 +1911,7 @@ int dvb_ca_en50221_init(struct dvb_adapter *dvb_adapter,
 	return 0;
 
 unregister_device:
-	dvb_unregister_device(ca->dvbdev);
+	mediatree_dvb_unregister_device(ca->dvbdev);
 free_slot_info:
 	kfree(ca->slot_info);
 free_ca:
@@ -1920,14 +1920,14 @@ exit:
 	pubca->private = NULL;
 	return ret;
 }
-EXPORT_SYMBOL(dvb_ca_en50221_init);
+EXPORT_SYMBOL(mediatree_dvb_ca_en50221_init);
 
 /**
- * dvb_ca_en50221_release - Release a DVB CA EN50221 interface device.
+ * mediatree_dvb_ca_en50221_release - Release a DVB CA EN50221 interface device.
  *
  * @pubca: The associated dvb_ca instance.
  */
-void dvb_ca_en50221_release(struct dvb_ca_en50221 *pubca)
+void mediatree_dvb_ca_en50221_release(struct dvb_ca_en50221 *pubca)
 {
 	struct dvb_ca_private *ca = pubca->private;
 	int i;
@@ -1940,8 +1940,8 @@ void dvb_ca_en50221_release(struct dvb_ca_en50221 *pubca)
 	for (i = 0; i < ca->slot_count; i++)
 		dvb_ca_en50221_slot_shutdown(ca, i);
 
-	dvb_remove_device(ca->dvbdev);
+	mediatree_dvb_remove_device(ca->dvbdev);
 	dvb_ca_private_put(ca);
 	pubca->private = NULL;
 }
-EXPORT_SYMBOL(dvb_ca_en50221_release);
+EXPORT_SYMBOL(mediatree_dvb_ca_en50221_release);
diff --git a/drivers/media/dvb-core/dvb_demux.c b/drivers/media/dvb-core/dvb_demux.c
index 009f57a..f0b3ab1 100644
--- a/drivers/media/dvb-core/dvb_demux.c
+++ b/drivers/media/dvb-core/dvb_demux.c
@@ -101,7 +101,7 @@ static void dvb_dmx_memcopy(struct dvb_demux_feed *f, u8 *d, const u8 *s,
  * Software filter functions
  ******************************************************************************/
 
-static inline int dvb_dmx_swfilter_payload(struct dvb_demux_feed *feed,
+static inline int mediatree_dvb_dmx_swfilter_payload(struct dvb_demux_feed *feed,
 					   const u8 *buf)
 {
 	int count = payload(buf);
@@ -132,7 +132,7 @@ static inline int dvb_dmx_swfilter_payload(struct dvb_demux_feed *feed,
 			   &feed->buffer_flags);
 }
 
-static int dvb_dmx_swfilter_sectionfilter(struct dvb_demux_feed *feed,
+static int mediatree_dvb_dmx_swfilter_sectionfilter(struct dvb_demux_feed *feed,
 					  struct dvb_demux_filter *f)
 {
 	u8 neq = 0;
@@ -154,7 +154,7 @@ static int dvb_dmx_swfilter_sectionfilter(struct dvb_demux_feed *feed,
 			    NULL, 0, &f->filter, &feed->buffer_flags);
 }
 
-static inline int dvb_dmx_swfilter_section_feed(struct dvb_demux_feed *feed)
+static inline int mediatree_dvb_dmx_swfilter_section_feed(struct dvb_demux_feed *feed)
 {
 	struct dvb_demux *demux = feed->demux;
 	struct dvb_demux_filter *f = feed->filter;
@@ -177,7 +177,7 @@ static inline int dvb_dmx_swfilter_section_feed(struct dvb_demux_feed *feed)
 	}
 
 	do {
-		if (dvb_dmx_swfilter_sectionfilter(feed, f) < 0)
+		if (mediatree_dvb_dmx_swfilter_sectionfilter(feed, f) < 0)
 			return -1;
 	} while ((f = f->next) && sec->is_filtering);
 
@@ -186,7 +186,7 @@ static inline int dvb_dmx_swfilter_section_feed(struct dvb_demux_feed *feed)
 	return 0;
 }
 
-static void dvb_dmx_swfilter_section_new(struct dvb_demux_feed *feed)
+static void mediatree_dvb_dmx_swfilter_section_new(struct dvb_demux_feed *feed)
 {
 	struct dmx_section_feed *sec = &feed->feed.sec;
 
@@ -229,7 +229,7 @@ static void dvb_dmx_swfilter_section_new(struct dvb_demux_feed *feed)
  * previous section. When you for the first time see PUSI=1
  * then set feed->pusi_seen = true
  */
-static int dvb_dmx_swfilter_section_copy_dump(struct dvb_demux_feed *feed,
+static int mediatree_dvb_dmx_swfilter_section_copy_dump(struct dvb_demux_feed *feed,
 					      const u8 *buf, u8 len)
 {
 	struct dvb_demux *demux = feed->demux;
@@ -272,7 +272,7 @@ static int dvb_dmx_swfilter_section_copy_dump(struct dvb_demux_feed *feed,
 		sec->crc_val = ~0;
 		/* dump [secbuf .. secbuf+seclen) */
 		if (feed->pusi_seen) {
-			dvb_dmx_swfilter_section_feed(feed);
+			mediatree_dvb_dmx_swfilter_section_feed(feed);
 		} else {
 			set_buf_flags(feed,
 				      DMX_BUFFER_FLAG_DISCONTINUITY_DETECTED);
@@ -285,7 +285,7 @@ static int dvb_dmx_swfilter_section_copy_dump(struct dvb_demux_feed *feed,
 	return 0;
 }
 
-static int dvb_dmx_swfilter_section_packet(struct dvb_demux_feed *feed,
+static int mediatree_dvb_dmx_swfilter_section_packet(struct dvb_demux_feed *feed,
 					   const u8 *buf)
 {
 	u8 p, count;
@@ -323,7 +323,7 @@ static int dvb_dmx_swfilter_section_packet(struct dvb_demux_feed *feed,
 		}
 		/*
 		 * those bytes under some circumstances will again be reported
-		 * in the following dvb_dmx_swfilter_section_new
+		 * in the following mediatree_dvb_dmx_swfilter_section_new
 		 */
 
 		/*
@@ -335,7 +335,7 @@ static int dvb_dmx_swfilter_section_packet(struct dvb_demux_feed *feed,
 		 */
 
 		feed->pusi_seen = false;
-		dvb_dmx_swfilter_section_new(feed);
+		mediatree_dvb_dmx_swfilter_section_new(feed);
 	}
 
 	if (buf[1] & 0x40) {
@@ -346,12 +346,12 @@ static int dvb_dmx_swfilter_section_packet(struct dvb_demux_feed *feed,
 			const u8 *after = &before[before_len];
 			u8 after_len = count - 1 - before_len;
 
-			dvb_dmx_swfilter_section_copy_dump(feed, before,
+			mediatree_dvb_dmx_swfilter_section_copy_dump(feed, before,
 							   before_len);
 			/* before start of new section, set pusi_seen */
 			feed->pusi_seen = true;
-			dvb_dmx_swfilter_section_new(feed);
-			dvb_dmx_swfilter_section_copy_dump(feed, after,
+			mediatree_dvb_dmx_swfilter_section_new(feed);
+			mediatree_dvb_dmx_swfilter_section_copy_dump(feed, after,
 							   after_len);
 		} else if (count > 0) {
 			set_buf_flags(feed,
@@ -360,13 +360,13 @@ static int dvb_dmx_swfilter_section_packet(struct dvb_demux_feed *feed,
 		}
 	} else {
 		/* PUSI=0 (is not set), no section boundary */
-		dvb_dmx_swfilter_section_copy_dump(feed, &buf[p], count);
+		mediatree_dvb_dmx_swfilter_section_copy_dump(feed, &buf[p], count);
 	}
 
 	return 0;
 }
 
-static inline void dvb_dmx_swfilter_packet_type(struct dvb_demux_feed *feed,
+static inline void mediatree_dvb_dmx_swfilter_packet_type(struct dvb_demux_feed *feed,
 						const u8 *buf)
 {
 	switch (feed->type) {
@@ -375,7 +375,7 @@ static inline void dvb_dmx_swfilter_packet_type(struct dvb_demux_feed *feed,
 			break;
 		if (feed->ts_type & TS_PACKET) {
 			if (feed->ts_type & TS_PAYLOAD_ONLY)
-				dvb_dmx_swfilter_payload(feed, buf);
+				mediatree_dvb_dmx_swfilter_payload(feed, buf);
 			else
 				feed->cb.ts(buf, 188, NULL, 0, &feed->feed.ts,
 					    &feed->buffer_flags);
@@ -389,7 +389,7 @@ static inline void dvb_dmx_swfilter_packet_type(struct dvb_demux_feed *feed,
 	case DMX_TYPE_SEC:
 		if (!feed->feed.sec.is_filtering)
 			break;
-		if (dvb_dmx_swfilter_section_packet(feed, buf) < 0)
+		if (mediatree_dvb_dmx_swfilter_section_packet(feed, buf) < 0)
 			feed->feed.sec.seclen = feed->feed.sec.secbufp = 0;
 		break;
 
@@ -403,7 +403,7 @@ static inline void dvb_dmx_swfilter_packet_type(struct dvb_demux_feed *feed,
 	((f)->feed.ts.is_filtering) &&					\
 	(((f)->ts_type & (TS_PACKET | TS_DEMUX)) == TS_PACKET))
 
-static void dvb_dmx_swfilter_packet(struct dvb_demux *demux, const u8 *buf)
+static void mediatree_dvb_dmx_swfilter_packet(struct dvb_demux *demux, const u8 *buf)
 {
 	struct dvb_demux_feed *feed;
 	u16 pid = ts_pid(buf);
@@ -485,14 +485,14 @@ static void dvb_dmx_swfilter_packet(struct dvb_demux *demux, const u8 *buf)
 			continue;
 
 		if (feed->pid == pid)
-			dvb_dmx_swfilter_packet_type(feed, buf);
+			mediatree_dvb_dmx_swfilter_packet_type(feed, buf);
 		else if (feed->pid == 0x2000)
 			feed->cb.ts(buf, 188, NULL, 0, &feed->feed.ts,
 				    &feed->buffer_flags);
 	}
 }
 
-void dvb_dmx_swfilter_packets(struct dvb_demux *demux, const u8 *buf,
+void mediatree_dvb_dmx_swfilter_packets(struct dvb_demux *demux, const u8 *buf,
 			      size_t count)
 {
 	unsigned long flags;
@@ -501,14 +501,14 @@ void dvb_dmx_swfilter_packets(struct dvb_demux *demux, const u8 *buf,
 
 	while (count--) {
 		if (buf[0] == 0x47)
-			dvb_dmx_swfilter_packet(demux, buf);
+			mediatree_dvb_dmx_swfilter_packet(demux, buf);
 		buf += 188;
 	}
 
 	spin_unlock_irqrestore(&demux->lock, flags);
 }
 
-EXPORT_SYMBOL(dvb_dmx_swfilter_packets);
+EXPORT_SYMBOL(mediatree_dvb_dmx_swfilter_packets);
 
 static inline int find_next_packet(const u8 *buf, int pos, size_t count,
 				   const int pktsize)
@@ -535,7 +535,7 @@ static inline int find_next_packet(const u8 *buf, int pos, size_t count,
 }
 
 /* Filter all pktsize= 188 or 204 sized packets and skip garbage. */
-static inline void _dvb_dmx_swfilter(struct dvb_demux *demux, const u8 *buf,
+static inline void _mediatree_dvb_dmx_swfilter(struct dvb_demux *demux, const u8 *buf,
 		size_t count, const int pktsize)
 {
 	int p = 0, i, j;
@@ -554,7 +554,7 @@ static inline void _dvb_dmx_swfilter(struct dvb_demux *demux, const u8 *buf,
 		}
 		memcpy(&demux->tsbuf[i], buf, j);
 		if (demux->tsbuf[0] == 0x47) /* double check */
-			dvb_dmx_swfilter_packet(demux, demux->tsbuf);
+			mediatree_dvb_dmx_swfilter_packet(demux, demux->tsbuf);
 		demux->tsbufp = 0;
 		p += j;
 	}
@@ -573,7 +573,7 @@ static inline void _dvb_dmx_swfilter(struct dvb_demux *demux, const u8 *buf,
 			demux->tsbuf[0] = 0x47;
 			q = demux->tsbuf;
 		}
-		dvb_dmx_swfilter_packet(demux, q);
+		mediatree_dvb_dmx_swfilter_packet(demux, q);
 		p += pktsize;
 	}
 
@@ -589,19 +589,19 @@ bailout:
 	spin_unlock_irqrestore(&demux->lock, flags);
 }
 
-void dvb_dmx_swfilter(struct dvb_demux *demux, const u8 *buf, size_t count)
+void mediatree_dvb_dmx_swfilter(struct dvb_demux *demux, const u8 *buf, size_t count)
 {
-	_dvb_dmx_swfilter(demux, buf, count, 188);
+	_mediatree_dvb_dmx_swfilter(demux, buf, count, 188);
 }
-EXPORT_SYMBOL(dvb_dmx_swfilter);
+EXPORT_SYMBOL(mediatree_dvb_dmx_swfilter);
 
-void dvb_dmx_swfilter_204(struct dvb_demux *demux, const u8 *buf, size_t count)
+void mediatree_dvb_dmx_swfilter_204(struct dvb_demux *demux, const u8 *buf, size_t count)
 {
-	_dvb_dmx_swfilter(demux, buf, count, 204);
+	_mediatree_dvb_dmx_swfilter(demux, buf, count, 204);
 }
-EXPORT_SYMBOL(dvb_dmx_swfilter_204);
+EXPORT_SYMBOL(mediatree_dvb_dmx_swfilter_204);
 
-void dvb_dmx_swfilter_raw(struct dvb_demux *demux, const u8 *buf, size_t count)
+void mediatree_dvb_dmx_swfilter_raw(struct dvb_demux *demux, const u8 *buf, size_t count)
 {
 	unsigned long flags;
 
@@ -612,7 +612,7 @@ void dvb_dmx_swfilter_raw(struct dvb_demux *demux, const u8 *buf, size_t count)
 
 	spin_unlock_irqrestore(&demux->lock, flags);
 }
-EXPORT_SYMBOL(dvb_dmx_swfilter_raw);
+EXPORT_SYMBOL(mediatree_dvb_dmx_swfilter_raw);
 
 static struct dvb_demux_filter *dvb_dmx_filter_alloc(struct dvb_demux *demux)
 {
@@ -1152,7 +1152,7 @@ static int dvbdmx_write(struct dmx_demux *demux, const char __user *buf, size_t
 		kfree(p);
 		return -ERESTARTSYS;
 	}
-	dvb_dmx_swfilter(dvbdemux, p, count);
+	mediatree_dvb_dmx_swfilter(dvbdemux, p, count);
 	kfree(p);
 	mutex_unlock(&dvbdemux->mutex);
 
@@ -1232,7 +1232,7 @@ static int dvbdmx_get_pes_pids(struct dmx_demux *demux, u16 * pids)
 	return 0;
 }
 
-int dvb_dmx_init(struct dvb_demux *dvbdemux)
+int mediatree_dvb_dmx_init(struct dvb_demux *dvbdemux)
 {
 	int i;
 	struct dmx_demux *dmx = &dvbdemux->dmx;
@@ -1307,13 +1307,13 @@ int dvb_dmx_init(struct dvb_demux *dvbdemux)
 	return 0;
 }
 
-EXPORT_SYMBOL(dvb_dmx_init);
+EXPORT_SYMBOL(mediatree_dvb_dmx_init);
 
-void dvb_dmx_release(struct dvb_demux *dvbdemux)
+void mediatree_dvb_dmx_release(struct dvb_demux *dvbdemux)
 {
 	vfree(dvbdemux->cnt_storage);
 	vfree(dvbdemux->filter);
 	vfree(dvbdemux->feed);
 }
 
-EXPORT_SYMBOL(dvb_dmx_release);
+EXPORT_SYMBOL(mediatree_dvb_dmx_release);
diff --git a/drivers/media/dvb-core/dvb_frontend.c b/drivers/media/dvb-core/dvb_frontend.c
index 97173f5..3b96404 100644
--- a/drivers/media/dvb-core/dvb_frontend.c
+++ b/drivers/media/dvb-core/dvb_frontend.c
@@ -137,7 +137,7 @@ static void __dvb_frontend_free(struct dvb_frontend *fe)
 	struct dvb_frontend_private *fepriv = fe->frontend_priv;
 
 	if (fepriv)
-		dvb_free_device(fepriv->dvbdev);
+		mediatree_dvb_free_device(fepriv->dvbdev);
 
 	dvb_frontend_invoke_release(fe, fe->ops.release);
 
@@ -341,14 +341,14 @@ static void dvb_frontend_init(struct dvb_frontend *fe)
 	}
 }
 
-void dvb_frontend_reinitialise(struct dvb_frontend *fe)
+void mediatree_dvb_frontend_reinitialise(struct dvb_frontend *fe)
 {
 	struct dvb_frontend_private *fepriv = fe->frontend_priv;
 
 	fepriv->reinitialise = 1;
 	dvb_frontend_wakeup(fe);
 }
-EXPORT_SYMBOL(dvb_frontend_reinitialise);
+EXPORT_SYMBOL(mediatree_dvb_frontend_reinitialise);
 
 static void dvb_frontend_swzigzag_update_delay(struct dvb_frontend_private *fepriv, int locked)
 {
@@ -836,7 +836,7 @@ static void dvb_frontend_stop(struct dvb_frontend *fe)
  * the dish tone command at the satellite subsystem. The precision is improved
  * by using a scheduled msleep followed by udelay for the remainder.
  */
-void dvb_frontend_sleep_until(ktime_t *waketime, u32 add_usec)
+void mediatree_dvb_frontend_sleep_until(ktime_t *waketime, u32 add_usec)
 {
 	s32 delta;
 
@@ -849,7 +849,7 @@ void dvb_frontend_sleep_until(ktime_t *waketime, u32 add_usec)
 	if (delta > 0)
 		udelay(delta);
 }
-EXPORT_SYMBOL(dvb_frontend_sleep_until);
+EXPORT_SYMBOL(mediatree_dvb_frontend_sleep_until);
 
 static int dvb_frontend_start(struct dvb_frontend *fe)
 {
@@ -2634,7 +2634,7 @@ static int dvb_frontend_handle_ioctl(struct file *file,
 			 * a 32ms 18V to the switch
 			 */
 			fe->ops.set_voltage(fe, SEC_VOLTAGE_18);
-			dvb_frontend_sleep_until(&nexttime, 32000);
+			mediatree_dvb_frontend_sleep_until(&nexttime, 32000);
 
 			for (i = 0; i < 9; i++) {
 				if (dvb_frontend_debug)
@@ -2646,7 +2646,7 @@ static int dvb_frontend_handle_ioctl(struct file *file,
 				}
 				swcmd = swcmd >> 1;
 				if (i != 8)
-					dvb_frontend_sleep_until(&nexttime, 8000);
+					mediatree_dvb_frontend_sleep_until(&nexttime, 8000);
 			}
 			if (dvb_frontend_debug) {
 				dprintk("(adapter %d): switch delay (should be 32k followed by all 8k)\n",
@@ -2807,7 +2807,7 @@ static int dvb_frontend_open(struct inode *inode, struct file *file)
 		fepriv->reinitialise = 1;
 	}
 
-	if ((ret = dvb_generic_open(inode, file)) < 0)
+	if ((ret = mediatree_dvb_generic_open(inode, file)) < 0)
 		goto err1;
 
 	if ((file->f_flags & O_ACCMODE) != O_RDONLY) {
@@ -2860,7 +2860,7 @@ err3:
 	mutex_unlock(&fe->dvb->mdev_lock);
 err2:
 #endif
-	dvb_generic_release(inode, file);
+	mediatree_dvb_generic_release(inode, file);
 err1:
 	if (dvbdev->users == -1 && fe->ops.ts_bus_ctrl)
 		fe->ops.ts_bus_ctrl(fe, 0);
@@ -2884,7 +2884,7 @@ static int dvb_frontend_release(struct inode *inode, struct file *file)
 		mb();
 	}
 
-	ret = dvb_generic_release(inode, file);
+	ret = mediatree_dvb_generic_release(inode, file);
 
 	if (dvbdev->users == -1) {
 		wake_up(&fepriv->wait_queue);
@@ -2921,7 +2921,7 @@ static const struct file_operations dvb_frontend_fops = {
 	.llseek		= noop_llseek,
 };
 
-int dvb_frontend_suspend(struct dvb_frontend *fe)
+int mediatree_dvb_frontend_suspend(struct dvb_frontend *fe)
 {
 	int ret = 0;
 
@@ -2940,9 +2940,9 @@ int dvb_frontend_suspend(struct dvb_frontend *fe)
 
 	return ret;
 }
-EXPORT_SYMBOL(dvb_frontend_suspend);
+EXPORT_SYMBOL(mediatree_dvb_frontend_suspend);
 
-int dvb_frontend_resume(struct dvb_frontend *fe)
+int mediatree_dvb_frontend_resume(struct dvb_frontend *fe)
 {
 	struct dvb_frontend_private *fepriv = fe->frontend_priv;
 	int ret = 0;
@@ -2972,9 +2972,9 @@ int dvb_frontend_resume(struct dvb_frontend *fe)
 
 	return ret;
 }
-EXPORT_SYMBOL(dvb_frontend_resume);
+EXPORT_SYMBOL(mediatree_dvb_frontend_resume);
 
-int dvb_register_frontend(struct dvb_adapter *dvb,
+int mediatree_dvb_register_frontend(struct dvb_adapter *dvb,
 			  struct dvb_frontend *fe)
 {
 	struct dvb_frontend_private *fepriv;
@@ -3004,8 +3004,8 @@ int dvb_register_frontend(struct dvb_adapter *dvb,
 
 	/*
 	 * After initialization, there need to be two references: one
-	 * for dvb_unregister_frontend(), and another one for
-	 * dvb_frontend_detach().
+	 * for mediatree_dvb_unregister_frontend(), and another one for
+	 * mediatree_dvb_frontend_detach().
 	 */
 	dvb_frontend_get(fe);
 
@@ -3020,7 +3020,7 @@ int dvb_register_frontend(struct dvb_adapter *dvb,
 		 "DVB: registering adapter %i frontend %i (%s)...\n",
 		 fe->dvb->num, fe->id, fe->ops.info.name);
 
-	dvb_register_device(fe->dvb, &fepriv->dvbdev, &dvbdev_template,
+	mediatree_dvb_register_device(fe->dvb, &fepriv->dvbdev, &dvbdev_template,
 			    fe, DVB_DEVICE_FRONTEND, 0);
 
 	/*
@@ -3034,9 +3034,9 @@ int dvb_register_frontend(struct dvb_adapter *dvb,
 	mutex_unlock(&frontend_mutex);
 	return 0;
 }
-EXPORT_SYMBOL(dvb_register_frontend);
+EXPORT_SYMBOL(mediatree_dvb_register_frontend);
 
-int dvb_unregister_frontend(struct dvb_frontend *fe)
+int mediatree_dvb_unregister_frontend(struct dvb_frontend *fe)
 {
 	struct dvb_frontend_private *fepriv = fe->frontend_priv;
 
@@ -3044,14 +3044,14 @@ int dvb_unregister_frontend(struct dvb_frontend *fe)
 
 	mutex_lock(&frontend_mutex);
 	dvb_frontend_stop(fe);
-	dvb_remove_device(fepriv->dvbdev);
+	mediatree_dvb_remove_device(fepriv->dvbdev);
 
 	/* fe is invalid now */
 	mutex_unlock(&frontend_mutex);
 	dvb_frontend_put(fe);
 	return 0;
 }
-EXPORT_SYMBOL(dvb_unregister_frontend);
+EXPORT_SYMBOL(mediatree_dvb_unregister_frontend);
 
 static void dvb_frontend_invoke_release(struct dvb_frontend *fe,
 					void (*release)(struct dvb_frontend *fe))
@@ -3064,11 +3064,11 @@ static void dvb_frontend_invoke_release(struct dvb_frontend *fe,
 	}
 }
 
-void dvb_frontend_detach(struct dvb_frontend *fe)
+void mediatree_dvb_frontend_detach(struct dvb_frontend *fe)
 {
 	dvb_frontend_invoke_release(fe, fe->ops.release_sec);
 	dvb_frontend_invoke_release(fe, fe->ops.tuner_ops.release);
 	dvb_frontend_invoke_release(fe, fe->ops.analog_ops.release);
 	dvb_frontend_put(fe);
 }
-EXPORT_SYMBOL(dvb_frontend_detach);
+EXPORT_SYMBOL(mediatree_dvb_frontend_detach);
diff --git a/drivers/media/dvb-core/dvb_math.c b/drivers/media/dvb-core/dvb_math.c
index dc90564..455b3e4 100644
--- a/drivers/media/dvb-core/dvb_math.c
+++ b/drivers/media/dvb-core/dvb_math.c
@@ -56,7 +56,7 @@ static const unsigned short logtable[256] = {
 	0xfa2f, 0xfaea, 0xfba5, 0xfc60, 0xfd1a, 0xfdd4, 0xfe8e, 0xff47
 };
 
-unsigned int intlog2(u32 value)
+unsigned int mediatree_intlog2(u32 value)
 {
 	/**
 	 *	returns: log2(value) * 2^24
@@ -114,9 +114,9 @@ unsigned int intlog2(u32 value)
 	/* now we return the result */
 	return ((msb << 24) + (logtable[logentry] << 8) + interpolation);
 }
-EXPORT_SYMBOL(intlog2);
+EXPORT_SYMBOL(mediatree_intlog2);
 
-unsigned int intlog10(u32 value)
+unsigned int mediatree_intlog10(u32 value)
 {
 	/**
 	 *	returns: log10(value) * 2^24
@@ -129,7 +129,7 @@ unsigned int intlog10(u32 value)
 		return 0;
 	}
 
-	log = intlog2(value);
+	log = mediatree_intlog2(value);
 
 	/**
 	 *	we use the following method:
@@ -138,4 +138,4 @@ unsigned int intlog10(u32 value)
 
 	return (log * 646456993) >> 31;
 }
-EXPORT_SYMBOL(intlog10);
+EXPORT_SYMBOL(mediatree_intlog10);
diff --git a/drivers/media/dvb-core/dvb_net.c b/drivers/media/dvb-core/dvb_net.c
index 82a09f5..d11a50f 100644
--- a/drivers/media/dvb-core/dvb_net.c
+++ b/drivers/media/dvb-core/dvb_net.c
@@ -1570,7 +1570,7 @@ static int dvb_net_close(struct inode *inode, struct file *file)
 	struct dvb_device *dvbdev = file->private_data;
 	struct dvb_net *dvbnet = dvbdev->priv;
 
-	dvb_generic_release(inode, file);
+	mediatree_dvb_generic_release(inode, file);
 
 	if(dvbdev->users == 1 && dvbnet->exit == 1)
 		wake_up(&dvbdev->wait_queue);
@@ -1581,7 +1581,7 @@ static int dvb_net_close(struct inode *inode, struct file *file)
 static const struct file_operations dvb_net_fops = {
 	.owner = THIS_MODULE,
 	.unlocked_ioctl = dvb_net_ioctl,
-	.open =	dvb_generic_open,
+	.open =	mediatree_dvb_generic_open,
 	.release = dvb_net_close,
 	.llseek = noop_llseek,
 };
@@ -1596,7 +1596,7 @@ static const struct dvb_device dvbdev_net = {
 	.fops = &dvb_net_fops,
 };
 
-void dvb_net_release (struct dvb_net *dvbnet)
+void mediatree_dvb_net_release (struct dvb_net *dvbnet)
 {
 	int i;
 
@@ -1605,7 +1605,7 @@ void dvb_net_release (struct dvb_net *dvbnet)
 		wait_event(dvbnet->dvbdev->wait_queue,
 				dvbnet->dvbdev->users==1);
 
-	dvb_unregister_device(dvbnet->dvbdev);
+	mediatree_dvb_unregister_device(dvbnet->dvbdev);
 
 	for (i=0; i<DVB_NET_DEVICES_MAX; i++) {
 		if (!dvbnet->state[i])
@@ -1613,10 +1613,10 @@ void dvb_net_release (struct dvb_net *dvbnet)
 		dvb_net_remove_if(dvbnet, i);
 	}
 }
-EXPORT_SYMBOL(dvb_net_release);
+EXPORT_SYMBOL(mediatree_dvb_net_release);
 
 
-int dvb_net_init (struct dvb_adapter *adap, struct dvb_net *dvbnet,
+int mediatree_dvb_net_init (struct dvb_adapter *adap, struct dvb_net *dvbnet,
 		  struct dmx_demux *dmx)
 {
 	int i;
@@ -1627,7 +1627,7 @@ int dvb_net_init (struct dvb_adapter *adap, struct dvb_net *dvbnet,
 	for (i=0; i<DVB_NET_DEVICES_MAX; i++)
 		dvbnet->state[i] = 0;
 
-	return dvb_register_device(adap, &dvbnet->dvbdev, &dvbdev_net,
+	return mediatree_dvb_register_device(adap, &dvbnet->dvbdev, &dvbdev_net,
 			     dvbnet, DVB_DEVICE_NET, 0);
 }
-EXPORT_SYMBOL(dvb_net_init);
+EXPORT_SYMBOL(mediatree_dvb_net_init);
diff --git a/drivers/media/dvb-core/dvb_ringbuffer.c b/drivers/media/dvb-core/dvb_ringbuffer.c
index d1d471a..c5fa3b3 100644
--- a/drivers/media/dvb-core/dvb_ringbuffer.c
+++ b/drivers/media/dvb-core/dvb_ringbuffer.c
@@ -35,7 +35,7 @@
 #define PKT_DISPOSED 1
 
 
-void dvb_ringbuffer_init(struct dvb_ringbuffer *rbuf, void *data, size_t len)
+void mediatree_dvb_ringbuffer_init(struct dvb_ringbuffer *rbuf, void *data, size_t len)
 {
 	rbuf->pread=rbuf->pwrite=0;
 	rbuf->data=data;
@@ -49,11 +49,11 @@ void dvb_ringbuffer_init(struct dvb_ringbuffer *rbuf, void *data, size_t len)
 
 
 
-int dvb_ringbuffer_empty(struct dvb_ringbuffer *rbuf)
+int mediatree_dvb_ringbuffer_empty(struct dvb_ringbuffer *rbuf)
 {
 	/* smp_load_acquire() to load write pointer on reader side
-	 * this pairs with smp_store_release() in dvb_ringbuffer_write(),
-	 * dvb_ringbuffer_write_user(), or dvb_ringbuffer_reset()
+	 * this pairs with smp_store_release() in mediatree_dvb_ringbuffer_write(),
+	 * mediatree_dvb_ringbuffer_write_user(), or dvb_ringbuffer_reset()
 	 *
 	 * for memory barriers also see Documentation/core-api/circular-buffers.rst
 	 */
@@ -62,13 +62,13 @@ int dvb_ringbuffer_empty(struct dvb_ringbuffer *rbuf)
 
 
 
-ssize_t dvb_ringbuffer_free(struct dvb_ringbuffer *rbuf)
+ssize_t mediatree_dvb_ringbuffer_free(struct dvb_ringbuffer *rbuf)
 {
 	ssize_t free;
 
 	/* READ_ONCE() to load read pointer on writer side
-	 * this pairs with smp_store_release() in dvb_ringbuffer_read(),
-	 * dvb_ringbuffer_read_user(), dvb_ringbuffer_flush(),
+	 * this pairs with smp_store_release() in mediatree_dvb_ringbuffer_read(),
+	 * mediatree_dvb_ringbuffer_read_user(), mediatree_dvb_ringbuffer_flush(),
 	 * or dvb_ringbuffer_reset()
 	 */
 	free = READ_ONCE(rbuf->pread) - rbuf->pwrite;
@@ -79,13 +79,13 @@ ssize_t dvb_ringbuffer_free(struct dvb_ringbuffer *rbuf)
 
 
 
-ssize_t dvb_ringbuffer_avail(struct dvb_ringbuffer *rbuf)
+ssize_t mediatree_dvb_ringbuffer_avail(struct dvb_ringbuffer *rbuf)
 {
 	ssize_t avail;
 
 	/* smp_load_acquire() to load write pointer on reader side
-	 * this pairs with smp_store_release() in dvb_ringbuffer_write(),
-	 * dvb_ringbuffer_write_user(), or dvb_ringbuffer_reset()
+	 * this pairs with smp_store_release() in mediatree_dvb_ringbuffer_write(),
+	 * mediatree_dvb_ringbuffer_write_user(), or dvb_ringbuffer_reset()
 	 */
 	avail = smp_load_acquire(&rbuf->pwrite) - rbuf->pread;
 	if (avail < 0)
@@ -95,18 +95,18 @@ ssize_t dvb_ringbuffer_avail(struct dvb_ringbuffer *rbuf)
 
 
 
-void dvb_ringbuffer_flush(struct dvb_ringbuffer *rbuf)
+void mediatree_dvb_ringbuffer_flush(struct dvb_ringbuffer *rbuf)
 {
-	/* dvb_ringbuffer_flush() counts as read operation
+	/* mediatree_dvb_ringbuffer_flush() counts as read operation
 	 * smp_load_acquire() to load write pointer
 	 * smp_store_release() to update read pointer, this ensures that the
-	 * correct pointer is visible for subsequent dvb_ringbuffer_free()
+	 * correct pointer is visible for subsequent mediatree_dvb_ringbuffer_free()
 	 * calls on other cpu cores
 	 */
 	smp_store_release(&rbuf->pread, smp_load_acquire(&rbuf->pwrite));
 	rbuf->error = 0;
 }
-EXPORT_SYMBOL(dvb_ringbuffer_flush);
+EXPORT_SYMBOL(mediatree_dvb_ringbuffer_flush);
 
 void dvb_ringbuffer_reset(struct dvb_ringbuffer *rbuf)
 {
@@ -119,18 +119,18 @@ void dvb_ringbuffer_reset(struct dvb_ringbuffer *rbuf)
 	rbuf->error = 0;
 }
 
-void dvb_ringbuffer_flush_spinlock_wakeup(struct dvb_ringbuffer *rbuf)
+void mediatree_dvb_ringbuffer_flush_spinlock_wakeup(struct dvb_ringbuffer *rbuf)
 {
 	unsigned long flags;
 
 	spin_lock_irqsave(&rbuf->lock, flags);
-	dvb_ringbuffer_flush(rbuf);
+	mediatree_dvb_ringbuffer_flush(rbuf);
 	spin_unlock_irqrestore(&rbuf->lock, flags);
 
 	wake_up(&rbuf->queue);
 }
 
-ssize_t dvb_ringbuffer_read_user(struct dvb_ringbuffer *rbuf, u8 __user *buf, size_t len)
+ssize_t mediatree_dvb_ringbuffer_read_user(struct dvb_ringbuffer *rbuf, u8 __user *buf, size_t len)
 {
 	size_t todo = len;
 	size_t split;
@@ -143,7 +143,7 @@ ssize_t dvb_ringbuffer_read_user(struct dvb_ringbuffer *rbuf, u8 __user *buf, si
 		todo -= split;
 		/* smp_store_release() for read pointer update to ensure
 		 * that buf is not overwritten until read is complete,
-		 * this pairs with READ_ONCE() in dvb_ringbuffer_free()
+		 * this pairs with READ_ONCE() in mediatree_dvb_ringbuffer_free()
 		 */
 		smp_store_release(&rbuf->pread, 0);
 	}
@@ -156,7 +156,7 @@ ssize_t dvb_ringbuffer_read_user(struct dvb_ringbuffer *rbuf, u8 __user *buf, si
 	return len;
 }
 
-void dvb_ringbuffer_read(struct dvb_ringbuffer *rbuf, u8 *buf, size_t len)
+void mediatree_dvb_ringbuffer_read(struct dvb_ringbuffer *rbuf, u8 *buf, size_t len)
 {
 	size_t todo = len;
 	size_t split;
@@ -168,7 +168,7 @@ void dvb_ringbuffer_read(struct dvb_ringbuffer *rbuf, u8 *buf, size_t len)
 		todo -= split;
 		/* smp_store_release() for read pointer update to ensure
 		 * that buf is not overwritten until read is complete,
-		 * this pairs with READ_ONCE() in dvb_ringbuffer_free()
+		 * this pairs with READ_ONCE() in mediatree_dvb_ringbuffer_free()
 		 */
 		smp_store_release(&rbuf->pread, 0);
 	}
@@ -179,7 +179,7 @@ void dvb_ringbuffer_read(struct dvb_ringbuffer *rbuf, u8 *buf, size_t len)
 }
 
 
-ssize_t dvb_ringbuffer_write(struct dvb_ringbuffer *rbuf, const u8 *buf, size_t len)
+ssize_t mediatree_dvb_ringbuffer_write(struct dvb_ringbuffer *rbuf, const u8 *buf, size_t len)
 {
 	size_t todo = len;
 	size_t split;
@@ -193,7 +193,7 @@ ssize_t dvb_ringbuffer_write(struct dvb_ringbuffer *rbuf, const u8 *buf, size_t
 		/* smp_store_release() for write pointer update to ensure that
 		 * written data is visible on other cpu cores before the pointer
 		 * update, this pairs with smp_load_acquire() in
-		 * dvb_ringbuffer_empty() or dvb_ringbuffer_avail()
+		 * mediatree_dvb_ringbuffer_empty() or mediatree_dvb_ringbuffer_avail()
 		 */
 		smp_store_release(&rbuf->pwrite, 0);
 	}
@@ -204,7 +204,7 @@ ssize_t dvb_ringbuffer_write(struct dvb_ringbuffer *rbuf, const u8 *buf, size_t
 	return len;
 }
 
-ssize_t dvb_ringbuffer_write_user(struct dvb_ringbuffer *rbuf,
+ssize_t mediatree_dvb_ringbuffer_write_user(struct dvb_ringbuffer *rbuf,
 				  const u8 __user *buf, size_t len)
 {
 	int status;
@@ -222,7 +222,7 @@ ssize_t dvb_ringbuffer_write_user(struct dvb_ringbuffer *rbuf,
 		/* smp_store_release() for write pointer update to ensure that
 		 * written data is visible on other cpu cores before the pointer
 		 * update, this pairs with smp_load_acquire() in
-		 * dvb_ringbuffer_empty() or dvb_ringbuffer_avail()
+		 * mediatree_dvb_ringbuffer_empty() or mediatree_dvb_ringbuffer_avail()
 		 */
 		smp_store_release(&rbuf->pwrite, 0);
 	}
@@ -243,7 +243,7 @@ ssize_t dvb_ringbuffer_pkt_write(struct dvb_ringbuffer *rbuf, u8* buf, size_t le
 	DVB_RINGBUFFER_WRITE_BYTE(rbuf, len >> 8);
 	DVB_RINGBUFFER_WRITE_BYTE(rbuf, len & 0xff);
 	DVB_RINGBUFFER_WRITE_BYTE(rbuf, PKT_READY);
-	status = dvb_ringbuffer_write(rbuf, buf, len);
+	status = mediatree_dvb_ringbuffer_write(rbuf, buf, len);
 
 	if (status < 0) rbuf->pwrite = oldpwrite;
 	return status;
@@ -309,7 +309,7 @@ void dvb_ringbuffer_pkt_dispose(struct dvb_ringbuffer *rbuf, size_t idx)
 	rbuf->data[(idx + 2) % rbuf->size] = PKT_DISPOSED;
 
 	// clean up disposed packets
-	while(dvb_ringbuffer_avail(rbuf) > DVB_RINGBUFFER_PKTHDRSIZE) {
+	while(mediatree_dvb_ringbuffer_avail(rbuf) > DVB_RINGBUFFER_PKTHDRSIZE) {
 		if (DVB_RINGBUFFER_PEEK(rbuf, 2) == PKT_DISPOSED) {
 			pktlen = DVB_RINGBUFFER_PEEK(rbuf, 0) << 8;
 			pktlen |= DVB_RINGBUFFER_PEEK(rbuf, 1);
@@ -337,7 +337,7 @@ ssize_t dvb_ringbuffer_pkt_next(struct dvb_ringbuffer *rbuf, size_t idx, size_t*
 
 	consumed = (idx - rbuf->pread) % rbuf->size;
 
-	while((dvb_ringbuffer_avail(rbuf) - consumed) > DVB_RINGBUFFER_PKTHDRSIZE) {
+	while((mediatree_dvb_ringbuffer_avail(rbuf) - consumed) > DVB_RINGBUFFER_PKTHDRSIZE) {
 
 		curpktlen = rbuf->data[idx] << 8;
 		curpktlen |= rbuf->data[(idx + 1) % rbuf->size];
@@ -358,12 +358,12 @@ ssize_t dvb_ringbuffer_pkt_next(struct dvb_ringbuffer *rbuf, size_t idx, size_t*
 
 
 
-EXPORT_SYMBOL(dvb_ringbuffer_init);
-EXPORT_SYMBOL(dvb_ringbuffer_empty);
-EXPORT_SYMBOL(dvb_ringbuffer_free);
-EXPORT_SYMBOL(dvb_ringbuffer_avail);
-EXPORT_SYMBOL(dvb_ringbuffer_flush_spinlock_wakeup);
-EXPORT_SYMBOL(dvb_ringbuffer_read_user);
-EXPORT_SYMBOL(dvb_ringbuffer_read);
-EXPORT_SYMBOL(dvb_ringbuffer_write);
-EXPORT_SYMBOL(dvb_ringbuffer_write_user);
+EXPORT_SYMBOL(mediatree_dvb_ringbuffer_init);
+EXPORT_SYMBOL(mediatree_dvb_ringbuffer_empty);
+EXPORT_SYMBOL(mediatree_dvb_ringbuffer_free);
+EXPORT_SYMBOL(mediatree_dvb_ringbuffer_avail);
+EXPORT_SYMBOL(mediatree_dvb_ringbuffer_flush_spinlock_wakeup);
+EXPORT_SYMBOL(mediatree_dvb_ringbuffer_read_user);
+EXPORT_SYMBOL(mediatree_dvb_ringbuffer_read);
+EXPORT_SYMBOL(mediatree_dvb_ringbuffer_write);
+EXPORT_SYMBOL(mediatree_dvb_ringbuffer_write_user);
diff --git a/drivers/media/dvb-core/dvbdev.c b/drivers/media/dvb-core/dvbdev.c
index ea038aa..de19d9f 100644
--- a/drivers/media/dvb-core/dvbdev.c
+++ b/drivers/media/dvb-core/dvbdev.c
@@ -122,7 +122,7 @@ static const struct file_operations dvb_device_fops =
 
 static struct cdev dvb_device_cdev;
 
-int dvb_generic_open(struct inode *inode, struct file *file)
+int mediatree_dvb_generic_open(struct inode *inode, struct file *file)
 {
 	struct dvb_device *dvbdev = file->private_data;
 
@@ -145,10 +145,10 @@ int dvb_generic_open(struct inode *inode, struct file *file)
 	dvbdev->users--;
 	return 0;
 }
-EXPORT_SYMBOL(dvb_generic_open);
+EXPORT_SYMBOL(mediatree_dvb_generic_open);
 
 
-int dvb_generic_release(struct inode *inode, struct file *file)
+int mediatree_dvb_generic_release(struct inode *inode, struct file *file)
 {
 	struct dvb_device *dvbdev = file->private_data;
 
@@ -164,10 +164,10 @@ int dvb_generic_release(struct inode *inode, struct file *file)
 	dvbdev->users++;
 	return 0;
 }
-EXPORT_SYMBOL(dvb_generic_release);
+EXPORT_SYMBOL(mediatree_dvb_generic_release);
 
 
-long dvb_generic_ioctl(struct file *file,
+long mediatree_dvb_generic_ioctl(struct file *file,
 		       unsigned int cmd, unsigned long arg)
 {
 	struct dvb_device *dvbdev = file->private_data;
@@ -180,7 +180,7 @@ long dvb_generic_ioctl(struct file *file,
 
 	return dvb_usercopy(file, cmd, arg, dvbdev->kernel_ioctl);
 }
-EXPORT_SYMBOL(dvb_generic_ioctl);
+EXPORT_SYMBOL(mediatree_dvb_generic_ioctl);
 
 
 static int dvbdev_get_free_id (struct dvb_adapter *adap, int type)
@@ -444,7 +444,7 @@ static int dvb_register_media_device(struct dvb_device *dvbdev,
 	return 0;
 }
 
-int dvb_register_device(struct dvb_adapter *adap, struct dvb_device **pdvbdev,
+int mediatree_dvb_register_device(struct dvb_adapter *adap, struct dvb_device **pdvbdev,
 			const struct dvb_device *template, void *priv,
 			enum dvb_device_type type, int demux_sink_pads)
 {
@@ -544,10 +544,10 @@ int dvb_register_device(struct dvb_adapter *adap, struct dvb_device **pdvbdev,
 
 	return 0;
 }
-EXPORT_SYMBOL(dvb_register_device);
+EXPORT_SYMBOL(mediatree_dvb_register_device);
 
 
-void dvb_remove_device(struct dvb_device *dvbdev)
+void mediatree_dvb_remove_device(struct dvb_device *dvbdev)
 {
 	if (!dvbdev)
 		return;
@@ -562,10 +562,10 @@ void dvb_remove_device(struct dvb_device *dvbdev)
 
 	list_del (&dvbdev->list_head);
 }
-EXPORT_SYMBOL(dvb_remove_device);
+EXPORT_SYMBOL(mediatree_dvb_remove_device);
 
 
-void dvb_free_device(struct dvb_device *dvbdev)
+void mediatree_dvb_free_device(struct dvb_device *dvbdev)
 {
 	if (!dvbdev)
 		return;
@@ -573,15 +573,15 @@ void dvb_free_device(struct dvb_device *dvbdev)
 	kfree (dvbdev->fops);
 	kfree (dvbdev);
 }
-EXPORT_SYMBOL(dvb_free_device);
+EXPORT_SYMBOL(mediatree_dvb_free_device);
 
 
-void dvb_unregister_device(struct dvb_device *dvbdev)
+void mediatree_dvb_unregister_device(struct dvb_device *dvbdev)
 {
-	dvb_remove_device(dvbdev);
-	dvb_free_device(dvbdev);
+	mediatree_dvb_remove_device(dvbdev);
+	mediatree_dvb_free_device(dvbdev);
 }
-EXPORT_SYMBOL(dvb_unregister_device);
+EXPORT_SYMBOL(mediatree_dvb_unregister_device);
 
 
 #ifdef CONFIG_MEDIA_CONTROLLER_DVB
@@ -834,7 +834,7 @@ static int dvbdev_get_free_adapter_num (void)
 }
 
 
-int dvb_register_adapter(struct dvb_adapter *adap, const char *name,
+int mediatree_dvb_register_adapter(struct dvb_adapter *adap, const char *name,
 			 struct module *module, struct device *device,
 			 short *adapter_nums)
 {
@@ -883,17 +883,17 @@ int dvb_register_adapter(struct dvb_adapter *adap, const char *name,
 
 	return num;
 }
-EXPORT_SYMBOL(dvb_register_adapter);
+EXPORT_SYMBOL(mediatree_dvb_register_adapter);
 
 
-int dvb_unregister_adapter(struct dvb_adapter *adap)
+int mediatree_dvb_unregister_adapter(struct dvb_adapter *adap)
 {
 	mutex_lock(&dvbdev_register_lock);
 	list_del (&adap->list_head);
 	mutex_unlock(&dvbdev_register_lock);
 	return 0;
 }
-EXPORT_SYMBOL(dvb_unregister_adapter);
+EXPORT_SYMBOL(mediatree_dvb_unregister_adapter);
 
 /* if the miracle happens and "generic_usercopy()" is included into
    the kernel, then this can vanish. please don't make the mistake and
@@ -1033,7 +1033,7 @@ static int __init init_dvbdev(void)
 	int retval;
 	dev_t dev = MKDEV(DVB_MAJOR, 0);
 
-	if ((retval = register_chrdev_region(dev, MAX_DVB_MINORS, "DVB")) != 0) {
+	if ((retval = register_chrdev_region(dev, MAX_DVB_MINORS, "MEDIATREE-DVB")) != 0) {
 		pr_err("dvb-core: unable to get major %d\n", DVB_MAJOR);
 		return retval;
 	}
@@ -1044,7 +1044,7 @@ static int __init init_dvbdev(void)
 		goto error;
 	}
 
-	dvb_class = class_create(THIS_MODULE, "dvb");
+	dvb_class = class_create(THIS_MODULE, "mediatree-dvb");
 	if (IS_ERR(dvb_class)) {
 		retval = PTR_ERR(dvb_class);
 		goto error;
diff --git a/drivers/media/dvb-frontends/af9013.c b/drivers/media/dvb-frontends/af9013.c
index 7d7c341..db776b4 100644
--- a/drivers/media/dvb-frontends/af9013.c
+++ b/drivers/media/dvb-frontends/af9013.c
@@ -670,8 +670,8 @@ static int af9013_read_status(struct dvb_frontend *fe, enum fe_status *status)
 			 * value [653799, 1689999], 2.6 / 13 = 3355443
 			 */
 			utmp1 = clamp(utmp1, 653799U, 1689999U);
-			utmp1 = ((u64)(intlog10(utmp1)
-				- intlog10(1690000 - utmp1)
+			utmp1 = ((u64)(mediatree_intlog10(utmp1)
+				- mediatree_intlog10(1690000 - utmp1)
 				+ 3355443) * 13 * 1000) >> 24;
 			break;
 		case 1:
@@ -681,8 +681,8 @@ static int af9013_read_status(struct dvb_frontend *fe, enum fe_status *status)
 			 * value [371105, 827999], 15.7 / 6 = 43900382
 			 */
 			utmp1 = clamp(utmp1, 371105U, 827999U);
-			utmp1 = ((u64)(intlog10(utmp1 - 370000)
-				- intlog10(828000 - utmp1)
+			utmp1 = ((u64)(mediatree_intlog10(utmp1 - 370000)
+				- mediatree_intlog10(828000 - utmp1)
 				+ 43900382) * 6 * 1000) >> 24;
 			break;
 		case 2:
@@ -692,8 +692,8 @@ static int af9013_read_status(struct dvb_frontend *fe, enum fe_status *status)
 			 * value [193246, 424999], 23.8 / 8 = 49912218
 			 */
 			utmp1 = clamp(utmp1, 193246U, 424999U);
-			utmp1 = ((u64)(intlog10(utmp1 - 193000)
-				- intlog10(425000 - utmp1)
+			utmp1 = ((u64)(mediatree_intlog10(utmp1 - 193000)
+				- mediatree_intlog10(425000 - utmp1)
 				+ 49912218) * 8 * 1000) >> 24;
 			break;
 		default:
diff --git a/drivers/media/dvb-frontends/af9033.c b/drivers/media/dvb-frontends/af9033.c
index 785c49b..10ecf12 100644
--- a/drivers/media/dvb-frontends/af9033.c
+++ b/drivers/media/dvb-frontends/af9033.c
@@ -729,8 +729,8 @@ static int af9033_read_status(struct dvb_frontend *fe, enum fe_status *status)
 			 * value [653799, 1689999], 2.6 / 13 = 3355443
 			 */
 			utmp1 = clamp(utmp1, 653799U, 1689999U);
-			utmp1 = ((u64)(intlog10(utmp1)
-				 - intlog10(1690000 - utmp1)
+			utmp1 = ((u64)(mediatree_intlog10(utmp1)
+				 - mediatree_intlog10(1690000 - utmp1)
 				 + 3355443) * 13 * 1000) >> 24;
 			break;
 		case 1:
@@ -740,8 +740,8 @@ static int af9033_read_status(struct dvb_frontend *fe, enum fe_status *status)
 			 * value [371105, 827999], 15.7 / 6 = 43900382
 			 */
 			utmp1 = clamp(utmp1, 371105U, 827999U);
-			utmp1 = ((u64)(intlog10(utmp1 - 370000)
-				 - intlog10(828000 - utmp1)
+			utmp1 = ((u64)(mediatree_intlog10(utmp1 - 370000)
+				 - mediatree_intlog10(828000 - utmp1)
 				 + 43900382) * 6 * 1000) >> 24;
 			break;
 		case 2:
@@ -751,8 +751,8 @@ static int af9033_read_status(struct dvb_frontend *fe, enum fe_status *status)
 			 * value [193246, 424999], 23.8 / 8 = 49912218
 			 */
 			utmp1 = clamp(utmp1, 193246U, 424999U);
-			utmp1 = ((u64)(intlog10(utmp1 - 193000)
-				 - intlog10(425000 - utmp1)
+			utmp1 = ((u64)(mediatree_intlog10(utmp1 - 193000)
+				 - mediatree_intlog10(425000 - utmp1)
 				 + 49912218) * 8 * 1000) >> 24;
 			break;
 		default:
diff --git a/drivers/media/dvb-frontends/cxd2820r_c.c b/drivers/media/dvb-frontends/cxd2820r_c.c
index 0ba3829..2811416 100644
--- a/drivers/media/dvb-frontends/cxd2820r_c.c
+++ b/drivers/media/dvb-frontends/cxd2820r_c.c
@@ -215,7 +215,7 @@ int cxd2820r_read_status_c(struct dvb_frontend *fe, enum fe_status *status)
 
 		#define CXD2820R_LOG2_E_24 24204406 /* log2(e) << 24 */
 		if (utmp)
-			cnr = div_u64((u64)(intlog2(const_b) - intlog2(utmp))
+			cnr = div_u64((u64)(mediatree_intlog2(const_b) - mediatree_intlog2(utmp))
 				      * const_a, CXD2820R_LOG2_E_24);
 		else
 			cnr = 0;
diff --git a/drivers/media/dvb-frontends/cxd2820r_t.c b/drivers/media/dvb-frontends/cxd2820r_t.c
index fbdfa6b..bd278db 100644
--- a/drivers/media/dvb-frontends/cxd2820r_t.c
+++ b/drivers/media/dvb-frontends/cxd2820r_t.c
@@ -308,8 +308,8 @@ int cxd2820r_read_status_t(struct dvb_frontend *fe, enum fe_status *status)
 
 		utmp = buf[0] << 8 | buf[1] << 0;
 		if (utmp)
-			cnr = div_u64((u64)(intlog10(utmp)
-				      - intlog10(32000 - utmp) + 55532585)
+			cnr = div_u64((u64)(mediatree_intlog10(utmp)
+				      - mediatree_intlog10(32000 - utmp) + 55532585)
 				      * 10000, (1 << 24));
 		else
 			cnr = 0;
diff --git a/drivers/media/dvb-frontends/cxd2820r_t2.c b/drivers/media/dvb-frontends/cxd2820r_t2.c
index 34ef2bb..2506ea1 100644
--- a/drivers/media/dvb-frontends/cxd2820r_t2.c
+++ b/drivers/media/dvb-frontends/cxd2820r_t2.c
@@ -335,7 +335,7 @@ int cxd2820r_read_status_t2(struct dvb_frontend *fe, enum fe_status *status)
 		utmp = utmp & 0x0fff;
 		#define CXD2820R_LOG10_8_24 15151336 /* log10(8) << 24 */
 		if (utmp)
-			cnr = div_u64((u64)(intlog10(utmp)
+			cnr = div_u64((u64)(mediatree_intlog10(utmp)
 				      - CXD2820R_LOG10_8_24) * 10000,
 				      (1 << 24));
 		else
diff --git a/drivers/media/dvb-frontends/cxd2841er.c b/drivers/media/dvb-frontends/cxd2841er.c
index 5431f92..bea9834 100644
--- a/drivers/media/dvb-frontends/cxd2841er.c
+++ b/drivers/media/dvb-frontends/cxd2841er.c
@@ -30,7 +30,7 @@
 #define MAX_WRITE_REGSIZE	16
 #define LOG2_E_100X 144
 
-#define INTLOG10X100(x) ((u32) (((u64) intlog10(x) * 100) >> 24))
+#define INTLOG10X100(x) ((u32) (((u64) mediatree_intlog10(x) * 100) >> 24))
 
 /* DVB-C constellation */
 enum sony_dvbc_constellation_t {
@@ -1735,7 +1735,7 @@ done:
 
 static uint32_t sony_log(uint32_t x)
 {
-	return (((10000>>8)*(intlog2(x)>>16) + LOG2_E_100X/2)/LOG2_E_100X);
+	return (((10000>>8)*(mediatree_intlog2(x)>>16) + LOG2_E_100X/2)/LOG2_E_100X);
 }
 
 static int cxd2841er_read_snr_c(struct cxd2841er_priv *priv, u32 *snr)
@@ -1871,7 +1871,7 @@ static int cxd2841er_read_snr_i(struct cxd2841er_priv *priv, u32 *snr)
 				"%s(): reg value out of range\n", __func__);
 		return 0;
 	}
-	*snr = 10000 * (intlog10(reg) >> 24) - 9031;
+	*snr = 10000 * (mediatree_intlog10(reg) >> 24) - 9031;
 	return 0;
 }
 
diff --git a/drivers/media/dvb-frontends/cxd2880/cxd2880_tnrdmd_dvbt2_mon.c b/drivers/media/dvb-frontends/cxd2880/cxd2880_tnrdmd_dvbt2_mon.c
index 604580b..14c2eeb 100644
--- a/drivers/media/dvb-frontends/cxd2880/cxd2880_tnrdmd_dvbt2_mon.c
+++ b/drivers/media/dvb-frontends/cxd2880/cxd2880_tnrdmd_dvbt2_mon.c
@@ -1289,7 +1289,7 @@ static int dvbt2_calc_snr(struct cxd2880_tnrdmd *tnr_dmd,
 	if (reg_value > 10876)
 		reg_value = 10876;
 
-	*snr = intlog10(reg_value) - intlog10(12600 - reg_value);
+	*snr = mediatree_intlog10(reg_value) - mediatree_intlog10(12600 - reg_value);
 	*snr = (*snr + 839) / 1678 + 32000;
 
 	return 0;
diff --git a/drivers/media/dvb-frontends/cxd2880/cxd2880_tnrdmd_dvbt_mon.c b/drivers/media/dvb-frontends/cxd2880/cxd2880_tnrdmd_dvbt_mon.c
index fedc3b4..ce1fb5f 100644
--- a/drivers/media/dvb-frontends/cxd2880/cxd2880_tnrdmd_dvbt_mon.c
+++ b/drivers/media/dvb-frontends/cxd2880/cxd2880_tnrdmd_dvbt_mon.c
@@ -442,7 +442,7 @@ static int dvbt_calc_snr(struct cxd2880_tnrdmd *tnr_dmd,
 	if (reg_value > 4996)
 		reg_value = 4996;
 
-	*snr = intlog10(reg_value) - intlog10(5350 - reg_value);
+	*snr = mediatree_intlog10(reg_value) - mediatree_intlog10(5350 - reg_value);
 	*snr = (*snr + 839) / 1678 + 28500;
 
 	return 0;
diff --git a/drivers/media/dvb-frontends/cxd2880/cxd2880_top.c b/drivers/media/dvb-frontends/cxd2880/cxd2880_top.c
index 2811739..67d18c9 100644
--- a/drivers/media/dvb-frontends/cxd2880/cxd2880_top.c
+++ b/drivers/media/dvb-frontends/cxd2880/cxd2880_top.c
@@ -765,7 +765,7 @@ static int cxd2880_set_ber_per_period_t(struct dvb_frontend *fe)
 		}
 	}
 
-	mes_exp = pre_ber_rate < 8192 ? 8 : intlog2(pre_ber_rate) >> 24;
+	mes_exp = pre_ber_rate < 8192 ? 8 : mediatree_intlog2(pre_ber_rate) >> 24;
 	priv->pre_ber_interval =
 		((1U << mes_exp) * 1000 + (pre_ber_rate / 2)) /
 		pre_ber_rate;
@@ -773,7 +773,7 @@ static int cxd2880_set_ber_per_period_t(struct dvb_frontend *fe)
 			       CXD2880_TNRDMD_CFG_DVBT_VBER_PERIOD,
 			       mes_exp == 8 ? 0 : mes_exp - 12);
 
-	mes_exp = intlog2(post_ber_rate) >> 24;
+	mes_exp = mediatree_intlog2(post_ber_rate) >> 24;
 	priv->post_ber_interval =
 		((1U << mes_exp) * 1000 + (post_ber_rate / 2)) /
 		post_ber_rate;
@@ -781,7 +781,7 @@ static int cxd2880_set_ber_per_period_t(struct dvb_frontend *fe)
 			       CXD2880_TNRDMD_CFG_DVBT_BERN_PERIOD,
 			       mes_exp);
 
-	mes_exp = intlog2(ucblock_rate) >> 24;
+	mes_exp = mediatree_intlog2(ucblock_rate) >> 24;
 	priv->ucblock_interval =
 		((1U << mes_exp) * 1000 + (ucblock_rate / 2)) /
 		ucblock_rate;
@@ -887,7 +887,7 @@ static int cxd2880_set_ber_per_period_t2(struct dvb_frontend *fe)
 
 	post_ber_rate = pre_ber_rate;
 
-	mes_exp = intlog2(pre_ber_rate) >> 24;
+	mes_exp = mediatree_intlog2(pre_ber_rate) >> 24;
 	priv->pre_ber_interval =
 		((1U << mes_exp) * 1000 + (pre_ber_rate / 2)) /
 		pre_ber_rate;
@@ -895,7 +895,7 @@ static int cxd2880_set_ber_per_period_t2(struct dvb_frontend *fe)
 			       CXD2880_TNRDMD_CFG_DVBT2_LBER_MES,
 			       mes_exp);
 
-	mes_exp = intlog2(post_ber_rate) >> 24;
+	mes_exp = mediatree_intlog2(post_ber_rate) >> 24;
 	priv->post_ber_interval =
 		((1U << mes_exp) * 1000 + (post_ber_rate / 2)) /
 		post_ber_rate;
@@ -930,7 +930,7 @@ static int cxd2880_set_ber_per_period_t2(struct dvb_frontend *fe)
 		goto error_ucblock_setting;
 	}
 
-	mes_exp = intlog2(ucblock_rate) >> 24;
+	mes_exp = mediatree_intlog2(ucblock_rate) >> 24;
 	priv->ucblock_interval =
 		((1U << mes_exp) * 1000 + (ucblock_rate / 2)) /
 		ucblock_rate;
diff --git a/drivers/media/dvb-frontends/dib7000p.c b/drivers/media/dvb-frontends/dib7000p.c
index 5441147..ccf4db3 100644
--- a/drivers/media/dvb-frontends/dib7000p.c
+++ b/drivers/media/dvb-frontends/dib7000p.c
@@ -1640,14 +1640,14 @@ static u32 dib7000p_get_snr(struct dvb_frontend *fe)
 		signal_exp -= 0x40;
 
 	if (signal_mant != 0)
-		result = intlog10(2) * 10 * signal_exp + 10 * intlog10(signal_mant);
+		result = mediatree_intlog10(2) * 10 * signal_exp + 10 * mediatree_intlog10(signal_mant);
 	else
-		result = intlog10(2) * 10 * signal_exp - 100;
+		result = mediatree_intlog10(2) * 10 * signal_exp - 100;
 
 	if (noise_mant != 0)
-		result -= intlog10(2) * 10 * noise_exp + 10 * intlog10(noise_mant);
+		result -= mediatree_intlog10(2) * 10 * noise_exp + 10 * mediatree_intlog10(noise_mant);
 	else
-		result -= intlog10(2) * 10 * noise_exp - 100;
+		result -= mediatree_intlog10(2) * 10 * noise_exp - 100;
 
 	return result;
 }
diff --git a/drivers/media/dvb-frontends/dib8000.c b/drivers/media/dvb-frontends/dib8000.c
index e6c4e0e..0241989 100644
--- a/drivers/media/dvb-frontends/dib8000.c
+++ b/drivers/media/dvb-frontends/dib8000.c
@@ -3900,7 +3900,7 @@ static int dib8000_read_snr(struct dvb_frontend *fe, u16 * snr)
 		snr_master += dib8000_get_snr(state->fe[index_frontend]);
 
 	if ((snr_master >> 16) != 0) {
-		snr_master = 10*intlog10(snr_master>>16);
+		snr_master = 10*mediatree_intlog10(snr_master>>16);
 		*snr = snr_master / ((1 << 24) / 10);
 	}
 	else
@@ -4166,7 +4166,7 @@ static int dib8000_get_stats(struct dvb_frontend *fe, enum fe_status stat)
 		snr = snr >> 16;
 
 		if (snr) {
-			snr = 10 * intlog10(snr);
+			snr = 10 * mediatree_intlog10(snr);
 			snr = (1000L * snr) >> 24;
 		} else {
 			snr = 0;
@@ -4377,7 +4377,7 @@ static void dib8000_release(struct dvb_frontend *fe)
 	u8 index_frontend;
 
 	for (index_frontend = 1; (index_frontend < MAX_NUMBER_OF_FRONTENDS) && (st->fe[index_frontend] != NULL); index_frontend++)
-		dvb_frontend_detach(st->fe[index_frontend]);
+		mediatree_dvb_frontend_detach(st->fe[index_frontend]);
 
 	dibx000_exit_i2c_master(&st->i2c_master);
 	i2c_del_adapter(&st->dib8096p_tuner_adap);
diff --git a/drivers/media/dvb-frontends/dib9000.c b/drivers/media/dvb-frontends/dib9000.c
index 559d971..10fadd0 100644
--- a/drivers/media/dvb-frontends/dib9000.c
+++ b/drivers/media/dvb-frontends/dib9000.c
@@ -1851,7 +1851,7 @@ static void dib9000_release(struct dvb_frontend *demod)
 	u8 index_frontend;
 
 	for (index_frontend = 1; (index_frontend < MAX_NUMBER_OF_FRONTENDS) && (st->fe[index_frontend] != NULL); index_frontend++)
-		dvb_frontend_detach(st->fe[index_frontend]);
+		mediatree_dvb_frontend_detach(st->fe[index_frontend]);
 
 	dibx000_exit_i2c_master(&st->i2c_master);
 
@@ -2333,7 +2333,7 @@ static int dib9000_read_snr(struct dvb_frontend *fe, u16 * snr)
 		snr_master += dib9000_get_snr(state->fe[index_frontend]);
 
 	if ((snr_master >> 16) != 0) {
-		snr_master = 10 * intlog10(snr_master >> 16);
+		snr_master = 10 * mediatree_intlog10(snr_master >> 16);
 		*snr = snr_master / ((1 << 24) / 10);
 	} else
 		*snr = 0;
diff --git a/drivers/media/dvb-frontends/drxk_hard.c b/drivers/media/dvb-frontends/drxk_hard.c
index f0d6299..e349e15 100644
--- a/drivers/media/dvb-frontends/drxk_hard.c
+++ b/drivers/media/dvb-frontends/drxk_hard.c
@@ -182,7 +182,7 @@ static inline u32 Frac28a(u32 a, u32 c)
 
 static inline u32 log10times100(u32 value)
 {
-	return (100L * intlog10(value)) >> 24;
+	return (100L * mediatree_intlog10(value)) >> 24;
 }
 
 /***************************************************************************/
diff --git a/drivers/media/dvb-frontends/dvb-pll.c b/drivers/media/dvb-frontends/dvb-pll.c
index 52de4f8..047ac00 100644
--- a/drivers/media/dvb-frontends/dvb-pll.c
+++ b/drivers/media/dvb-frontends/dvb-pll.c
@@ -890,7 +890,7 @@ dvb_pll_probe(struct i2c_client *client, const struct i2c_device_id *id)
 	 * which has been just set in the above dvb_pll_attach(),
 	 * because if tuner_ops.release was left defined,
 	 * this module would be 'put' twice on exit:
-	 * once by dvb_frontend_detach() and another by dvb_module_release().
+	 * once by mediatree_dvb_frontend_detach() and another by dvb_module_release().
 	 *
 	 * dvb_pll_release is instead executed in the i2c driver's .remove(),
 	 * keeping dvb_pll_attach untouched for legacy (dvb_attach) drivers.
diff --git a/drivers/media/dvb-frontends/lgdt3305.c b/drivers/media/dvb-frontends/lgdt3305.c
index 62d7439..dc6ba93 100644
--- a/drivers/media/dvb-frontends/lgdt3305.c
+++ b/drivers/media/dvb-frontends/lgdt3305.c
@@ -970,7 +970,7 @@ static u32 calculate_snr(u32 mse, u32 c)
 	if (mse == 0) /* no signal */
 		return 0;
 
-	mse = intlog10(mse);
+	mse = mediatree_intlog10(mse);
 	if (mse > c) {
 		/* Negative SNR, which is possible, but realisticly the
 		demod will lose lock before the signal gets this bad.  The
diff --git a/drivers/media/dvb-frontends/lgdt3306a.c b/drivers/media/dvb-frontends/lgdt3306a.c
index 3250264..f4d5e48 100644
--- a/drivers/media/dvb-frontends/lgdt3306a.c
+++ b/drivers/media/dvb-frontends/lgdt3306a.c
@@ -1700,7 +1700,7 @@ static int lgdt3306a_read_ber(struct dvb_frontend *fe, u32 *ber)
 
 	*ber = 0;
 #if 1
-	/* FGR - FIXME - I don't know what value is expected by dvb_core
+	/* FGR - FIXME - I don't know what value is expected by mediatree_dvb_core
 	 * what is the scale of the value?? */
 	tmp =              read_reg(state, 0x00fc); /* NBERVALUE[24-31] */
 	tmp = (tmp << 8) | read_reg(state, 0x00fd); /* NBERVALUE[16-23] */
@@ -1718,7 +1718,7 @@ static int lgdt3306a_read_ucblocks(struct dvb_frontend *fe, u32 *ucblocks)
 
 	*ucblocks = 0;
 #if 1
-	/* FGR - FIXME - I don't know what value is expected by dvb_core
+	/* FGR - FIXME - I don't know what value is expected by mediatree_dvb_core
 	 * what happens when value wraps? */
 	*ucblocks = read_reg(state, 0x00f4); /* TPIFTPERRCNT[0-7] */
 	dbg_info("ucblocks=%u\n", *ucblocks);
diff --git a/drivers/media/dvb-frontends/lgdt330x.c b/drivers/media/dvb-frontends/lgdt330x.c
index da3a8c5..29a9a5f 100644
--- a/drivers/media/dvb-frontends/lgdt330x.c
+++ b/drivers/media/dvb-frontends/lgdt330x.c
@@ -469,7 +469,7 @@ static int lgdt330x_get_frontend(struct dvb_frontend *fe,
  *   SNR    = 10 * log10( 696320   / MSEQAM)
  *
  * We re-write the snr equation as:
- *   SNR * 2^24 = 10*(c - intlog10(MSE))
+ *   SNR * 2^24 = 10*(c - mediatree_intlog10(MSE))
  * Where for 256-QAM, c = log10(696320) * 2^24, and so on.
  */
 static u32 calculate_snr(u32 mse, u32 c)
@@ -477,7 +477,7 @@ static u32 calculate_snr(u32 mse, u32 c)
 	if (mse == 0) /* No signal */
 		return 0;
 
-	mse = intlog10(mse);
+	mse = mediatree_intlog10(mse);
 	if (mse > c) {
 		/*
 		 * Negative SNR, which is possible, but realisticly the
diff --git a/drivers/media/dvb-frontends/m88ds3103.c b/drivers/media/dvb-frontends/m88ds3103.c
index bce0f42..18e7c8b 100644
--- a/drivers/media/dvb-frontends/m88ds3103.c
+++ b/drivers/media/dvb-frontends/m88ds3103.c
@@ -237,7 +237,7 @@ static int m88ds3103_read_status(struct dvb_frontend *fe,
 			/* SNR(X) dB = 10 * ln(X) / ln(10) dB */
 			itmp = DIV_ROUND_CLOSEST(itmp, 8 * M88DS3103_SNR_ITERATIONS);
 			if (itmp)
-				cnr = div_u64((u64) 10000 * intlog2(itmp), intlog2(10));
+				cnr = div_u64((u64) 10000 * mediatree_intlog2(itmp), mediatree_intlog2(10));
 			break;
 		case SYS_DVBS2:
 			noise_tot = 0;
@@ -264,7 +264,7 @@ static int m88ds3103_read_status(struct dvb_frontend *fe,
 			/* SNR(X) dB = 10 * log10(X) dB */
 			if (signal > noise) {
 				itmp = signal / noise;
-				cnr = div_u64((u64) 10000 * intlog10(itmp), (1 << 24));
+				cnr = div_u64((u64) 10000 * mediatree_intlog10(itmp), (1 << 24));
 			}
 			break;
 		default:
diff --git a/drivers/media/dvb-frontends/mn88443x.c b/drivers/media/dvb-frontends/mn88443x.c
index fff212c..794d806 100644
--- a/drivers/media/dvb-frontends/mn88443x.c
+++ b/drivers/media/dvb-frontends/mn88443x.c
@@ -324,7 +324,7 @@ static int mn88443x_s_read_status(struct mn88443x_priv *chip,
 
 		if (d_3) {
 			/* 0.3 * 2^24 = 5033164 */
-			tmp = (s64)2 * intlog10(x) - intlog10(abs(d)) - d_3
+			tmp = (s64)2 * mediatree_intlog10(x) - mediatree_intlog10(abs(d)) - d_3
 				- 5033164;
 			cnr = div_u64(tmp * 10000, 1 << 24);
 		}
@@ -511,8 +511,8 @@ static int mn88443x_t_read_status(struct mn88443x_priv *chip,
 
 		if (tmpu || tmpl) {
 			/* CNR[dB]: 10 * (log10(65536 / value) + 0.2) */
-			/* intlog10(65536) = 80807124, 0.2 * 2^24 = 3355443 */
-			tmp = (u64)80807124 - intlog10((tmpu << 8) | tmpl)
+			/* mediatree_intlog10(65536) = 80807124, 0.2 * 2^24 = 3355443 */
+			tmp = (u64)80807124 - mediatree_intlog10((tmpu << 8) | tmpl)
 				+ 3355443;
 			cnr = div_u64(tmp * 10000, 1 << 24);
 		} else {
diff --git a/drivers/media/dvb-frontends/mn88472.c b/drivers/media/dvb-frontends/mn88472.c
index 73922fc..77df26d 100644
--- a/drivers/media/dvb-frontends/mn88472.c
+++ b/drivers/media/dvb-frontends/mn88472.c
@@ -98,7 +98,7 @@ static int mn88472_read_status(struct dvb_frontend *fe, enum fe_status *status)
 		if (utmp) {
 			/* CNR[dB]: 10 * log10(65536 / value) + 2 */
 			/* log10(65536) = 80807124, 0.2 = 3355443 */
-			stmp = ((u64)80807124 - intlog10(utmp) + 3355443)
+			stmp = ((u64)80807124 - mediatree_intlog10(utmp) + 3355443)
 			       * 10000 >> 24;
 
 			dev_dbg(&client->dev, "cnr=%d value=%u\n", stmp, utmp);
@@ -124,14 +124,14 @@ static int mn88472_read_status(struct dvb_frontend *fe, enum fe_status *status)
 			if (utmp1) {
 				/* CNR[dB]: 10 * log10(16384 / value) - 6 */
 				/* log10(16384) = 70706234, 0.6 = 10066330 */
-				stmp = ((u64)70706234 - intlog10(utmp)
+				stmp = ((u64)70706234 - mediatree_intlog10(utmp)
 				       - 10066330) * 10000 >> 24;
 				dev_dbg(&client->dev, "cnr=%d value=%u MISO\n",
 					stmp, utmp);
 			} else {
 				/* CNR[dB]: 10 * log10(65536 / value) + 2 */
 				/* log10(65536) = 80807124, 0.2 = 3355443 */
-				stmp = ((u64)80807124 - intlog10(utmp)
+				stmp = ((u64)80807124 - mediatree_intlog10(utmp)
 				       + 3355443) * 10000 >> 24;
 
 				dev_dbg(&client->dev, "cnr=%d value=%u SISO\n",
@@ -155,8 +155,8 @@ static int mn88472_read_status(struct dvb_frontend *fe, enum fe_status *status)
 		if (utmp1 && utmp2) {
 			/* CNR[dB]: 10 * log10(8 * (signal / noise)) */
 			/* log10(8) = 15151336 */
-			stmp = ((u64)15151336 + intlog10(utmp1)
-			       - intlog10(utmp2)) * 10000 >> 24;
+			stmp = ((u64)15151336 + mediatree_intlog10(utmp1)
+			       - mediatree_intlog10(utmp2)) * 10000 >> 24;
 
 			dev_dbg(&client->dev, "cnr=%d signal=%u noise=%u\n",
 				stmp, utmp1, utmp2);
diff --git a/drivers/media/dvb-frontends/mn88473.c b/drivers/media/dvb-frontends/mn88473.c
index 4838969..939e393 100644
--- a/drivers/media/dvb-frontends/mn88473.c
+++ b/drivers/media/dvb-frontends/mn88473.c
@@ -338,7 +338,7 @@ static int mn88473_read_status(struct dvb_frontend *fe, enum fe_status *status)
 		if (utmp) {
 			/* CNR[dB]: 10 * (log10(65536 / value) + 0.2) */
 			/* log10(65536) = 80807124, 0.2 = 3355443 */
-			stmp = div_u64(((u64)80807124 - intlog10(utmp)
+			stmp = div_u64(((u64)80807124 - mediatree_intlog10(utmp)
 					+ 3355443) * 10000, 1 << 24);
 			dev_dbg(&client->dev, "cnr=%d value=%u\n", stmp, utmp);
 		} else {
@@ -363,14 +363,14 @@ static int mn88473_read_status(struct dvb_frontend *fe, enum fe_status *status)
 			if (utmp1) {
 				/* CNR[dB]: 10 * (log10(16384 / value) - 0.6) */
 				/* log10(16384) = 70706234, 0.6 = 10066330 */
-				stmp = div_u64(((u64)70706234 - intlog10(utmp)
+				stmp = div_u64(((u64)70706234 - mediatree_intlog10(utmp)
 						- 10066330) * 10000, 1 << 24);
 				dev_dbg(&client->dev, "cnr=%d value=%u MISO\n",
 					stmp, utmp);
 			} else {
 				/* CNR[dB]: 10 * (log10(65536 / value) + 0.2) */
 				/* log10(65536) = 80807124, 0.2 = 3355443 */
-				stmp = div_u64(((u64)80807124 - intlog10(utmp)
+				stmp = div_u64(((u64)80807124 - mediatree_intlog10(utmp)
 						+ 3355443) * 10000, 1 << 24);
 				dev_dbg(&client->dev, "cnr=%d value=%u SISO\n",
 					stmp, utmp);
@@ -393,8 +393,8 @@ static int mn88473_read_status(struct dvb_frontend *fe, enum fe_status *status)
 		if (utmp1 && utmp2) {
 			/* CNR[dB]: 10 * log10(8 * (signal / noise)) */
 			/* log10(8) = 15151336 */
-			stmp = div_u64(((u64)15151336 + intlog10(utmp1)
-					- intlog10(utmp2)) * 10000, 1 << 24);
+			stmp = div_u64(((u64)15151336 + mediatree_intlog10(utmp1)
+					- mediatree_intlog10(utmp2)) * 10000, 1 << 24);
 			dev_dbg(&client->dev, "cnr=%d signal=%u noise=%u\n",
 				stmp, utmp1, utmp2);
 		} else {
diff --git a/drivers/media/dvb-frontends/or51132.c b/drivers/media/dvb-frontends/or51132.c
index 24de1b1..cba4b17 100644
--- a/drivers/media/dvb-frontends/or51132.c
+++ b/drivers/media/dvb-frontends/or51132.c
@@ -436,7 +436,7 @@ static int or51132_read_status(struct dvb_frontend *fe, enum fe_status *status)
      SNR[dB] = 10 * log10(907832426.314266  / MSE^2 )
 
    We re-write the snr equation as:
-     SNR * 2^24 = 10*(c - 2*intlog10(MSE))
+     SNR * 2^24 = 10*(c - 2*mediatree_intlog10(MSE))
    Where for QAM256, c = log10(907832426.314266) * 2^24
    and for 8-VSB and QAM64, c = log10(897152044.8282) * 2^24 */
 
@@ -445,7 +445,7 @@ static u32 calculate_snr(u32 mse, u32 c)
 	if (mse == 0) /* No signal */
 		return 0;
 
-	mse = 2*intlog10(mse);
+	mse = 2*mediatree_intlog10(mse);
 	if (mse > c) {
 		/* Negative SNR, which is possible, but realisticly the
 		demod will lose lock before the signal gets this bad.  The
diff --git a/drivers/media/dvb-frontends/or51211.c b/drivers/media/dvb-frontends/or51211.c
index e914eb6..578e953 100644
--- a/drivers/media/dvb-frontends/or51211.c
+++ b/drivers/media/dvb-frontends/or51211.c
@@ -261,7 +261,7 @@ static int or51211_read_status(struct dvb_frontend *fe, enum fe_status *status)
      SNR[dB] = 10 * log10(219037.9454 / MSE^2 )
 
    We re-write the snr equation as:
-     SNR * 2^24 = 10*(c - 2*intlog10(MSE))
+     SNR * 2^24 = 10*(c - 2*mediatree_intlog10(MSE))
    Where for 8-VSB, c = log10(219037.9454) * 2^24 */
 
 static u32 calculate_snr(u32 mse, u32 c)
@@ -269,7 +269,7 @@ static u32 calculate_snr(u32 mse, u32 c)
 	if (mse == 0) /* No signal */
 		return 0;
 
-	mse = 2*intlog10(mse);
+	mse = 2*mediatree_intlog10(mse);
 	if (mse > c) {
 		/* Negative SNR, which is possible, but realisticly the
 		demod will lose lock before the signal gets this bad.  The
diff --git a/drivers/media/dvb-frontends/rtl2830.c b/drivers/media/dvb-frontends/rtl2830.c
index e6b8367..460bc9e 100644
--- a/drivers/media/dvb-frontends/rtl2830.c
+++ b/drivers/media/dvb-frontends/rtl2830.c
@@ -456,7 +456,7 @@ static int rtl2830_read_status(struct dvb_frontend *fe, enum fe_status *status)
 		utmp = buf[0] << 8 | buf[1] << 0;
 		if (utmp)
 			stmp = (constant[constellation][hierarchy] -
-			       intlog10(utmp)) / ((1 << 24) / 10000);
+			       mediatree_intlog10(utmp)) / ((1 << 24) / 10000);
 		else
 			stmp = 0;
 
diff --git a/drivers/media/dvb-frontends/rtl2832.c b/drivers/media/dvb-frontends/rtl2832.c
index dcbeb9f..c105732 100644
--- a/drivers/media/dvb-frontends/rtl2832.c
+++ b/drivers/media/dvb-frontends/rtl2832.c
@@ -713,7 +713,7 @@ static int rtl2832_read_status(struct dvb_frontend *fe, enum fe_status *status)
 		u16tmp = buf[0] << 8 | buf[1] << 0;
 		if (u16tmp)
 			tmp = (constant[constellation][hierarchy] -
-			       intlog10(u16tmp)) / ((1 << 24) / 10000);
+			       mediatree_intlog10(u16tmp)) / ((1 << 24) / 10000);
 		else
 			tmp = 0;
 
diff --git a/drivers/media/dvb-frontends/si2165.c b/drivers/media/dvb-frontends/si2165.c
index ebee230..8aa3944 100644
--- a/drivers/media/dvb-frontends/si2165.c
+++ b/drivers/media/dvb-frontends/si2165.c
@@ -727,12 +727,12 @@ static int si2165_read_status(struct dvb_frontend *fe, enum fe_status *status)
 		 * 1000 * c_n/dB =
 		 * 1000 * 10 * log10(2^24 / regval) =
 		 * 1000 * 10 * (log10(2^24) - log10(regval)) =
-		 * 1000 * 10 * (intlog10(2^24) - intlog10(regval)) / 2^24
+		 * 1000 * 10 * (mediatree_intlog10(2^24) - mediatree_intlog10(regval)) / 2^24
 		 *
-		 * intlog10(x) = log10(x) * 2^24
-		 * intlog10(2^24) = log10(2^24) * 2^24 = 121210686
+		 * mediatree_intlog10(x) = log10(x) * 2^24
+		 * mediatree_intlog10(2^24) = log10(2^24) * 2^24 = 121210686
 		 */
-		u32tmp = (1000 * 10 * (121210686 - (u64)intlog10(u32tmp)))
+		u32tmp = (1000 * 10 * (121210686 - (u64)mediatree_intlog10(u32tmp)))
 				>> 24;
 		c->cnr.stat[0].scale = FE_SCALE_DECIBEL;
 		c->cnr.stat[0].svalue = u32tmp;
diff --git a/drivers/media/dvb-frontends/sp2.c b/drivers/media/dvb-frontends/sp2.c
index 992f221..e5e03fb 100644
--- a/drivers/media/dvb-frontends/sp2.c
+++ b/drivers/media/dvb-frontends/sp2.c
@@ -331,7 +331,7 @@ static int sp2_init(struct sp2 *s)
 	if (ret)
 		goto err;
 
-	ret = dvb_ca_en50221_init(s->dvb_adap, &s->ca, 0, 1);
+	ret = mediatree_dvb_ca_en50221_init(s->dvb_adap, &s->ca, 0, 1);
 	if (ret)
 		goto err;
 
@@ -358,7 +358,7 @@ static int sp2_exit(struct i2c_client *client)
 	if (!s->ca.data)
 		return 0;
 
-	dvb_ca_en50221_release(&s->ca);
+	mediatree_dvb_ca_en50221_release(&s->ca);
 
 	return 0;
 }
diff --git a/drivers/media/dvb-frontends/stv0299.c b/drivers/media/dvb-frontends/stv0299.c
index b5263a0..8e8434d 100644
--- a/drivers/media/dvb-frontends/stv0299.c
+++ b/drivers/media/dvb-frontends/stv0299.c
@@ -416,7 +416,7 @@ static int stv0299_send_legacy_dish_cmd (struct dvb_frontend* fe, unsigned long
 		tv[0] = nexttime;
 	stv0299_writeregI (state, 0x0c, reg0x0c | 0x50); /* set LNB to 18V */
 
-	dvb_frontend_sleep_until(&nexttime, 32000);
+	mediatree_dvb_frontend_sleep_until(&nexttime, 32000);
 
 	for (i=0; i<9; i++) {
 		if (debug_legacy_dish_switch)
@@ -430,7 +430,7 @@ static int stv0299_send_legacy_dish_cmd (struct dvb_frontend* fe, unsigned long
 		cmd = cmd >> 1;
 
 		if (i != 8)
-			dvb_frontend_sleep_until(&nexttime, 8000);
+			mediatree_dvb_frontend_sleep_until(&nexttime, 8000);
 	}
 	if (debug_legacy_dish_switch) {
 		printk ("%s(%d): switch delay (should be 32k followed by all 8k\n",
diff --git a/drivers/media/dvb-frontends/stv0367.c b/drivers/media/dvb-frontends/stv0367.c
index 95e376f..6e090ae 100644
--- a/drivers/media/dvb-frontends/stv0367.c
+++ b/drivers/media/dvb-frontends/stv0367.c
@@ -3059,7 +3059,7 @@ static void stv0367ddb_read_snr(struct dvb_frontend *fe)
 		}
 
 		tmpval = (cab_pwr * 320) / regval;
-		snrval = ((tmpval != 0) ? (intlog2(tmpval) / 5581) : 0);
+		snrval = ((tmpval != 0) ? (mediatree_intlog2(tmpval) / 5581) : 0);
 		break;
 	default:
 		p->cnr.stat[0].scale = FE_SCALE_NOT_AVAILABLE;
diff --git a/drivers/media/dvb-frontends/tc90522.c b/drivers/media/dvb-frontends/tc90522.c
index e83836b..b8f02a4 100644
--- a/drivers/media/dvb-frontends/tc90522.c
+++ b/drivers/media/dvb-frontends/tc90522.c
@@ -422,7 +422,7 @@ static int tc90522t_get_frontend(struct dvb_frontend *fe,
 		 */
 		/* cn = cnr << 3 (61.3 fixed point float */
 		/* p = 10log10(5505024/cndat) << 24  (8.24 fixed point float)*/
-		p = intlog10(5505024) - intlog10(cndat);
+		p = mediatree_intlog10(5505024) - mediatree_intlog10(cndat);
 		p *= 10;
 
 		cn = 24772;
diff --git a/drivers/media/firewire/firedtv-ci.c b/drivers/media/firewire/firedtv-ci.c
index e0d57e0..c59553b 100644
--- a/drivers/media/firewire/firedtv-ci.c
+++ b/drivers/media/firewire/firedtv-ci.c
@@ -212,9 +212,9 @@ static __poll_t fdtv_ca_io_poll(struct file *file, poll_table *wait)
 
 static const struct file_operations fdtv_ca_fops = {
 	.owner		= THIS_MODULE,
-	.unlocked_ioctl	= dvb_generic_ioctl,
-	.open		= dvb_generic_open,
-	.release	= dvb_generic_release,
+	.unlocked_ioctl	= mediatree_dvb_generic_ioctl,
+	.open		= mediatree_dvb_generic_open,
+	.release	= mediatree_dvb_generic_release,
 	.poll		= fdtv_ca_io_poll,
 	.llseek		= noop_llseek,
 };
@@ -238,7 +238,7 @@ int fdtv_ca_register(struct firedtv *fdtv)
 	if (!fdtv_ca_ready(&stat))
 		return -EFAULT;
 
-	err = dvb_register_device(&fdtv->adapter, &fdtv->cadev,
+	err = mediatree_dvb_register_device(&fdtv->adapter, &fdtv->cadev,
 				  &fdtv_ca, fdtv, DVB_DEVICE_CA, 0);
 
 	if (stat.ca_application_info == 0)
@@ -251,5 +251,5 @@ int fdtv_ca_register(struct firedtv *fdtv)
 
 void fdtv_ca_release(struct firedtv *fdtv)
 {
-	dvb_unregister_device(fdtv->cadev);
+	mediatree_dvb_unregister_device(fdtv->cadev);
 }
diff --git a/drivers/media/firewire/firedtv-dvb.c b/drivers/media/firewire/firedtv-dvb.c
index 3b7e2f1..a5bcc9e 100644
--- a/drivers/media/firewire/firedtv-dvb.c
+++ b/drivers/media/firewire/firedtv-dvb.c
@@ -161,7 +161,7 @@ int fdtv_dvb_register(struct firedtv *fdtv, const char *name)
 {
 	int err;
 
-	err = dvb_register_adapter(&fdtv->adapter, name,
+	err = mediatree_dvb_register_adapter(&fdtv->adapter, name,
 				   THIS_MODULE, fdtv->device, adapter_nr);
 	if (err < 0)
 		goto fail_log;
@@ -176,7 +176,7 @@ int fdtv_dvb_register(struct firedtv *fdtv, const char *name)
 	fdtv->demux.stop_feed	= fdtv_stop_feed;
 	fdtv->demux.write_to_decoder = NULL;
 
-	err = dvb_dmx_init(&fdtv->demux);
+	err = mediatree_dvb_dmx_init(&fdtv->demux);
 	if (err)
 		goto fail_unreg_adapter;
 
@@ -184,7 +184,7 @@ int fdtv_dvb_register(struct firedtv *fdtv, const char *name)
 	fdtv->dmxdev.demux        = &fdtv->demux.dmx;
 	fdtv->dmxdev.capabilities = 0;
 
-	err = dvb_dmxdev_init(&fdtv->dmxdev, &fdtv->adapter);
+	err = mediatree_dvb_dmxdev_init(&fdtv->dmxdev, &fdtv->adapter);
 	if (err)
 		goto fail_dmx_release;
 
@@ -199,12 +199,12 @@ int fdtv_dvb_register(struct firedtv *fdtv, const char *name)
 	if (err)
 		goto fail_rem_frontend;
 
-	err = dvb_net_init(&fdtv->adapter, &fdtv->dvbnet, &fdtv->demux.dmx);
+	err = mediatree_dvb_net_init(&fdtv->adapter, &fdtv->dvbnet, &fdtv->demux.dmx);
 	if (err)
 		goto fail_disconnect_frontend;
 
 	fdtv_frontend_init(fdtv, name);
-	err = dvb_register_frontend(&fdtv->adapter, &fdtv->fe);
+	err = mediatree_dvb_register_frontend(&fdtv->adapter, &fdtv->fe);
 	if (err)
 		goto fail_net_release;
 
@@ -215,17 +215,17 @@ int fdtv_dvb_register(struct firedtv *fdtv, const char *name)
 	return 0;
 
 fail_net_release:
-	dvb_net_release(&fdtv->dvbnet);
+	mediatree_dvb_net_release(&fdtv->dvbnet);
 fail_disconnect_frontend:
 	fdtv->demux.dmx.close(&fdtv->demux.dmx);
 fail_rem_frontend:
 	fdtv->demux.dmx.remove_frontend(&fdtv->demux.dmx, &fdtv->frontend);
 fail_dmxdev_release:
-	dvb_dmxdev_release(&fdtv->dmxdev);
+	mediatree_dvb_dmxdev_release(&fdtv->dmxdev);
 fail_dmx_release:
-	dvb_dmx_release(&fdtv->demux);
+	mediatree_dvb_dmx_release(&fdtv->demux);
 fail_unreg_adapter:
-	dvb_unregister_adapter(&fdtv->adapter);
+	mediatree_dvb_unregister_adapter(&fdtv->adapter);
 fail_log:
 	dev_err(fdtv->device, "DVB initialization failed\n");
 	return err;
@@ -234,11 +234,11 @@ fail_log:
 void fdtv_dvb_unregister(struct firedtv *fdtv)
 {
 	fdtv_ca_release(fdtv);
-	dvb_unregister_frontend(&fdtv->fe);
-	dvb_net_release(&fdtv->dvbnet);
+	mediatree_dvb_unregister_frontend(&fdtv->fe);
+	mediatree_dvb_net_release(&fdtv->dvbnet);
 	fdtv->demux.dmx.close(&fdtv->demux.dmx);
 	fdtv->demux.dmx.remove_frontend(&fdtv->demux.dmx, &fdtv->frontend);
-	dvb_dmxdev_release(&fdtv->dmxdev);
-	dvb_dmx_release(&fdtv->demux);
-	dvb_unregister_adapter(&fdtv->adapter);
+	mediatree_dvb_dmxdev_release(&fdtv->dmxdev);
+	mediatree_dvb_dmx_release(&fdtv->demux);
+	mediatree_dvb_unregister_adapter(&fdtv->adapter);
 }
diff --git a/drivers/media/firewire/firedtv-fw.c b/drivers/media/firewire/firedtv-fw.c
index 5f6e97a..5129258 100644
--- a/drivers/media/firewire/firedtv-fw.c
+++ b/drivers/media/firewire/firedtv-fw.c
@@ -117,7 +117,7 @@ static void handle_iso(struct fw_iso_context *context, u32 cycle,
 
 		for (p += CIP_HEADER_SIZE + MPEG2_TS_HEADER_SIZE; p < p_end;
 		     p += MPEG2_TS_SOURCE_PACKET_SIZE)
-			dvb_dmx_swfilter_packets(&fdtv->demux, p, 1);
+			mediatree_dvb_dmx_swfilter_packets(&fdtv->demux, p, 1);
 
 		err = queue_iso(ctx, i);
 		if (unlikely(err))
diff --git a/drivers/media/pci/bt8xx/dst.c b/drivers/media/pci/bt8xx/dst.c
index 7e29e7f..73e63fc 100644
--- a/drivers/media/pci/bt8xx/dst.c
+++ b/drivers/media/pci/bt8xx/dst.c
@@ -1678,7 +1678,7 @@ static void bt8xx_dst_release(struct dvb_frontend *fe)
 {
 	struct dst_state *state = fe->demodulator_priv;
 	if (state->dst_ca) {
-		dvb_unregister_device(state->dst_ca);
+		mediatree_dvb_unregister_device(state->dst_ca);
 #ifdef CONFIG_MEDIA_ATTACH
 		symbol_put(dst_ca_attach);
 #endif
diff --git a/drivers/media/pci/bt8xx/dst_ca.c b/drivers/media/pci/bt8xx/dst_ca.c
index 85fcdc5..48e2a43 100644
--- a/drivers/media/pci/bt8xx/dst_ca.c
+++ b/drivers/media/pci/bt8xx/dst_ca.c
@@ -659,7 +659,7 @@ struct dvb_device *dst_ca_attach(struct dst_state *dst, struct dvb_adapter *dvb_
 	struct dvb_device *dvbdev;
 
 	dprintk(verbose, DST_CA_ERROR, 1, "registering DST-CA device");
-	if (dvb_register_device(dvb_adapter, &dvbdev, &dvbdev_ca, dst,
+	if (mediatree_dvb_register_device(dvb_adapter, &dvbdev, &dvbdev_ca, dst,
 				DVB_DEVICE_CA, 0) == 0) {
 		dst->dst_ca = dvbdev;
 		return dst->dst_ca;
diff --git a/drivers/media/pci/bt8xx/dvb-bt8xx.c b/drivers/media/pci/bt8xx/dvb-bt8xx.c
index 4d161cc..65510b0 100644
--- a/drivers/media/pci/bt8xx/dvb-bt8xx.c
+++ b/drivers/media/pci/bt8xx/dvb-bt8xx.c
@@ -48,7 +48,7 @@ static void dvb_bt8xx_task(struct tasklet_struct *t)
 	dprintk("%d\n", card->bt->finished_block);
 
 	while (card->bt->last_block != card->bt->finished_block) {
-		(card->bt->TS_Size ? dvb_dmx_swfilter_204 : dvb_dmx_swfilter)
+		(card->bt->TS_Size ? mediatree_dvb_dmx_swfilter_204 : mediatree_dvb_dmx_swfilter)
 			(&card->demux,
 			 &card->bt->buf_cpu[card->bt->last_block *
 					    card->bt->block_bytes],
@@ -702,9 +702,9 @@ static void frontend_init(struct dvb_bt8xx_card *card, u32 type)
 		       card->bt->dev->subsystem_vendor,
 		       card->bt->dev->subsystem_device);
 	else
-		if (dvb_register_frontend(&card->dvb_adapter, card->fe)) {
+		if (mediatree_dvb_register_frontend(&card->dvb_adapter, card->fe)) {
 			pr_err("Frontend registration failed!\n");
-			dvb_frontend_detach(card->fe);
+			mediatree_dvb_frontend_detach(card->fe);
 			card->fe = NULL;
 		}
 }
@@ -713,11 +713,11 @@ static int dvb_bt8xx_load_card(struct dvb_bt8xx_card *card, u32 type)
 {
 	int result;
 
-	result = dvb_register_adapter(&card->dvb_adapter, card->card_name,
+	result = mediatree_dvb_register_adapter(&card->dvb_adapter, card->card_name,
 				      THIS_MODULE, &card->bt->dev->dev,
 				      adapter_nr);
 	if (result < 0) {
-		pr_err("dvb_register_adapter failed (errno = %d)\n", result);
+		pr_err("mediatree_dvb_register_adapter failed (errno = %d)\n", result);
 		return result;
 	}
 	card->dvb_adapter.priv = card;
@@ -735,9 +735,9 @@ static int dvb_bt8xx_load_card(struct dvb_bt8xx_card *card, u32 type)
 	card->demux.stop_feed = dvb_bt8xx_stop_feed;
 	card->demux.write_to_decoder = NULL;
 
-	result = dvb_dmx_init(&card->demux);
+	result = mediatree_dvb_dmx_init(&card->demux);
 	if (result < 0) {
-		pr_err("dvb_dmx_init failed (errno = %d)\n", result);
+		pr_err("mediatree_dvb_dmx_init failed (errno = %d)\n", result);
 		goto err_unregister_adaptor;
 	}
 
@@ -745,9 +745,9 @@ static int dvb_bt8xx_load_card(struct dvb_bt8xx_card *card, u32 type)
 	card->dmxdev.demux = &card->demux.dmx;
 	card->dmxdev.capabilities = 0;
 
-	result = dvb_dmxdev_init(&card->dmxdev, &card->dvb_adapter);
+	result = mediatree_dvb_dmxdev_init(&card->dmxdev, &card->dvb_adapter);
 	if (result < 0) {
-		pr_err("dvb_dmxdev_init failed (errno = %d)\n", result);
+		pr_err("mediatree_dvb_dmxdev_init failed (errno = %d)\n", result);
 		goto err_dmx_release;
 	}
 
@@ -755,7 +755,7 @@ static int dvb_bt8xx_load_card(struct dvb_bt8xx_card *card, u32 type)
 
 	result = card->demux.dmx.add_frontend(&card->demux.dmx, &card->fe_hw);
 	if (result < 0) {
-		pr_err("dvb_dmx_init failed (errno = %d)\n", result);
+		pr_err("mediatree_dvb_dmx_init failed (errno = %d)\n", result);
 		goto err_dmxdev_release;
 	}
 
@@ -763,19 +763,19 @@ static int dvb_bt8xx_load_card(struct dvb_bt8xx_card *card, u32 type)
 
 	result = card->demux.dmx.add_frontend(&card->demux.dmx, &card->fe_mem);
 	if (result < 0) {
-		pr_err("dvb_dmx_init failed (errno = %d)\n", result);
+		pr_err("mediatree_dvb_dmx_init failed (errno = %d)\n", result);
 		goto err_remove_hw_frontend;
 	}
 
 	result = card->demux.dmx.connect_frontend(&card->demux.dmx, &card->fe_hw);
 	if (result < 0) {
-		pr_err("dvb_dmx_init failed (errno = %d)\n", result);
+		pr_err("mediatree_dvb_dmx_init failed (errno = %d)\n", result);
 		goto err_remove_mem_frontend;
 	}
 
-	result = dvb_net_init(&card->dvb_adapter, &card->dvbnet, &card->demux.dmx);
+	result = mediatree_dvb_net_init(&card->dvb_adapter, &card->dvbnet, &card->demux.dmx);
 	if (result < 0) {
-		pr_err("dvb_net_init failed (errno = %d)\n", result);
+		pr_err("mediatree_dvb_net_init failed (errno = %d)\n", result);
 		goto err_disconnect_frontend;
 	}
 
@@ -792,11 +792,11 @@ err_remove_mem_frontend:
 err_remove_hw_frontend:
 	card->demux.dmx.remove_frontend(&card->demux.dmx, &card->fe_hw);
 err_dmxdev_release:
-	dvb_dmxdev_release(&card->dmxdev);
+	mediatree_dvb_dmxdev_release(&card->dmxdev);
 err_dmx_release:
-	dvb_dmx_release(&card->demux);
+	mediatree_dvb_dmx_release(&card->demux);
 err_unregister_adaptor:
-	dvb_unregister_adapter(&card->dvb_adapter);
+	mediatree_dvb_unregister_adapter(&card->dvb_adapter);
 	return result;
 }
 
@@ -920,16 +920,16 @@ static void dvb_bt8xx_remove(struct bttv_sub_device *sub)
 
 	bt878_stop(card->bt);
 	tasklet_kill(&card->bt->tasklet);
-	dvb_net_release(&card->dvbnet);
+	mediatree_dvb_net_release(&card->dvbnet);
 	card->demux.dmx.remove_frontend(&card->demux.dmx, &card->fe_mem);
 	card->demux.dmx.remove_frontend(&card->demux.dmx, &card->fe_hw);
-	dvb_dmxdev_release(&card->dmxdev);
-	dvb_dmx_release(&card->demux);
+	mediatree_dvb_dmxdev_release(&card->dmxdev);
+	mediatree_dvb_dmx_release(&card->demux);
 	if (card->fe) {
-		dvb_unregister_frontend(card->fe);
-		dvb_frontend_detach(card->fe);
+		mediatree_dvb_unregister_frontend(card->fe);
+		mediatree_dvb_frontend_detach(card->fe);
 	}
-	dvb_unregister_adapter(&card->dvb_adapter);
+	mediatree_dvb_unregister_adapter(&card->dvb_adapter);
 
 	kfree(card);
 }
diff --git a/drivers/media/pci/cx18/cx18-dvb.c b/drivers/media/pci/cx18/cx18-dvb.c
index 33e5a5b..b265e04 100644
--- a/drivers/media/pci/cx18/cx18-dvb.c
+++ b/drivers/media/pci/cx18/cx18-dvb.c
@@ -343,7 +343,7 @@ int cx18_dvb_register(struct cx18_stream *stream)
 	dvb->enabled = 0;
 	dvb->stream = stream;
 
-	ret = dvb_register_adapter(&dvb->dvb_adapter,
+	ret = mediatree_dvb_register_adapter(&dvb->dvb_adapter,
 			CX18_DRIVER_NAME,
 			THIS_MODULE, &cx->pci_dev->dev, adapter_nr);
 	if (ret < 0)
@@ -361,7 +361,7 @@ int cx18_dvb_register(struct cx18_stream *stream)
 	dvbdemux->stop_feed = cx18_dvb_stop_feed;
 	dvbdemux->dmx.capabilities = (DMX_TS_FILTERING |
 		DMX_SECTION_FILTERING | DMX_MEMORY_BASED_FILTERING);
-	ret = dvb_dmx_init(dvbdemux);
+	ret = mediatree_dvb_dmx_init(dvbdemux);
 	if (ret < 0)
 		goto err_dvb_unregister_adapter;
 
@@ -372,7 +372,7 @@ int cx18_dvb_register(struct cx18_stream *stream)
 	dvb->dmxdev.filternum = 256;
 	dvb->dmxdev.demux = dmx;
 
-	ret = dvb_dmxdev_init(&dvb->dmxdev, dvb_adapter);
+	ret = mediatree_dvb_dmxdev_init(&dvb->dmxdev, dvb_adapter);
 	if (ret < 0)
 		goto err_dvb_dmx_release;
 
@@ -392,7 +392,7 @@ int cx18_dvb_register(struct cx18_stream *stream)
 	if (ret < 0)
 		goto err_disconnect_frontend;
 
-	dvb_net_init(dvb_adapter, &dvb->dvbnet, dmx);
+	mediatree_dvb_net_init(dvb_adapter, &dvb->dvbnet, dmx);
 
 	CX18_INFO("DVB Frontend registered\n");
 	CX18_INFO("Registered DVB adapter%d for %s (%d x %d.%02d kB)\n",
@@ -411,11 +411,11 @@ err_remove_mem_frontend:
 err_remove_hw_frontend:
 	dmx->remove_frontend(dmx, &dvb->hw_frontend);
 err_dvb_dmxdev_release:
-	dvb_dmxdev_release(&dvb->dmxdev);
+	mediatree_dvb_dmxdev_release(&dvb->dmxdev);
 err_dvb_dmx_release:
-	dvb_dmx_release(dvbdemux);
+	mediatree_dvb_dmx_release(dvbdemux);
 err_dvb_unregister_adapter:
-	dvb_unregister_adapter(dvb_adapter);
+	mediatree_dvb_unregister_adapter(dvb_adapter);
 err_out:
 	return ret;
 }
@@ -438,14 +438,14 @@ void cx18_dvb_unregister(struct cx18_stream *stream)
 	dmx = &dvbdemux->dmx;
 
 	dmx->close(dmx);
-	dvb_net_release(&dvb->dvbnet);
+	mediatree_dvb_net_release(&dvb->dvbnet);
 	dmx->remove_frontend(dmx, &dvb->mem_frontend);
 	dmx->remove_frontend(dmx, &dvb->hw_frontend);
-	dvb_dmxdev_release(&dvb->dmxdev);
-	dvb_dmx_release(dvbdemux);
-	dvb_unregister_frontend(dvb->fe);
-	dvb_frontend_detach(dvb->fe);
-	dvb_unregister_adapter(dvb_adapter);
+	mediatree_dvb_dmxdev_release(&dvb->dmxdev);
+	mediatree_dvb_dmx_release(dvbdemux);
+	mediatree_dvb_unregister_frontend(dvb->fe);
+	mediatree_dvb_frontend_detach(dvb->fe);
+	mediatree_dvb_unregister_adapter(dvb_adapter);
 }
 
 /* All the DVB attach calls go here, this function gets modified
@@ -569,7 +569,7 @@ static int dvb_register(struct cx18_stream *stream)
 
 	dvb->fe->callback = cx18_reset_tuner_gpio;
 
-	ret = dvb_register_frontend(&dvb->dvb_adapter, dvb->fe);
+	ret = mediatree_dvb_register_frontend(&dvb->dvb_adapter, dvb->fe);
 	if (ret < 0) {
 		if (dvb->fe->ops.release)
 			dvb->fe->ops.release(dvb->fe);
diff --git a/drivers/media/pci/cx18/cx18-mailbox.c b/drivers/media/pci/cx18/cx18-mailbox.c
index 162480e..7b1b15d 100644
--- a/drivers/media/pci/cx18/cx18-mailbox.c
+++ b/drivers/media/pci/cx18/cx18-mailbox.c
@@ -133,7 +133,7 @@ static void cx18_mdl_send_to_dvb(struct cx18_stream *s, struct cx18_mdl *mdl)
 		buf = list_first_entry(&mdl->buf_list, struct cx18_buffer,
 				       list);
 		if (buf->bytesused)
-			dvb_dmx_swfilter(&s->dvb->demux,
+			mediatree_dvb_dmx_swfilter(&s->dvb->demux,
 					 buf->buf, buf->bytesused);
 		return;
 	}
@@ -141,7 +141,7 @@ static void cx18_mdl_send_to_dvb(struct cx18_stream *s, struct cx18_mdl *mdl)
 	list_for_each_entry(buf, &mdl->buf_list, list) {
 		if (buf->bytesused == 0)
 			break;
-		dvb_dmx_swfilter(&s->dvb->demux, buf->buf, buf->bytesused);
+		mediatree_dvb_dmx_swfilter(&s->dvb->demux, buf->buf, buf->bytesused);
 	}
 }
 
diff --git a/drivers/media/pci/cx23885/altera-ci.c b/drivers/media/pci/cx23885/altera-ci.c
index e6f27b6..91a1b6a 100644
--- a/drivers/media/pci/cx23885/altera-ci.c
+++ b/drivers/media/pci/cx23885/altera-ci.c
@@ -503,7 +503,7 @@ void altera_ci_release(void *dev, int ci_nr)
 
 		if (state != NULL) {
 			if (state->ca.data != NULL)
-				dvb_ca_en50221_release(&state->ca);
+				mediatree_dvb_ca_en50221_release(&state->ca);
 
 			kfree(state);
 		}
@@ -757,7 +757,7 @@ int altera_ci_init(struct altera_ci_config *config, int ci_nr)
 	state->ca.poll_slot_status = altera_poll_ci_slot_status;
 	state->ca.data = state;
 
-	ret = dvb_ca_en50221_init(config->adapter,
+	ret = mediatree_dvb_ca_en50221_init(config->adapter,
 				   &state->ca,
 				   /* flags */ 0,
 				   /* n_slots */ 1);
diff --git a/drivers/media/pci/cx23885/cimax2.c b/drivers/media/pci/cx23885/cimax2.c
index 06e41f9..b24473f 100644
--- a/drivers/media/pci/cx23885/cimax2.c
+++ b/drivers/media/pci/cx23885/cimax2.c
@@ -282,7 +282,7 @@ int netup_ci_slot_reset(struct dvb_ca_en50221 *en50221, int slot)
 							0, &buf, 1);
 
 	msleep(1000);
-	dvb_ca_en50221_camready_irq(&state->ca, 0);
+	mediatree_dvb_ca_en50221_camready_irq(&state->ca, 0);
 
 	return 0;
 
@@ -340,7 +340,7 @@ static void netup_read_ci_status(struct work_struct *work)
 	int ret;
 
 	/* CAM module IRQ processing. fast operation */
-	dvb_ca_en50221_frda_irq(&state->ca, 0);
+	mediatree_dvb_ca_en50221_frda_irq(&state->ca, 0);
 
 	/* CAM module INSERT/REMOVE processing. slow operation because of i2c
 	 * transfers */
@@ -495,7 +495,7 @@ int netup_ci_init(struct cx23885_tsport *port)
 	if (0 != ret)
 		goto err;
 
-	ret = dvb_ca_en50221_init(&port->frontends.adapter,
+	ret = mediatree_dvb_ca_en50221_init(&port->frontends.adapter,
 				   &state->ca,
 				   /* flags */ 0,
 				   /* n_slots */ 1);
@@ -528,6 +528,6 @@ void netup_ci_exit(struct cx23885_tsport *port)
 	if (NULL == state->ca.data)
 		return;
 
-	dvb_ca_en50221_release(&state->ca);
+	mediatree_dvb_ca_en50221_release(&state->ca);
 	kfree(state);
 }
diff --git a/drivers/media/pci/cx88/cx88-dvb.c b/drivers/media/pci/cx88/cx88-dvb.c
index 2087f24..9f82f63 100644
--- a/drivers/media/pci/cx88/cx88-dvb.c
+++ b/drivers/media/pci/cx88/cx88-dvb.c
@@ -631,8 +631,8 @@ static int attach_xc3028(u8 addr, struct cx8802_dev *dev)
 	fe = dvb_attach(xc2028_attach, fe0->dvb.frontend, &cfg);
 	if (!fe) {
 		pr_err("xc3028 attach failed\n");
-		dvb_frontend_detach(fe0->dvb.frontend);
-		dvb_unregister_frontend(fe0->dvb.frontend);
+		mediatree_dvb_frontend_detach(fe0->dvb.frontend);
+		mediatree_dvb_unregister_frontend(fe0->dvb.frontend);
 		fe0->dvb.frontend = NULL;
 		return -EINVAL;
 	}
@@ -661,8 +661,8 @@ static int attach_xc4000(struct cx8802_dev *dev, struct xc4000_config *cfg)
 			cfg);
 	if (!fe) {
 		pr_err("xc4000 attach failed\n");
-		dvb_frontend_detach(fe0->dvb.frontend);
-		dvb_unregister_frontend(fe0->dvb.frontend);
+		mediatree_dvb_frontend_detach(fe0->dvb.frontend);
+		mediatree_dvb_unregister_frontend(fe0->dvb.frontend);
 		fe0->dvb.frontend = NULL;
 		return -EINVAL;
 	}
diff --git a/drivers/media/pci/ddbridge/ddbridge-ci.c b/drivers/media/pci/ddbridge/ddbridge-ci.c
index 3779910..9abd337 100644
--- a/drivers/media/pci/ddbridge/ddbridge-ci.c
+++ b/drivers/media/pci/ddbridge/ddbridge-ci.c
@@ -363,16 +363,16 @@ int ddb_ci_attach(struct ddb_port *port, u32 bitrate)
 
 	if (!port->en)
 		return -ENODEV;
-	dvb_ca_en50221_init(port->dvb[0].adap, port->en, 0, 1);
+	mediatree_dvb_ca_en50221_init(port->dvb[0].adap, port->en, 0, 1);
 	return 0;
 }
 
 void ddb_ci_detach(struct ddb_port *port)
 {
 	if (port->dvb[0].dev)
-		dvb_unregister_device(port->dvb[0].dev);
+		mediatree_dvb_unregister_device(port->dvb[0].dev);
 	if (port->en) {
-		dvb_ca_en50221_release(port->en);
+		mediatree_dvb_ca_en50221_release(port->en);
 
 		dvb_module_release(port->dvb[0].i2c_client[0]);
 		port->dvb[0].i2c_client[0] = NULL;
diff --git a/drivers/media/pci/ddbridge/ddbridge-core.c b/drivers/media/pci/ddbridge/ddbridge-core.c
index 92fe051..c65e6bd 100644
--- a/drivers/media/pci/ddbridge/ddbridge-core.c
+++ b/drivers/media/pci/ddbridge/ddbridge-core.c
@@ -808,7 +808,7 @@ static int ts_release(struct inode *inode, struct file *file)
 			return -EINVAL;
 		ddb_output_stop(output);
 	}
-	return dvb_generic_release(inode, file);
+	return mediatree_dvb_generic_release(inode, file);
 }
 
 static int ts_open(struct inode *inode, struct file *file)
@@ -835,7 +835,7 @@ static int ts_open(struct inode *inode, struct file *file)
 		return -EINVAL;
 	}
 
-	err = dvb_generic_open(inode, file);
+	err = mediatree_dvb_generic_open(inode, file);
 	if (err < 0)
 		return err;
 	if ((file->f_flags & O_ACCMODE) == O_RDONLY)
@@ -1135,7 +1135,7 @@ static int demod_attach_stv0900(struct ddb_input *input, int type)
 			0, (input->nr & 1) ?
 			(0x09 - type) : (0x0b - type))) {
 		dev_err(dev, "No LNBH24 found!\n");
-		dvb_frontend_detach(dvb->fe);
+		mediatree_dvb_frontend_detach(dvb->fe);
 		return -ENODEV;
 	}
 	return 0;
@@ -1234,7 +1234,7 @@ static int demod_attach_stv0910(struct ddb_input *input, int type, int tsfast)
 
 	if (!dvb_attach(lnbh25_attach, dvb->fe, &lnbcfg, i2c)) {
 		dev_err(dev, "No LNBH25 found!\n");
-		dvb_frontend_detach(dvb->fe);
+		mediatree_dvb_frontend_detach(dvb->fe);
 		return -ENODEV;
 	}
 
@@ -1307,23 +1307,23 @@ static void dvb_input_detach(struct ddb_input *input)
 	switch (dvb->attached) {
 	case 0x31:
 		if (dvb->fe2)
-			dvb_unregister_frontend(dvb->fe2);
+			mediatree_dvb_unregister_frontend(dvb->fe2);
 		if (dvb->fe)
-			dvb_unregister_frontend(dvb->fe);
+			mediatree_dvb_unregister_frontend(dvb->fe);
 		fallthrough;
 	case 0x30:
 		dvb_module_release(dvb->i2c_client[0]);
 		dvb->i2c_client[0] = NULL;
 
 		if (dvb->fe2)
-			dvb_frontend_detach(dvb->fe2);
+			mediatree_dvb_frontend_detach(dvb->fe2);
 		if (dvb->fe)
-			dvb_frontend_detach(dvb->fe);
+			mediatree_dvb_frontend_detach(dvb->fe);
 		dvb->fe = NULL;
 		dvb->fe2 = NULL;
 		fallthrough;
 	case 0x20:
-		dvb_net_release(&dvb->dvbnet);
+		mediatree_dvb_net_release(&dvb->dvbnet);
 		fallthrough;
 	case 0x12:
 		dvbdemux->dmx.remove_frontend(&dvbdemux->dmx,
@@ -1332,10 +1332,10 @@ static void dvb_input_detach(struct ddb_input *input)
 					      &dvb->mem_frontend);
 		fallthrough;
 	case 0x11:
-		dvb_dmxdev_release(&dvb->dmxdev);
+		mediatree_dvb_dmxdev_release(&dvb->dmxdev);
 		fallthrough;
 	case 0x10:
-		dvb_dmx_release(&dvb->demux);
+		mediatree_dvb_dmx_release(&dvb->demux);
 		fallthrough;
 	case 0x01:
 		break;
@@ -1343,7 +1343,7 @@ static void dvb_input_detach(struct ddb_input *input)
 	dvb->attached = 0x00;
 }
 
-static int dvb_register_adapters(struct ddb *dev)
+static int mediatree_dvb_register_adapters(struct ddb *dev)
 {
 	int i, ret = 0;
 	struct ddb_port *port;
@@ -1352,7 +1352,7 @@ static int dvb_register_adapters(struct ddb *dev)
 	if (adapter_alloc == 3) {
 		port = &dev->port[0];
 		adap = port->dvb[0].adap;
-		ret = dvb_register_adapter(adap, "DDBridge", THIS_MODULE,
+		ret = mediatree_dvb_register_adapter(adap, "DDBridge", THIS_MODULE,
 					   port->dev->dev,
 					   adapter_nr);
 		if (ret < 0)
@@ -1371,7 +1371,7 @@ static int dvb_register_adapters(struct ddb *dev)
 		switch (port->class) {
 		case DDB_PORT_TUNER:
 			adap = port->dvb[0].adap;
-			ret = dvb_register_adapter(adap, "DDBridge",
+			ret = mediatree_dvb_register_adapter(adap, "DDBridge",
 						   THIS_MODULE,
 						   port->dev->dev,
 						   adapter_nr);
@@ -1384,7 +1384,7 @@ static int dvb_register_adapters(struct ddb *dev)
 				break;
 			}
 			adap = port->dvb[1].adap;
-			ret = dvb_register_adapter(adap, "DDBridge",
+			ret = mediatree_dvb_register_adapter(adap, "DDBridge",
 						   THIS_MODULE,
 						   port->dev->dev,
 						   adapter_nr);
@@ -1396,7 +1396,7 @@ static int dvb_register_adapters(struct ddb *dev)
 		case DDB_PORT_CI:
 		case DDB_PORT_LOOP:
 			adap = port->dvb[0].adap;
-			ret = dvb_register_adapter(adap, "DDBridge",
+			ret = mediatree_dvb_register_adapter(adap, "DDBridge",
 						   THIS_MODULE,
 						   port->dev->dev,
 						   adapter_nr);
@@ -1408,7 +1408,7 @@ static int dvb_register_adapters(struct ddb *dev)
 			if (adapter_alloc < 2)
 				break;
 			adap = port->dvb[0].adap;
-			ret = dvb_register_adapter(adap, "DDBridge",
+			ret = mediatree_dvb_register_adapter(adap, "DDBridge",
 						   THIS_MODULE,
 						   port->dev->dev,
 						   adapter_nr);
@@ -1421,7 +1421,7 @@ static int dvb_register_adapters(struct ddb *dev)
 	return ret;
 }
 
-static void dvb_unregister_adapters(struct ddb *dev)
+static void mediatree_dvb_unregister_adapters(struct ddb *dev)
 {
 	int i;
 	struct ddb_port *port;
@@ -1432,12 +1432,12 @@ static void dvb_unregister_adapters(struct ddb *dev)
 
 		dvb = &port->dvb[0];
 		if (dvb->adap_registered)
-			dvb_unregister_adapter(dvb->adap);
+			mediatree_dvb_unregister_adapter(dvb->adap);
 		dvb->adap_registered = 0;
 
 		dvb = &port->dvb[1];
 		if (dvb->adap_registered)
-			dvb_unregister_adapter(dvb->adap);
+			mediatree_dvb_unregister_adapter(dvb->adap);
 		dvb->adap_registered = 0;
 	}
 }
@@ -1478,14 +1478,14 @@ static int dvb_input_attach(struct ddb_input *input)
 	dvbdemux->stop_feed = stop_feed;
 	dvbdemux->filternum = 256;
 	dvbdemux->feednum = 256;
-	ret = dvb_dmx_init(dvbdemux);
+	ret = mediatree_dvb_dmx_init(dvbdemux);
 	if (ret < 0)
 		return ret;
 	dvb->attached = 0x10;
 
 	dvb->dmxdev.filternum = 256;
 	dvb->dmxdev.demux = &dvbdemux->dmx;
-	ret = dvb_dmxdev_init(&dvb->dmxdev, adap);
+	ret = mediatree_dvb_dmxdev_init(&dvb->dmxdev, adap);
 	if (ret < 0)
 		goto err_detach;
 	dvb->attached = 0x11;
@@ -1499,7 +1499,7 @@ static int dvb_input_attach(struct ddb_input *input)
 		goto err_detach;
 	dvb->attached = 0x12;
 
-	ret = dvb_net_init(adap, &dvb->dvbnet, dvb->dmxdev.demux);
+	ret = mediatree_dvb_net_init(adap, &dvb->dvbnet, dvb->dmxdev.demux);
 	if (ret < 0)
 		goto err_detach;
 	dvb->attached = 0x20;
@@ -1598,12 +1598,12 @@ static int dvb_input_attach(struct ddb_input *input)
 	dvb->attached = 0x30;
 
 	if (dvb->fe) {
-		if (dvb_register_frontend(adap, dvb->fe) < 0)
+		if (mediatree_dvb_register_frontend(adap, dvb->fe) < 0)
 			goto err_detach;
 
 		if (dvb->fe2) {
-			if (dvb_register_frontend(adap, dvb->fe2) < 0) {
-				dvb_unregister_frontend(dvb->fe);
+			if (mediatree_dvb_register_frontend(adap, dvb->fe2) < 0) {
+				mediatree_dvb_unregister_frontend(dvb->fe);
 				goto err_detach;
 			}
 			dvb->fe2->tuner_priv = dvb->fe->tuner_priv;
@@ -1620,9 +1620,9 @@ err_tuner:
 	dev_err(port->dev->dev, "tuner attach failed!\n");
 
 	if (dvb->fe2)
-		dvb_frontend_detach(dvb->fe2);
+		mediatree_dvb_frontend_detach(dvb->fe2);
 	if (dvb->fe)
-		dvb_frontend_detach(dvb->fe);
+		mediatree_dvb_frontend_detach(dvb->fe);
 err_detach:
 	dvb_input_detach(input);
 
@@ -2038,7 +2038,7 @@ static int ddb_port_attach(struct ddb_port *port)
 			break;
 		fallthrough;
 	case DDB_PORT_LOOP:
-		ret = dvb_register_device(port->dvb[0].adap,
+		ret = mediatree_dvb_register_device(port->dvb[0].adap,
 					  &port->dvb[0].dev,
 					  &dvbdev_ci, (void *)port->output,
 					  DVB_DEVICE_SEC, 0);
@@ -2058,7 +2058,7 @@ int ddb_ports_attach(struct ddb *dev)
 	struct ddb_port *port;
 
 	if (dev->port_num) {
-		ret = dvb_register_adapters(dev);
+		ret = mediatree_dvb_register_adapters(dev);
 		if (ret < 0) {
 			dev_err(dev->dev, "Registering adapters failed. Check DVB_MAX_ADAPTERS in config.\n");
 			return ret;
@@ -2110,7 +2110,7 @@ void ddb_ports_detach(struct ddb *dev)
 			break;
 		}
 	}
-	dvb_unregister_adapters(dev);
+	mediatree_dvb_unregister_adapters(dev);
 }
 
 /* Copy input DMA pointers to output DMA and ACK. */
@@ -2158,7 +2158,7 @@ static void input_write_dvb(struct ddb_input *input,
 		if (alt_dma)
 			dma_sync_single_for_cpu(dev->dev, dma2->pbuf[dma->cbuf],
 						dma2->size, DMA_FROM_DEVICE);
-		dvb_dmx_swfilter_packets(&dvb->demux,
+		mediatree_dvb_dmx_swfilter_packets(&dvb->demux,
 					 dma2->vbuf[dma->cbuf],
 					 dma2->size / 188);
 		dma->cbuf = (dma->cbuf + 1) % dma2->num;
diff --git a/drivers/media/pci/dm1105/dm1105.c b/drivers/media/pci/dm1105/dm1105.c
index 4ac645a..9509697 100644
--- a/drivers/media/pci/dm1105/dm1105.c
+++ b/drivers/media/pci/dm1105/dm1105.c
@@ -695,7 +695,7 @@ static void dm1105_dmx_buffer(struct work_struct *work)
 		nbpackets = (nextwrp - oldwrp) / 188;
 
 	dev->wrp = nextwrp;
-	dvb_dmx_swfilter_packets(&dev->demux, &dev->ts_buf[oldwrp], nbpackets);
+	mediatree_dvb_dmx_swfilter_packets(&dev->demux, &dev->ts_buf[oldwrp], nbpackets);
 }
 
 static irqreturn_t dm1105_irq(int irq, void *dev_id)
@@ -930,7 +930,7 @@ static int frontend_init(struct dm1105_dev *dev)
 		return -ENODEV;
 	}
 
-	ret = dvb_register_frontend(&dev->dvb_adapter, dev->fe);
+	ret = mediatree_dvb_register_frontend(&dev->dvb_adapter, dev->fe);
 	if (ret < 0) {
 		if (dev->fe->ops.release)
 			dev->fe->ops.release(dev->fe);
@@ -1066,7 +1066,7 @@ static int dm1105_probe(struct pci_dev *pdev,
 		goto err_i2c_del_adapter;
 
 	/* dvb */
-	ret = dvb_register_adapter(&dev->dvb_adapter, DRIVER_NAME,
+	ret = mediatree_dvb_register_adapter(&dev->dvb_adapter, DRIVER_NAME,
 					THIS_MODULE, &pdev->dev, adapter_nr);
 	if (ret < 0)
 		goto err_i2c_del_adapters;
@@ -1082,7 +1082,7 @@ static int dm1105_probe(struct pci_dev *pdev,
 	dvbdemux->stop_feed = dm1105_stop_feed;
 	dvbdemux->dmx.capabilities = (DMX_TS_FILTERING |
 			DMX_SECTION_FILTERING | DMX_MEMORY_BASED_FILTERING);
-	ret = dvb_dmx_init(dvbdemux);
+	ret = mediatree_dvb_dmx_init(dvbdemux);
 	if (ret < 0)
 		goto err_dvb_unregister_adapter;
 
@@ -1091,7 +1091,7 @@ static int dm1105_probe(struct pci_dev *pdev,
 	dev->dmxdev.demux = dmx;
 	dev->dmxdev.capabilities = 0;
 
-	ret = dvb_dmxdev_init(&dev->dmxdev, dvb_adapter);
+	ret = mediatree_dvb_dmxdev_init(&dev->dmxdev, dvb_adapter);
 	if (ret < 0)
 		goto err_dvb_dmx_release;
 
@@ -1111,7 +1111,7 @@ static int dm1105_probe(struct pci_dev *pdev,
 	if (ret < 0)
 		goto err_remove_mem_frontend;
 
-	ret = dvb_net_init(dvb_adapter, &dev->dvbnet, dmx);
+	ret = mediatree_dvb_net_init(dvb_adapter, &dev->dvbnet, dmx);
 	if (ret < 0)
 		goto err_disconnect_frontend;
 
@@ -1139,7 +1139,7 @@ static int dm1105_probe(struct pci_dev *pdev,
 err_workqueue:
 	destroy_workqueue(dev->wq);
 err_dvb_net:
-	dvb_net_release(&dev->dvbnet);
+	mediatree_dvb_net_release(&dev->dvbnet);
 err_disconnect_frontend:
 	dmx->disconnect_frontend(dmx);
 err_remove_mem_frontend:
@@ -1147,11 +1147,11 @@ err_remove_mem_frontend:
 err_remove_hw_frontend:
 	dmx->remove_frontend(dmx, &dev->hw_frontend);
 err_dvb_dmxdev_release:
-	dvb_dmxdev_release(&dev->dmxdev);
+	mediatree_dvb_dmxdev_release(&dev->dmxdev);
 err_dvb_dmx_release:
-	dvb_dmx_release(dvbdemux);
+	mediatree_dvb_dmx_release(dvbdemux);
 err_dvb_unregister_adapter:
-	dvb_unregister_adapter(dvb_adapter);
+	mediatree_dvb_unregister_adapter(dvb_adapter);
 err_i2c_del_adapters:
 	i2c_del_adapter(&dev->i2c_bb_adap);
 err_i2c_del_adapter:
@@ -1178,16 +1178,16 @@ static void dm1105_remove(struct pci_dev *pdev)
 
 	dm1105_ir_exit(dev);
 	dmx->close(dmx);
-	dvb_net_release(&dev->dvbnet);
+	mediatree_dvb_net_release(&dev->dvbnet);
 	if (dev->fe)
-		dvb_unregister_frontend(dev->fe);
+		mediatree_dvb_unregister_frontend(dev->fe);
 
 	dmx->disconnect_frontend(dmx);
 	dmx->remove_frontend(dmx, &dev->mem_frontend);
 	dmx->remove_frontend(dmx, &dev->hw_frontend);
-	dvb_dmxdev_release(&dev->dmxdev);
-	dvb_dmx_release(dvbdemux);
-	dvb_unregister_adapter(dvb_adapter);
+	mediatree_dvb_dmxdev_release(&dev->dmxdev);
+	mediatree_dvb_dmx_release(dvbdemux);
+	mediatree_dvb_unregister_adapter(dvb_adapter);
 	i2c_del_adapter(&dev->i2c_adap);
 
 	dm1105_hw_exit(dev);
diff --git a/drivers/media/pci/mantis/mantis_ca.c b/drivers/media/pci/mantis/mantis_ca.c
index 0fad0a9..13c25ec 100644
--- a/drivers/media/pci/mantis/mantis_ca.c
+++ b/drivers/media/pci/mantis/mantis_ca.c
@@ -88,7 +88,7 @@ static int mantis_ca_slot_reset(struct dvb_ca_en50221 *en50221, int slot)
 	udelay(500);
 	mmwrite(0x00, MANTIS_PCMCIA_RESET); /* Trailing edge deassert */
 	msleep(1000);
-	dvb_ca_en50221_camready_irq(&ca->en50221, 0);
+	mediatree_dvb_ca_en50221_camready_irq(&ca->en50221, 0);
 
 	return 0;
 }
@@ -166,7 +166,7 @@ int mantis_ca_init(struct mantis_pci *mantis)
 	init_waitqueue_head(&ca->hif_write_wq);
 
 	dprintk(MANTIS_ERROR, 1, "Registering EN50221 device");
-	result = dvb_ca_en50221_init(dvb_adapter, &ca->en50221, ca_flags, 1);
+	result = mediatree_dvb_ca_en50221_init(dvb_adapter, &ca->en50221, ca_flags, 1);
 	if (result != 0) {
 		dprintk(MANTIS_ERROR, 1, "EN50221: Initialization failed <%d>", result);
 		goto err;
@@ -190,7 +190,7 @@ void mantis_ca_exit(struct mantis_pci *mantis)
 
 	mantis_evmgr_exit(ca);
 	dprintk(MANTIS_ERROR, 1, "Unregistering EN50221 device");
-	dvb_ca_en50221_release(&ca->en50221);
+	mediatree_dvb_ca_en50221_release(&ca->en50221);
 
 	kfree(ca);
 }
diff --git a/drivers/media/pci/mantis/mantis_dma.c b/drivers/media/pci/mantis/mantis_dma.c
index 80c8439..1d6ee2b 100644
--- a/drivers/media/pci/mantis/mantis_dma.c
+++ b/drivers/media/pci/mantis/mantis_dma.c
@@ -209,7 +209,7 @@ void mantis_dma_xfer(struct tasklet_struct *t)
 		dprintk(MANTIS_DEBUG, 1, "last block=[%d] finished block=[%d]",
 			mantis->last_block, mantis->busy_block);
 
-		(config->ts_size ? dvb_dmx_swfilter_204 : dvb_dmx_swfilter)
+		(config->ts_size ? mediatree_dvb_dmx_swfilter_204 : mediatree_dvb_dmx_swfilter)
 		(&mantis->demux, &mantis->buf_cpu[mantis->last_block * MANTIS_BLOCK_BYTES], MANTIS_BLOCK_BYTES);
 		mantis->last_block = (mantis->last_block + 1) % MANTIS_BLOCK_COUNT;
 	}
diff --git a/drivers/media/pci/mantis/mantis_dvb.c b/drivers/media/pci/mantis/mantis_dvb.c
index c7ba4a7..b44d56d 100644
--- a/drivers/media/pci/mantis/mantis_dvb.c
+++ b/drivers/media/pci/mantis/mantis_dvb.c
@@ -137,9 +137,9 @@ int mantis_dvb_init(struct mantis_pci *mantis)
 	struct mantis_hwconfig *config = mantis->hwconfig;
 	int result;
 
-	dprintk(MANTIS_DEBUG, 1, "dvb_register_adapter");
+	dprintk(MANTIS_DEBUG, 1, "mediatree_dvb_register_adapter");
 
-	result = dvb_register_adapter(&mantis->dvb_adapter,
+	result = mediatree_dvb_register_adapter(&mantis->dvb_adapter,
 				      "Mantis DVB adapter",
 				      THIS_MODULE,
 				      &mantis->pdev->dev,
@@ -163,10 +163,10 @@ int mantis_dvb_init(struct mantis_pci *mantis)
 	mantis->demux.stop_feed		= mantis_dvb_stop_feed;
 	mantis->demux.write_to_decoder	= NULL;
 
-	dprintk(MANTIS_DEBUG, 1, "dvb_dmx_init");
-	result = dvb_dmx_init(&mantis->demux);
+	dprintk(MANTIS_DEBUG, 1, "mediatree_dvb_dmx_init");
+	result = mediatree_dvb_dmx_init(&mantis->demux);
 	if (result < 0) {
-		dprintk(MANTIS_ERROR, 1, "dvb_dmx_init failed, ERROR=%d", result);
+		dprintk(MANTIS_ERROR, 1, "mediatree_dvb_dmx_init failed, ERROR=%d", result);
 
 		goto err0;
 	}
@@ -174,12 +174,12 @@ int mantis_dvb_init(struct mantis_pci *mantis)
 	mantis->dmxdev.filternum	= 256;
 	mantis->dmxdev.demux		= &mantis->demux.dmx;
 	mantis->dmxdev.capabilities	= 0;
-	dprintk(MANTIS_DEBUG, 1, "dvb_dmxdev_init");
+	dprintk(MANTIS_DEBUG, 1, "mediatree_dvb_dmxdev_init");
 
-	result = dvb_dmxdev_init(&mantis->dmxdev, &mantis->dvb_adapter);
+	result = mediatree_dvb_dmxdev_init(&mantis->dmxdev, &mantis->dvb_adapter);
 	if (result < 0) {
 
-		dprintk(MANTIS_ERROR, 1, "dvb_dmxdev_init failed, ERROR=%d", result);
+		dprintk(MANTIS_ERROR, 1, "mediatree_dvb_dmxdev_init failed, ERROR=%d", result);
 		goto err1;
 	}
 
@@ -187,24 +187,24 @@ int mantis_dvb_init(struct mantis_pci *mantis)
 	result = mantis->demux.dmx.add_frontend(&mantis->demux.dmx, &mantis->fe_hw);
 	if (result < 0) {
 
-		dprintk(MANTIS_ERROR, 1, "dvb_dmx_init failed, ERROR=%d", result);
+		dprintk(MANTIS_ERROR, 1, "mediatree_dvb_dmx_init failed, ERROR=%d", result);
 		goto err2;
 	}
 
 	mantis->fe_mem.source		= DMX_MEMORY_FE;
 	result = mantis->demux.dmx.add_frontend(&mantis->demux.dmx, &mantis->fe_mem);
 	if (result < 0) {
-		dprintk(MANTIS_ERROR, 1, "dvb_dmx_init failed, ERROR=%d", result);
+		dprintk(MANTIS_ERROR, 1, "mediatree_dvb_dmx_init failed, ERROR=%d", result);
 		goto err3;
 	}
 
 	result = mantis->demux.dmx.connect_frontend(&mantis->demux.dmx, &mantis->fe_hw);
 	if (result < 0) {
-		dprintk(MANTIS_ERROR, 1, "dvb_dmx_init failed, ERROR=%d", result);
+		dprintk(MANTIS_ERROR, 1, "mediatree_dvb_dmx_init failed, ERROR=%d", result);
 		goto err4;
 	}
 
-	dvb_net_init(&mantis->dvb_adapter, &mantis->dvbnet, &mantis->demux.dmx);
+	mediatree_dvb_net_init(&mantis->dvb_adapter, &mantis->dvbnet, &mantis->demux.dmx);
 	tasklet_setup(&mantis->tasklet, mantis_dma_xfer);
 	tasklet_disable(&mantis->tasklet);
 	if (mantis->hwconfig) {
@@ -218,7 +218,7 @@ int mantis_dvb_init(struct mantis_pci *mantis)
 				dprintk(MANTIS_ERROR, 1, "FE <NULL>");
 				goto err5;
 			}
-			result = dvb_register_frontend(&mantis->dvb_adapter, mantis->fe);
+			result = mediatree_dvb_register_frontend(&mantis->dvb_adapter, mantis->fe);
 			if (result) {
 				dprintk(MANTIS_ERROR, 1, "ERROR: Frontend registration failed");
 
@@ -236,10 +236,10 @@ int mantis_dvb_init(struct mantis_pci *mantis)
 	/* Error conditions ..	*/
 err5:
 	tasklet_kill(&mantis->tasklet);
-	dvb_net_release(&mantis->dvbnet);
+	mediatree_dvb_net_release(&mantis->dvbnet);
 	if (mantis->fe) {
-		dvb_unregister_frontend(mantis->fe);
-		dvb_frontend_detach(mantis->fe);
+		mediatree_dvb_unregister_frontend(mantis->fe);
+		mediatree_dvb_frontend_detach(mantis->fe);
 	}
 err4:
 	mantis->demux.dmx.remove_frontend(&mantis->demux.dmx, &mantis->fe_mem);
@@ -248,13 +248,13 @@ err3:
 	mantis->demux.dmx.remove_frontend(&mantis->demux.dmx, &mantis->fe_hw);
 
 err2:
-	dvb_dmxdev_release(&mantis->dmxdev);
+	mediatree_dvb_dmxdev_release(&mantis->dmxdev);
 
 err1:
-	dvb_dmx_release(&mantis->demux);
+	mediatree_dvb_dmx_release(&mantis->demux);
 
 err0:
-	dvb_unregister_adapter(&mantis->dvb_adapter);
+	mediatree_dvb_unregister_adapter(&mantis->dvb_adapter);
 
 	return result;
 }
@@ -269,21 +269,21 @@ int mantis_dvb_exit(struct mantis_pci *mantis)
 		err = mantis_frontend_shutdown(mantis);
 		if (err != 0)
 			dprintk(MANTIS_ERROR, 1, "Frontend exit while POWER ON! <%d>", err);
-		dvb_unregister_frontend(mantis->fe);
-		dvb_frontend_detach(mantis->fe);
+		mediatree_dvb_unregister_frontend(mantis->fe);
+		mediatree_dvb_frontend_detach(mantis->fe);
 	}
 
 	tasklet_kill(&mantis->tasklet);
-	dvb_net_release(&mantis->dvbnet);
+	mediatree_dvb_net_release(&mantis->dvbnet);
 
 	mantis->demux.dmx.remove_frontend(&mantis->demux.dmx, &mantis->fe_mem);
 	mantis->demux.dmx.remove_frontend(&mantis->demux.dmx, &mantis->fe_hw);
 
-	dvb_dmxdev_release(&mantis->dmxdev);
-	dvb_dmx_release(&mantis->demux);
+	mediatree_dvb_dmxdev_release(&mantis->dmxdev);
+	mediatree_dvb_dmx_release(&mantis->demux);
 
-	dprintk(MANTIS_DEBUG, 1, "dvb_unregister_adapter");
-	dvb_unregister_adapter(&mantis->dvb_adapter);
+	dprintk(MANTIS_DEBUG, 1, "mediatree_dvb_unregister_adapter");
+	mediatree_dvb_unregister_adapter(&mantis->dvb_adapter);
 
 	return 0;
 }
diff --git a/drivers/media/pci/mantis/mantis_evm.c b/drivers/media/pci/mantis/mantis_evm.c
index 2fb98ec..3ba3e02 100644
--- a/drivers/media/pci/mantis/mantis_evm.c
+++ b/drivers/media/pci/mantis/mantis_evm.c
@@ -38,7 +38,7 @@ static void mantis_hifevm_work(struct work_struct *work)
 			dprintk(MANTIS_DEBUG, 1, "Event Mgr: Adapter(%d) Slot(0): CAM Plugin", mantis->num);
 			mmwrite(0xdada0000, MANTIS_CARD_RESET);
 			mantis_event_cam_plugin(ca);
-			dvb_ca_en50221_camchange_irq(&ca->en50221,
+			mediatree_dvb_ca_en50221_camchange_irq(&ca->en50221,
 						     0,
 						     DVB_CA_EN50221_CAMCHANGE_INSERTED);
 		}
@@ -47,7 +47,7 @@ static void mantis_hifevm_work(struct work_struct *work)
 			dprintk(MANTIS_DEBUG, 1, "Event Mgr: Adapter(%d) Slot(0): CAM Unplug", mantis->num);
 			mmwrite(0xdada0000, MANTIS_CARD_RESET);
 			mantis_event_cam_unplug(ca);
-			dvb_ca_en50221_camchange_irq(&ca->en50221,
+			mediatree_dvb_ca_en50221_camchange_irq(&ca->en50221,
 						     0,
 						     DVB_CA_EN50221_CAMCHANGE_REMOVED);
 		}
diff --git a/drivers/media/pci/mantis/mantis_pcmcia.c b/drivers/media/pci/mantis/mantis_pcmcia.c
index e4eac06..0afeaed 100644
--- a/drivers/media/pci/mantis/mantis_pcmcia.c
+++ b/drivers/media/pci/mantis/mantis_pcmcia.c
@@ -85,14 +85,14 @@ int mantis_pcmcia_init(struct mantis_ca *ca)
 		dprintk(MANTIS_DEBUG, 1, "CAM found on Adapter(%d) Slot(0)", mantis->num);
 		mmwrite(card_stat | MANTIS_MASK_PLUGOUT, MANTIS_GPIF_IRQCFG);
 		ca->slot_state = MODULE_INSERTED;
-		dvb_ca_en50221_camchange_irq(&ca->en50221,
+		mediatree_dvb_ca_en50221_camchange_irq(&ca->en50221,
 					     0,
 					     DVB_CA_EN50221_CAMCHANGE_INSERTED);
 	} else {
 		dprintk(MANTIS_DEBUG, 1, "Empty Slot on Adapter(%d) Slot(0)", mantis->num);
 		mmwrite(card_stat | MANTIS_MASK_PLUGIN, MANTIS_GPIF_IRQCFG);
 		ca->slot_state = MODULE_XTRACTED;
-		dvb_ca_en50221_camchange_irq(&ca->en50221,
+		mediatree_dvb_ca_en50221_camchange_irq(&ca->en50221,
 					     0,
 					     DVB_CA_EN50221_CAMCHANGE_REMOVED);
 	}
diff --git a/drivers/media/pci/netup_unidvb/Makefile b/drivers/media/pci/netup_unidvb/Makefile
index 215bdaf..a6b01b5 100644
--- a/drivers/media/pci/netup_unidvb/Makefile
+++ b/drivers/media/pci/netup_unidvb/Makefile
@@ -1,5 +1,5 @@
 # SPDX-License-Identifier: GPL-2.0
-netup-unidvb-objs += netup_unidvb_core.o
+netup-unidvb-objs += netup_unimediatree_dvb_core.o
 netup-unidvb-objs += netup_unidvb_i2c.o
 netup-unidvb-objs += netup_unidvb_ci.o
 netup-unidvb-objs += netup_unidvb_spi.o
diff --git a/drivers/media/pci/netup_unidvb/netup_unidvb_ci.c b/drivers/media/pci/netup_unidvb/netup_unidvb_ci.c
index 29d0739..e7fc902 100644
--- a/drivers/media/pci/netup_unidvb/netup_unidvb_ci.c
+++ b/drivers/media/pci/netup_unidvb/netup_unidvb_ci.c
@@ -209,11 +209,11 @@ int netup_unidvb_ci_register(struct netup_unidvb_dev *dev,
 	state->ca.slot_ts_enable = netup_unidvb_ci_slot_ts_ctl;
 	state->ca.poll_slot_status = netup_unidvb_poll_ci_slot_status;
 	state->ca.data = state;
-	result = dvb_ca_en50221_init(&dev->frontends[num].adapter,
+	result = mediatree_dvb_ca_en50221_init(&dev->frontends[num].adapter,
 		&state->ca, 0, 1);
 	if (result < 0) {
 		dev_err(&pci_dev->dev,
-			"%s(): dvb_ca_en50221_init result %d\n",
+			"%s(): mediatree_dvb_ca_en50221_init result %d\n",
 			__func__, result);
 		return result;
 	}
@@ -234,6 +234,6 @@ void netup_unidvb_ci_unregister(struct netup_unidvb_dev *dev, int num)
 		return;
 	}
 	state = &dev->ci[num];
-	dvb_ca_en50221_release(&state->ca);
+	mediatree_dvb_ca_en50221_release(&state->ca);
 }
 
diff --git a/drivers/media/pci/netup_unidvb/netup_unidvb_core.c b/drivers/media/pci/netup_unidvb/netup_unidvb_core.c
index 8287851..4030a11 100644
--- a/drivers/media/pci/netup_unidvb/netup_unidvb_core.c
+++ b/drivers/media/pci/netup_unidvb/netup_unidvb_core.c
@@ -1,6 +1,6 @@
 // SPDX-License-Identifier: GPL-2.0-or-later
 /*
- * netup_unidvb_core.c
+ * netup_unimediatree_dvb_core.c
  *
  * Main module for NetUP Universal Dual DVB-CI
  *
diff --git a/drivers/media/pci/ngene/ngene-cards.c b/drivers/media/pci/ngene/ngene-cards.c
index 1c59449..5838e4a 100644
--- a/drivers/media/pci/ngene/ngene-cards.c
+++ b/drivers/media/pci/ngene/ngene-cards.c
@@ -302,7 +302,7 @@ static int demod_attach_stv0900(struct ngene_channel *chan)
 	if (!dvb_attach(lnbh24_attach, chan->fe, i2c, 0,
 			0, chan->dev->card_info->lnb[chan->number])) {
 		dev_err(pdev, "No LNBH24 found!\n");
-		dvb_frontend_detach(chan->fe);
+		mediatree_dvb_frontend_detach(chan->fe);
 		chan->fe = NULL;
 		return -ENODEV;
 	}
@@ -350,7 +350,7 @@ static int demod_attach_stv0910(struct ngene_channel *chan,
 		lnbcfg.i2c_address = (((chan->number & 1) ? 0x09 : 0x08) << 1);
 		if (!dvb_attach(lnbh25_attach, chan->fe, &lnbcfg, i2c)) {
 			dev_err(pdev, "lnbh25_attach() failed!\n");
-			dvb_frontend_detach(chan->fe);
+			mediatree_dvb_frontend_detach(chan->fe);
 			chan->fe = NULL;
 			return -ENODEV;
 		}
diff --git a/drivers/media/pci/ngene/ngene-core.c b/drivers/media/pci/ngene/ngene-core.c
index 7481f55..8babd36 100644
--- a/drivers/media/pci/ngene/ngene-core.c
+++ b/drivers/media/pci/ngene/ngene-core.c
@@ -712,7 +712,7 @@ void set_transfer(struct ngene_channel *chan, int state)
 
 		/* dev_info(pdev, "lock=%08x\n",
 			  ngreadl(0x9310)); */
-		dvb_ringbuffer_flush(&dev->tsout_rbuf);
+		mediatree_dvb_ringbuffer_flush(&dev->tsout_rbuf);
 		control = 0x80;
 		if (chan->mode & (NGENE_IO_TSIN | NGENE_IO_TSOUT)) {
 			chan->Capture1Length = 512 * 188;
@@ -743,7 +743,7 @@ void set_transfer(struct ngene_channel *chan, int state)
 	if (!state) {
 		spin_lock_irq(&chan->state_lock);
 		chan->pBufferExchange = NULL;
-		dvb_ringbuffer_flush(&dev->tsout_rbuf);
+		mediatree_dvb_ringbuffer_flush(&dev->tsout_rbuf);
 		spin_unlock_irq(&chan->state_lock);
 	}
 }
@@ -1146,27 +1146,27 @@ static int ngene_get_buffers(struct ngene *dev)
 		dev->tsout_buf = vmalloc(TSOUT_BUF_SIZE);
 		if (!dev->tsout_buf)
 			return -ENOMEM;
-		dvb_ringbuffer_init(&dev->tsout_rbuf,
+		mediatree_dvb_ringbuffer_init(&dev->tsout_rbuf,
 				    dev->tsout_buf, TSOUT_BUF_SIZE);
 	}
 	if (dev->card_info->io_type[2]&NGENE_IO_TSIN) {
 		dev->tsin_buf = vmalloc(TSIN_BUF_SIZE);
 		if (!dev->tsin_buf)
 			return -ENOMEM;
-		dvb_ringbuffer_init(&dev->tsin_rbuf,
+		mediatree_dvb_ringbuffer_init(&dev->tsin_rbuf,
 				    dev->tsin_buf, TSIN_BUF_SIZE);
 	}
 	if (dev->card_info->io_type[2] & NGENE_IO_AIN) {
 		dev->ain_buf = vmalloc(AIN_BUF_SIZE);
 		if (!dev->ain_buf)
 			return -ENOMEM;
-		dvb_ringbuffer_init(&dev->ain_rbuf, dev->ain_buf, AIN_BUF_SIZE);
+		mediatree_dvb_ringbuffer_init(&dev->ain_rbuf, dev->ain_buf, AIN_BUF_SIZE);
 	}
 	if (dev->card_info->io_type[0] & NGENE_IO_HDTV) {
 		dev->vin_buf = vmalloc(VIN_BUF_SIZE);
 		if (!dev->vin_buf)
 			return -ENOMEM;
-		dvb_ringbuffer_init(&dev->vin_rbuf, dev->vin_buf, VIN_BUF_SIZE);
+		mediatree_dvb_ringbuffer_init(&dev->vin_rbuf, dev->vin_buf, VIN_BUF_SIZE);
 	}
 	dev->iomem = ioremap(pci_resource_start(dev->pci_dev, 0),
 			     pci_resource_len(dev->pci_dev, 0));
@@ -1398,15 +1398,15 @@ static void release_channel(struct ngene_channel *chan)
 	tasklet_kill(&chan->demux_tasklet);
 
 	if (chan->ci_dev) {
-		dvb_unregister_device(chan->ci_dev);
+		mediatree_dvb_unregister_device(chan->ci_dev);
 		chan->ci_dev = NULL;
 	}
 
 	if (chan->fe2)
-		dvb_unregister_frontend(chan->fe2);
+		mediatree_dvb_unregister_frontend(chan->fe2);
 
 	if (chan->fe) {
-		dvb_unregister_frontend(chan->fe);
+		mediatree_dvb_unregister_frontend(chan->fe);
 
 		/* release I2C client (tuner) if needed */
 		if (chan->i2c_client_fe) {
@@ -1414,24 +1414,24 @@ static void release_channel(struct ngene_channel *chan)
 			chan->i2c_client[0] = NULL;
 		}
 
-		dvb_frontend_detach(chan->fe);
+		mediatree_dvb_frontend_detach(chan->fe);
 		chan->fe = NULL;
 	}
 
 	if (chan->has_demux) {
-		dvb_net_release(&chan->dvbnet);
+		mediatree_dvb_net_release(&chan->dvbnet);
 		dvbdemux->dmx.close(&dvbdemux->dmx);
 		dvbdemux->dmx.remove_frontend(&dvbdemux->dmx,
 					      &chan->hw_frontend);
 		dvbdemux->dmx.remove_frontend(&dvbdemux->dmx,
 					      &chan->mem_frontend);
-		dvb_dmxdev_release(&chan->dmxdev);
-		dvb_dmx_release(&chan->demux);
+		mediatree_dvb_dmxdev_release(&chan->dmxdev);
+		mediatree_dvb_dmx_release(&chan->demux);
 		chan->has_demux = false;
 	}
 
 	if (chan->has_adapter) {
-		dvb_unregister_adapter(&dev->adapter[chan->number]);
+		mediatree_dvb_unregister_adapter(&dev->adapter[chan->number]);
 		chan->has_adapter = false;
 	}
 }
@@ -1474,7 +1474,7 @@ static int init_channel(struct ngene_channel *chan)
 
 		if (nr == 0 || !one_adapter || dev->first_adapter == NULL) {
 			adapter = &dev->adapter[nr];
-			ret = dvb_register_adapter(adapter, "nGene",
+			ret = mediatree_dvb_register_adapter(adapter, "nGene",
 						   THIS_MODULE,
 						   &chan->dev->pci_dev->dev,
 						   adapter_nr);
@@ -1488,11 +1488,11 @@ static int init_channel(struct ngene_channel *chan)
 	}
 
 	if (dev->ci.en && (io & NGENE_IO_TSOUT)) {
-		dvb_ca_en50221_init(adapter, dev->ci.en, 0, 1);
+		mediatree_dvb_ca_en50221_init(adapter, dev->ci.en, 0, 1);
 		set_transfer(chan, 1);
 		chan->dev->channel[2].DataFormatFlags = DF_SWAP32;
 		set_transfer(&chan->dev->channel[2], 1);
-		dvb_register_device(adapter, &chan->ci_dev,
+		mediatree_dvb_register_device(adapter, &chan->ci_dev,
 				    &ngene_dvbdev_ci, (void *) chan,
 				    DVB_DEVICE_SEC, 0);
 		if (!chan->ci_dev)
@@ -1500,12 +1500,12 @@ static int init_channel(struct ngene_channel *chan)
 	}
 
 	if (chan->fe) {
-		if (dvb_register_frontend(adapter, chan->fe) < 0)
+		if (mediatree_dvb_register_frontend(adapter, chan->fe) < 0)
 			goto err;
 		chan->has_demux = true;
 	}
 	if (chan->fe2) {
-		if (dvb_register_frontend(adapter, chan->fe2) < 0)
+		if (mediatree_dvb_register_frontend(adapter, chan->fe2) < 0)
 			goto err;
 		if (chan->fe) {
 			chan->fe2->tuner_priv = chan->fe->tuner_priv;
@@ -1522,14 +1522,14 @@ static int init_channel(struct ngene_channel *chan)
 		ret = my_dvb_dmxdev_ts_card_init(&chan->dmxdev, &chan->demux,
 						 &chan->hw_frontend,
 						 &chan->mem_frontend, adapter);
-		ret = dvb_net_init(adapter, &chan->dvbnet, &chan->demux.dmx);
+		ret = mediatree_dvb_net_init(adapter, &chan->dvbnet, &chan->demux.dmx);
 	}
 
 	return ret;
 
 err:
 	if (chan->fe) {
-		dvb_frontend_detach(chan->fe);
+		mediatree_dvb_frontend_detach(chan->fe);
 		chan->fe = NULL;
 	}
 	release_channel(chan);
@@ -1598,7 +1598,7 @@ static void cxd_detach(struct ngene *dev)
 {
 	struct ngene_ci *ci = &dev->ci;
 
-	dvb_ca_en50221_release(ci->en);
+	mediatree_dvb_ca_en50221_release(ci->en);
 
 	dvb_module_release(dev->channel[0].i2c_client[0]);
 	dev->channel[0].i2c_client[0] = NULL;
diff --git a/drivers/media/pci/ngene/ngene-dvb.c b/drivers/media/pci/ngene/ngene-dvb.c
index fda24ba..4fff97e 100644
--- a/drivers/media/pci/ngene/ngene-dvb.c
+++ b/drivers/media/pci/ngene/ngene-dvb.c
@@ -41,11 +41,11 @@ static ssize_t ts_write(struct file *file, const char __user *buf,
 	struct ngene *dev = chan->dev;
 
 	if (wait_event_interruptible(dev->tsout_rbuf.queue,
-				     dvb_ringbuffer_free
+				     mediatree_dvb_ringbuffer_free
 				     (&dev->tsout_rbuf) >= count) < 0)
 		return 0;
 
-	dvb_ringbuffer_write_user(&dev->tsout_rbuf, buf, count);
+	mediatree_dvb_ringbuffer_write_user(&dev->tsout_rbuf, buf, count);
 
 	return count;
 }
@@ -62,12 +62,12 @@ static ssize_t ts_read(struct file *file, char __user *buf,
 	while (left) {
 		if (wait_event_interruptible(
 			    dev->tsin_rbuf.queue,
-			    dvb_ringbuffer_avail(&dev->tsin_rbuf) > 0) < 0)
+			    mediatree_dvb_ringbuffer_avail(&dev->tsin_rbuf) > 0) < 0)
 			return -EAGAIN;
-		avail = dvb_ringbuffer_avail(&dev->tsin_rbuf);
+		avail = mediatree_dvb_ringbuffer_avail(&dev->tsin_rbuf);
 		if (avail > left)
 			avail = left;
-		dvb_ringbuffer_read_user(&dev->tsin_rbuf, buf, avail);
+		mediatree_dvb_ringbuffer_read_user(&dev->tsin_rbuf, buf, avail);
 		left -= avail;
 		buf += avail;
 	}
@@ -86,9 +86,9 @@ static __poll_t ts_poll(struct file *file, poll_table *wait)
 	poll_wait(file, &rbuf->queue, wait);
 	poll_wait(file, &wbuf->queue, wait);
 
-	if (!dvb_ringbuffer_empty(rbuf))
+	if (!mediatree_dvb_ringbuffer_empty(rbuf))
 		mask |= EPOLLIN | EPOLLRDNORM;
-	if (dvb_ringbuffer_free(wbuf) >= 188)
+	if (mediatree_dvb_ringbuffer_free(wbuf) >= 188)
 		mask |= EPOLLOUT | EPOLLWRNORM;
 
 	return mask;
@@ -98,8 +98,8 @@ static const struct file_operations ci_fops = {
 	.owner   = THIS_MODULE,
 	.read    = ts_read,
 	.write   = ts_write,
-	.open    = dvb_generic_open,
-	.release = dvb_generic_release,
+	.open    = mediatree_dvb_generic_open,
+	.release = mediatree_dvb_generic_release,
 	.poll    = ts_poll,
 	.mmap    = NULL,
 };
@@ -150,8 +150,8 @@ static int tsin_find_offset(void *buf, u32 len)
 static inline void tsin_copy_stripped(struct ngene *dev, void *buf)
 {
 	if (memcmp(buf, fill_ts, sizeof(fill_ts)) != 0) {
-		if (dvb_ringbuffer_free(&dev->tsin_rbuf) >= 188) {
-			dvb_ringbuffer_write(&dev->tsin_rbuf, buf, 188);
+		if (mediatree_dvb_ringbuffer_free(&dev->tsin_rbuf) >= 188) {
+			mediatree_dvb_ringbuffer_write(&dev->tsin_rbuf, buf, 188);
 			wake_up(&dev->tsin_rbuf.queue);
 		}
 	}
@@ -245,7 +245,7 @@ void *tsin_exchange(void *priv, void *buf, u32 len, u32 clock, u32 flags)
 	}
 
 	if (chan->users > 0)
-		dvb_dmx_swfilter(&chan->demux, buf, len);
+		mediatree_dvb_dmx_swfilter(&chan->demux, buf, len);
 
 	return NULL;
 }
@@ -256,14 +256,14 @@ void *tsout_exchange(void *priv, void *buf, u32 len, u32 clock, u32 flags)
 	struct ngene *dev = chan->dev;
 	u32 alen;
 
-	alen = dvb_ringbuffer_avail(&dev->tsout_rbuf);
+	alen = mediatree_dvb_ringbuffer_avail(&dev->tsout_rbuf);
 	alen -= alen % 188;
 
 	if (alen < len)
 		FillTSBuffer(buf + alen, len - alen, flags);
 	else
 		alen = len;
-	dvb_ringbuffer_read(&dev->tsout_rbuf, buf, alen);
+	mediatree_dvb_ringbuffer_read(&dev->tsout_rbuf, buf, alen);
 	if (flags & DF_SWAP32)
 		swap_buffer((u32 *)buf, alen);
 	wake_up_interruptible(&dev->tsout_rbuf.queue);
@@ -314,7 +314,7 @@ int my_dvb_dmx_ts_card_init(struct dvb_demux *dvbdemux, char *id,
 	dvbdemux->dmx.capabilities = (DMX_TS_FILTERING |
 				      DMX_SECTION_FILTERING |
 				      DMX_MEMORY_BASED_FILTERING);
-	return dvb_dmx_init(dvbdemux);
+	return mediatree_dvb_dmx_init(dvbdemux);
 }
 
 int my_dvb_dmxdev_ts_card_init(struct dmxdev *dmxdev,
@@ -328,7 +328,7 @@ int my_dvb_dmxdev_ts_card_init(struct dmxdev *dmxdev,
 	dmxdev->filternum = 256;
 	dmxdev->demux = &dvbdemux->dmx;
 	dmxdev->capabilities = 0;
-	ret = dvb_dmxdev_init(dmxdev, dvb_adapter);
+	ret = mediatree_dvb_dmxdev_init(dmxdev, dvb_adapter);
 	if (ret < 0)
 		return ret;
 
diff --git a/drivers/media/pci/pluto2/pluto2.c b/drivers/media/pci/pluto2/pluto2.c
index 6ac9b9b..b55f1d1 100644
--- a/drivers/media/pci/pluto2/pluto2.c
+++ b/drivers/media/pci/pluto2/pluto2.c
@@ -300,7 +300,7 @@ static void pluto_dma_end(struct pluto *pluto, unsigned int nbpackets)
 		}
 	}
 
-	dvb_dmx_swfilter_packets(&pluto->demux, pluto->dma_buf, nbpackets);
+	mediatree_dvb_dmx_swfilter_packets(&pluto->demux, pluto->dma_buf, nbpackets);
 
 	/* clear the dma buffer. this is needed to be able to identify
 	 * new valid ts packets above */
@@ -512,7 +512,7 @@ static int frontend_init(struct pluto *pluto)
 	}
 	pluto->fe->ops.tuner_ops.set_params = lg_tdtpe001p_tuner_set_params;
 
-	ret = dvb_register_frontend(&pluto->dvb_adapter, pluto->fe);
+	ret = mediatree_dvb_register_frontend(&pluto->dvb_adapter, pluto->fe);
 	if (ret < 0) {
 		if (pluto->fe->ops.release)
 			pluto->fe->ops.release(pluto->fe);
@@ -644,7 +644,7 @@ static int pluto2_probe(struct pci_dev *pdev, const struct pci_device_id *ent)
 		goto err_pluto_hw_exit;
 
 	/* dvb */
-	ret = dvb_register_adapter(&pluto->dvb_adapter, DRIVER_NAME,
+	ret = mediatree_dvb_register_adapter(&pluto->dvb_adapter, DRIVER_NAME,
 				   THIS_MODULE, &pdev->dev, adapter_nr);
 	if (ret < 0)
 		goto err_i2c_del_adapter;
@@ -662,7 +662,7 @@ static int pluto2_probe(struct pci_dev *pdev, const struct pci_device_id *ent)
 	dvbdemux->stop_feed = pluto_stop_feed;
 	dvbdemux->dmx.capabilities = (DMX_TS_FILTERING |
 			DMX_SECTION_FILTERING | DMX_MEMORY_BASED_FILTERING);
-	ret = dvb_dmx_init(dvbdemux);
+	ret = mediatree_dvb_dmx_init(dvbdemux);
 	if (ret < 0)
 		goto err_dvb_unregister_adapter;
 
@@ -673,7 +673,7 @@ static int pluto2_probe(struct pci_dev *pdev, const struct pci_device_id *ent)
 	pluto->dmxdev.filternum = NHWFILTERS;
 	pluto->dmxdev.demux = dmx;
 
-	ret = dvb_dmxdev_init(&pluto->dmxdev, dvb_adapter);
+	ret = mediatree_dvb_dmxdev_init(&pluto->dmxdev, dvb_adapter);
 	if (ret < 0)
 		goto err_dvb_dmx_release;
 
@@ -693,7 +693,7 @@ static int pluto2_probe(struct pci_dev *pdev, const struct pci_device_id *ent)
 	if (ret < 0)
 		goto err_disconnect_frontend;
 
-	dvb_net_init(dvb_adapter, &pluto->dvbnet, dmx);
+	mediatree_dvb_net_init(dvb_adapter, &pluto->dvbnet, dmx);
 out:
 	return ret;
 
@@ -704,11 +704,11 @@ err_remove_mem_frontend:
 err_remove_hw_frontend:
 	dmx->remove_frontend(dmx, &pluto->hw_frontend);
 err_dvb_dmxdev_release:
-	dvb_dmxdev_release(&pluto->dmxdev);
+	mediatree_dvb_dmxdev_release(&pluto->dmxdev);
 err_dvb_dmx_release:
-	dvb_dmx_release(dvbdemux);
+	mediatree_dvb_dmx_release(dvbdemux);
 err_dvb_unregister_adapter:
-	dvb_unregister_adapter(dvb_adapter);
+	mediatree_dvb_unregister_adapter(dvb_adapter);
 err_i2c_del_adapter:
 	i2c_del_adapter(&pluto->i2c_adap);
 err_pluto_hw_exit:
@@ -734,16 +734,16 @@ static void pluto2_remove(struct pci_dev *pdev)
 	struct dmx_demux *dmx = &dvbdemux->dmx;
 
 	dmx->close(dmx);
-	dvb_net_release(&pluto->dvbnet);
+	mediatree_dvb_net_release(&pluto->dvbnet);
 	if (pluto->fe)
-		dvb_unregister_frontend(pluto->fe);
+		mediatree_dvb_unregister_frontend(pluto->fe);
 
 	dmx->disconnect_frontend(dmx);
 	dmx->remove_frontend(dmx, &pluto->mem_frontend);
 	dmx->remove_frontend(dmx, &pluto->hw_frontend);
-	dvb_dmxdev_release(&pluto->dmxdev);
-	dvb_dmx_release(dvbdemux);
-	dvb_unregister_adapter(dvb_adapter);
+	mediatree_dvb_dmxdev_release(&pluto->dmxdev);
+	mediatree_dvb_dmx_release(dvbdemux);
+	mediatree_dvb_unregister_adapter(dvb_adapter);
 	i2c_del_adapter(&pluto->i2c_adap);
 	pluto_hw_exit(pluto);
 	free_irq(pdev->irq, pluto);
diff --git a/drivers/media/pci/pt1/pt1.c b/drivers/media/pci/pt1/pt1.c
index 121a4a9..447aa81 100644
--- a/drivers/media/pci/pt1/pt1.c
+++ b/drivers/media/pci/pt1/pt1.c
@@ -475,7 +475,7 @@ static int pt1_filter(struct pt1 *pt1, struct pt1_buffer_page *page)
 		if (++adap->upacket_count >= 63) {
 			adap->upacket_count = 0;
 			if (++adap->packet_count >= 21) {
-				dvb_dmx_swfilter_packets(&adap->demux, buf, 21);
+				mediatree_dvb_dmx_swfilter_packets(&adap->demux, buf, 21);
 				adap->packet_count = 0;
 			}
 		}
@@ -814,9 +814,9 @@ static int pt1_wakeup(struct dvb_frontend *fe)
 static void pt1_free_adapter(struct pt1_adapter *adap)
 {
 	adap->demux.dmx.close(&adap->demux.dmx);
-	dvb_dmxdev_release(&adap->dmxdev);
-	dvb_dmx_release(&adap->demux);
-	dvb_unregister_adapter(&adap->adap);
+	mediatree_dvb_dmxdev_release(&adap->dmxdev);
+	mediatree_dvb_dmx_release(&adap->demux);
+	mediatree_dvb_unregister_adapter(&adap->adap);
 	free_page((unsigned long)adap->buf);
 	kfree(adap);
 }
@@ -857,7 +857,7 @@ pt1_alloc_adapter(struct pt1 *pt1)
 
 	dvb_adap = &adap->adap;
 	dvb_adap->priv = adap;
-	ret = dvb_register_adapter(dvb_adap, DRIVER_NAME, THIS_MODULE,
+	ret = mediatree_dvb_register_adapter(dvb_adap, DRIVER_NAME, THIS_MODULE,
 				   &pt1->pdev->dev, adapter_nr);
 	if (ret < 0)
 		goto err_free_page;
@@ -870,7 +870,7 @@ pt1_alloc_adapter(struct pt1 *pt1)
 	demux->start_feed = pt1_start_feed;
 	demux->stop_feed = pt1_stop_feed;
 	demux->write_to_decoder = NULL;
-	ret = dvb_dmx_init(demux);
+	ret = mediatree_dvb_dmx_init(demux);
 	if (ret < 0)
 		goto err_unregister_adapter;
 
@@ -878,16 +878,16 @@ pt1_alloc_adapter(struct pt1 *pt1)
 	dmxdev->filternum = 256;
 	dmxdev->demux = &demux->dmx;
 	dmxdev->capabilities = 0;
-	ret = dvb_dmxdev_init(dmxdev, dvb_adap);
+	ret = mediatree_dvb_dmxdev_init(dmxdev, dvb_adap);
 	if (ret < 0)
 		goto err_dmx_release;
 
 	return adap;
 
 err_dmx_release:
-	dvb_dmx_release(demux);
+	mediatree_dvb_dmx_release(demux);
 err_unregister_adapter:
-	dvb_unregister_adapter(dvb_adap);
+	mediatree_dvb_unregister_adapter(dvb_adap);
 err_free_page:
 	free_page((unsigned long)buf);
 err_kfree:
@@ -930,7 +930,7 @@ err:
 
 static void pt1_cleanup_frontend(struct pt1_adapter *adap)
 {
-	dvb_unregister_frontend(adap->fe);
+	mediatree_dvb_unregister_frontend(adap->fe);
 	dvb_module_release(adap->tuner_i2c_client);
 	dvb_module_release(adap->demod_i2c_client);
 }
@@ -946,7 +946,7 @@ static int pt1_init_frontend(struct pt1_adapter *adap, struct dvb_frontend *fe)
 	fe->ops.sleep = pt1_sleep;
 	fe->ops.init = pt1_wakeup;
 
-	ret = dvb_register_frontend(&adap->adap, fe);
+	ret = mediatree_dvb_register_frontend(&adap->adap, fe);
 	if (ret < 0)
 		return ret;
 
@@ -1025,7 +1025,7 @@ fe_unregister:
 	dev_warn(&pt1->pdev->dev, "failed to init FE(%d).\n", i);
 	i--;
 	for (; i >= 0; i--) {
-		dvb_unregister_frontend(pt1->adaps[i]->fe);
+		mediatree_dvb_unregister_frontend(pt1->adaps[i]->fe);
 		dvb_module_release(pt1->adaps[i]->tuner_i2c_client);
 		dvb_module_release(pt1->adaps[i]->demod_i2c_client);
 	}
@@ -1275,7 +1275,7 @@ static int pt1_resume(struct device *dev)
 		goto resume_err;
 
 	for (i = 0; i < PT1_NR_ADAPS; i++)
-		dvb_frontend_reinitialise(pt1->adaps[i]->fe);
+		mediatree_dvb_frontend_reinitialise(pt1->adaps[i]->fe);
 
 	pt1_init_table_count(pt1);
 	for (i = 0; i < pt1_nr_tables; i++) {
diff --git a/drivers/media/pci/pt3/pt3.c b/drivers/media/pci/pt3/pt3.c
index 0d51bdf..1596aae 100644
--- a/drivers/media/pci/pt3/pt3.c
+++ b/drivers/media/pci/pt3/pt3.c
@@ -407,7 +407,7 @@ static int pt3_attach_fe(struct pt3_board *pt3, int i)
 	pt3->adaps[i]->i2c_tuner = cl;
 
 	dvb_adap = &pt3->adaps[one_adapter ? 0 : i]->dvb_adap;
-	ret = dvb_register_frontend(dvb_adap, cfg.fe);
+	ret = mediatree_dvb_register_frontend(dvb_adap, cfg.fe);
 	if (ret < 0)
 		goto err_tuner_module_release;
 	pt3->adaps[i]->fe = cfg.fe;
@@ -537,7 +537,7 @@ static int pt3_alloc_adapter(struct pt3_board *pt3, int index)
 	adap->adap_idx = index;
 
 	if (index == 0 || !one_adapter) {
-		ret = dvb_register_adapter(&adap->dvb_adap, "PT3 DVB",
+		ret = mediatree_dvb_register_adapter(&adap->dvb_adap, "PT3 DVB",
 				THIS_MODULE, &pt3->pdev->dev, adapter_nr);
 		if (ret < 0) {
 			dev_err(&pt3->pdev->dev,
@@ -555,7 +555,7 @@ static int pt3_alloc_adapter(struct pt3_board *pt3, int index)
 	adap->demux.filternum = 256;
 	adap->demux.start_feed = pt3_start_feed;
 	adap->demux.stop_feed = pt3_stop_feed;
-	ret = dvb_dmx_init(&adap->demux);
+	ret = mediatree_dvb_dmx_init(&adap->demux);
 	if (ret < 0) {
 		dev_err(&pt3->pdev->dev, "failed to init dmx dev\n");
 		goto err_adap;
@@ -563,7 +563,7 @@ static int pt3_alloc_adapter(struct pt3_board *pt3, int index)
 
 	adap->dmxdev.filternum = 256;
 	adap->dmxdev.demux = &adap->demux.dmx;
-	ret = dvb_dmxdev_init(&adap->dmxdev, da);
+	ret = mediatree_dvb_dmxdev_init(&adap->dmxdev, da);
 	if (ret < 0) {
 		dev_err(&pt3->pdev->dev, "failed to init dmxdev\n");
 		goto err_demux;
@@ -579,12 +579,12 @@ static int pt3_alloc_adapter(struct pt3_board *pt3, int index)
 
 err_dmabuf:
 	pt3_free_dmabuf(adap);
-	dvb_dmxdev_release(&adap->dmxdev);
+	mediatree_dvb_dmxdev_release(&adap->dmxdev);
 err_demux:
-	dvb_dmx_release(&adap->demux);
+	mediatree_dvb_dmx_release(&adap->demux);
 err_adap:
 	if (index == 0 || !one_adapter)
-		dvb_unregister_adapter(da);
+		mediatree_dvb_unregister_adapter(da);
 err_mem:
 	kfree(adap);
 	pt3->adaps[index] = NULL;
@@ -609,15 +609,15 @@ static void pt3_cleanup_adapter(struct pt3_board *pt3, int index)
 	if (adap->fe) {
 		adap->fe->callback = NULL;
 		if (adap->fe->frontend_priv)
-			dvb_unregister_frontend(adap->fe);
+			mediatree_dvb_unregister_frontend(adap->fe);
 		dvb_module_release(adap->i2c_tuner);
 		dvb_module_release(adap->i2c_demod);
 	}
 	pt3_free_dmabuf(adap);
-	dvb_dmxdev_release(&adap->dmxdev);
-	dvb_dmx_release(&adap->demux);
+	mediatree_dvb_dmxdev_release(&adap->dmxdev);
+	mediatree_dvb_dmx_release(&adap->demux);
 	if (index == 0 || !one_adapter)
-		dvb_unregister_adapter(&adap->dvb_adap);
+		mediatree_dvb_unregister_adapter(&adap->dvb_adap);
 	kfree(adap);
 	pt3->adaps[index] = NULL;
 }
@@ -634,7 +634,7 @@ static int pt3_suspend(struct device *dev)
 		adap = pt3->adaps[i];
 		if (adap->num_feeds > 0)
 			pt3_stop_dma(adap);
-		dvb_frontend_suspend(adap->fe);
+		mediatree_dvb_frontend_suspend(adap->fe);
 		pt3_free_dmabuf(adap);
 	}
 
@@ -660,7 +660,7 @@ static int pt3_resume(struct device *dev)
 
 	for (i = 0; i < PT3_NUM_FE; i++) {
 		adap = pt3->adaps[i];
-		dvb_frontend_resume(adap->fe);
+		mediatree_dvb_frontend_resume(adap->fe);
 		ret = pt3_alloc_dmabuf(adap);
 		if (ret) {
 			dev_err(&pt3->pdev->dev, "failed to alloc DMA bufs\n");
diff --git a/drivers/media/pci/pt3/pt3_dma.c b/drivers/media/pci/pt3/pt3_dma.c
index de677b9..5234827 100644
--- a/drivers/media/pci/pt3/pt3_dma.c
+++ b/drivers/media/pci/pt3/pt3_dma.c
@@ -87,12 +87,12 @@ int pt3_proc_dma(struct pt3_adapter *adap)
 		if (adap->num_discard > 0)
 			adap->num_discard--;
 		else if (adap->buf_ofs + PT3_ACCESS_UNIT > DATA_BUF_SZ) {
-			dvb_dmx_swfilter_packets(&adap->demux, p,
+			mediatree_dvb_dmx_swfilter_packets(&adap->demux, p,
 				(DATA_BUF_SZ - adap->buf_ofs) / TS_PACKET_SZ);
-			dvb_dmx_swfilter_packets(&adap->demux,
+			mediatree_dvb_dmx_swfilter_packets(&adap->demux,
 				adap->buffer[idx].data, ofs / TS_PACKET_SZ);
 		} else
-			dvb_dmx_swfilter_packets(&adap->demux, p,
+			mediatree_dvb_dmx_swfilter_packets(&adap->demux, p,
 				PT3_ACCESS_UNIT / TS_PACKET_SZ);
 
 		*p = PT3_BUF_CANARY;
diff --git a/drivers/media/pci/saa7164/saa7164-core.c b/drivers/media/pci/saa7164/saa7164-core.c
index 7973ae4..c491db3 100644
--- a/drivers/media/pci/saa7164/saa7164-core.c
+++ b/drivers/media/pci/saa7164/saa7164-core.c
@@ -512,7 +512,7 @@ static void saa7164_buffer_deliver(struct saa7164_buffer *buf)
 	struct saa7164_port *port = buf->port;
 
 	/* Feed the transport payload into the kernel demux */
-	dvb_dmx_swfilter_packets(&port->dvb.demux, (u8 *)buf->cpu,
+	mediatree_dvb_dmx_swfilter_packets(&port->dvb.demux, (u8 *)buf->cpu,
 		SAA7164_TS_NUMBER_OF_LINES);
 
 }
diff --git a/drivers/media/pci/saa7164/saa7164-dvb.c b/drivers/media/pci/saa7164/saa7164-dvb.c
index 24421c1..701d428 100644
--- a/drivers/media/pci/saa7164/saa7164-dvb.c
+++ b/drivers/media/pci/saa7164/saa7164-dvb.c
@@ -342,7 +342,7 @@ static int dvb_register(struct saa7164_port *port)
 	/* Sanity check that the PCI configuration space is active */
 	if (port->hwcfg.BARLocation == 0) {
 		result = -ENOMEM;
-		printk(KERN_ERR "%s: dvb_register_adapter failed (errno = %d), NO PCI configuration\n",
+		printk(KERN_ERR "%s: mediatree_dvb_register_adapter failed (errno = %d), NO PCI configuration\n",
 			DRIVER_NAME, result);
 		goto fail_adapter;
 	}
@@ -370,7 +370,7 @@ static int dvb_register(struct saa7164_port *port)
 
 		if (!buf) {
 			result = -ENOMEM;
-			printk(KERN_ERR "%s: dvb_register_adapter failed (errno = %d), unable to allocate buffers\n",
+			printk(KERN_ERR "%s: mediatree_dvb_register_adapter failed (errno = %d), unable to allocate buffers\n",
 				DRIVER_NAME, result);
 			goto fail_adapter;
 		}
@@ -381,19 +381,19 @@ static int dvb_register(struct saa7164_port *port)
 	}
 
 	/* register adapter */
-	result = dvb_register_adapter(&dvb->adapter, DRIVER_NAME, THIS_MODULE,
+	result = mediatree_dvb_register_adapter(&dvb->adapter, DRIVER_NAME, THIS_MODULE,
 			&dev->pci->dev, adapter_nr);
 	if (result < 0) {
-		printk(KERN_ERR "%s: dvb_register_adapter failed (errno = %d)\n",
+		printk(KERN_ERR "%s: mediatree_dvb_register_adapter failed (errno = %d)\n",
 		       DRIVER_NAME, result);
 		goto fail_adapter;
 	}
 	dvb->adapter.priv = port;
 
 	/* register frontend */
-	result = dvb_register_frontend(&dvb->adapter, dvb->frontend);
+	result = mediatree_dvb_register_frontend(&dvb->adapter, dvb->frontend);
 	if (result < 0) {
-		printk(KERN_ERR "%s: dvb_register_frontend failed (errno = %d)\n",
+		printk(KERN_ERR "%s: mediatree_dvb_register_frontend failed (errno = %d)\n",
 		       DRIVER_NAME, result);
 		goto fail_frontend;
 	}
@@ -407,9 +407,9 @@ static int dvb_register(struct saa7164_port *port)
 	dvb->demux.feednum    = 256;
 	dvb->demux.start_feed = saa7164_dvb_start_feed;
 	dvb->demux.stop_feed  = saa7164_dvb_stop_feed;
-	result = dvb_dmx_init(&dvb->demux);
+	result = mediatree_dvb_dmx_init(&dvb->demux);
 	if (result < 0) {
-		printk(KERN_ERR "%s: dvb_dmx_init failed (errno = %d)\n",
+		printk(KERN_ERR "%s: mediatree_dvb_dmx_init failed (errno = %d)\n",
 		       DRIVER_NAME, result);
 		goto fail_dmx;
 	}
@@ -417,9 +417,9 @@ static int dvb_register(struct saa7164_port *port)
 	dvb->dmxdev.filternum    = 256;
 	dvb->dmxdev.demux        = &dvb->demux.dmx;
 	dvb->dmxdev.capabilities = 0;
-	result = dvb_dmxdev_init(&dvb->dmxdev, &dvb->adapter);
+	result = mediatree_dvb_dmxdev_init(&dvb->dmxdev, &dvb->adapter);
 	if (result < 0) {
-		printk(KERN_ERR "%s: dvb_dmxdev_init failed (errno = %d)\n",
+		printk(KERN_ERR "%s: mediatree_dvb_dmxdev_init failed (errno = %d)\n",
 		       DRIVER_NAME, result);
 		goto fail_dmxdev;
 	}
@@ -448,7 +448,7 @@ static int dvb_register(struct saa7164_port *port)
 	}
 
 	/* register network adapter */
-	dvb_net_init(&dvb->adapter, &dvb->net, &dvb->demux.dmx);
+	mediatree_dvb_net_init(&dvb->adapter, &dvb->net, &dvb->demux.dmx);
 	return 0;
 
 fail_fe_conn:
@@ -456,14 +456,14 @@ fail_fe_conn:
 fail_fe_mem:
 	dvb->demux.dmx.remove_frontend(&dvb->demux.dmx, &dvb->fe_hw);
 fail_fe_hw:
-	dvb_dmxdev_release(&dvb->dmxdev);
+	mediatree_dvb_dmxdev_release(&dvb->dmxdev);
 fail_dmxdev:
-	dvb_dmx_release(&dvb->demux);
+	mediatree_dvb_dmx_release(&dvb->demux);
 fail_dmx:
-	dvb_unregister_frontend(dvb->frontend);
+	mediatree_dvb_unregister_frontend(dvb->frontend);
 fail_frontend:
-	dvb_frontend_detach(dvb->frontend);
-	dvb_unregister_adapter(&dvb->adapter);
+	mediatree_dvb_frontend_detach(dvb->frontend);
+	mediatree_dvb_unregister_adapter(&dvb->adapter);
 fail_adapter:
 	return result;
 }
@@ -506,14 +506,14 @@ int saa7164_dvb_unregister(struct saa7164_port *port)
 		i2c_unregister_device(client);
 	}
 
-	dvb_net_release(&dvb->net);
+	mediatree_dvb_net_release(&dvb->net);
 	dvb->demux.dmx.remove_frontend(&dvb->demux.dmx, &dvb->fe_mem);
 	dvb->demux.dmx.remove_frontend(&dvb->demux.dmx, &dvb->fe_hw);
-	dvb_dmxdev_release(&dvb->dmxdev);
-	dvb_dmx_release(&dvb->demux);
-	dvb_unregister_frontend(dvb->frontend);
-	dvb_frontend_detach(dvb->frontend);
-	dvb_unregister_adapter(&dvb->adapter);
+	mediatree_dvb_dmxdev_release(&dvb->dmxdev);
+	mediatree_dvb_dmx_release(&dvb->demux);
+	mediatree_dvb_unregister_frontend(dvb->frontend);
+	mediatree_dvb_frontend_detach(dvb->frontend);
+	mediatree_dvb_unregister_adapter(&dvb->adapter);
 	return 0;
 }
 
diff --git a/drivers/media/pci/smipcie/smipcie-main.c b/drivers/media/pci/smipcie/smipcie-main.c
index 0c300d0..1a0d29c 100644
--- a/drivers/media/pci/smipcie/smipcie-main.c
+++ b/drivers/media/pci/smipcie/smipcie-main.c
@@ -310,9 +310,9 @@ static void smi_dma_xfer(struct tasklet_struct *t)
 				"DMA CH0 engine complete length mismatched, finish data=%d !\n",
 				finishedData);
 		}
-		dvb_dmx_swfilter_packets(&port->demux,
+		mediatree_dvb_dmx_swfilter_packets(&port->demux,
 			port->cpu_addr[0], (finishedData / 188));
-		/*dvb_dmx_swfilter(&port->demux,
+		/*mediatree_dvb_dmx_swfilter(&port->demux,
 			port->cpu_addr[0], finishedData);*/
 	}
 	/* CH-1 DMA interrupt.*/
@@ -333,9 +333,9 @@ static void smi_dma_xfer(struct tasklet_struct *t)
 				"DMA CH1 engine complete length mismatched, finish data=%d !\n",
 				finishedData);
 		}
-		dvb_dmx_swfilter_packets(&port->demux,
+		mediatree_dvb_dmx_swfilter_packets(&port->demux,
 			port->cpu_addr[1], (finishedData / 188));
-		/*dvb_dmx_swfilter(&port->demux,
+		/*mediatree_dvb_dmx_swfilter(&port->demux,
 			port->cpu_addr[1], finishedData);*/
 	}
 	/* restart DMA.*/
@@ -561,7 +561,7 @@ static int smi_dvbsky_m88ds3103_fe_attach(struct smi_port *port)
 	return ret;
 
 err_tuner_i2c_device:
-	dvb_frontend_detach(port->fe);
+	mediatree_dvb_frontend_detach(port->fe);
 	return ret;
 }
 
@@ -617,7 +617,7 @@ static int smi_dvbsky_m88rs6000_fe_attach(struct smi_port *port)
 	return ret;
 
 err_tuner_i2c_device:
-	dvb_frontend_detach(port->fe);
+	mediatree_dvb_frontend_detach(port->fe);
 	return ret;
 }
 
@@ -699,13 +699,13 @@ static int smi_fe_init(struct smi_port *port)
 		return ret;
 
 	/* register dvb frontend */
-	ret = dvb_register_frontend(adap, port->fe);
+	ret = mediatree_dvb_register_frontend(adap, port->fe);
 	if (ret < 0) {
 		if (port->i2c_client_tuner)
 			smi_del_i2c_client(port->i2c_client_tuner);
 		if (port->i2c_client_demod)
 			smi_del_i2c_client(port->i2c_client_demod);
-		dvb_frontend_detach(port->fe);
+		mediatree_dvb_frontend_detach(port->fe);
 		return ret;
 	}
 	/* init MAC.*/
@@ -719,13 +719,13 @@ static int smi_fe_init(struct smi_port *port)
 
 static void smi_fe_exit(struct smi_port *port)
 {
-	dvb_unregister_frontend(port->fe);
+	mediatree_dvb_unregister_frontend(port->fe);
 	/* remove I2C demod and tuner */
 	if (port->i2c_client_tuner)
 		smi_del_i2c_client(port->i2c_client_tuner);
 	if (port->i2c_client_demod)
 		smi_del_i2c_client(port->i2c_client_demod);
-	dvb_frontend_detach(port->fe);
+	mediatree_dvb_frontend_detach(port->fe);
 }
 
 static int my_dvb_dmx_ts_card_init(struct dvb_demux *dvbdemux, char *id,
@@ -743,7 +743,7 @@ static int my_dvb_dmx_ts_card_init(struct dvb_demux *dvbdemux, char *id,
 	dvbdemux->dmx.capabilities = (DMX_TS_FILTERING |
 				      DMX_SECTION_FILTERING |
 				      DMX_MEMORY_BASED_FILTERING);
-	return dvb_dmx_init(dvbdemux);
+	return mediatree_dvb_dmx_init(dvbdemux);
 }
 
 static int my_dvb_dmxdev_ts_card_init(struct dmxdev *dmxdev,
@@ -757,7 +757,7 @@ static int my_dvb_dmxdev_ts_card_init(struct dmxdev *dmxdev,
 	dmxdev->filternum = 256;
 	dmxdev->demux = &dvbdemux->dmx;
 	dmxdev->capabilities = 0;
-	ret = dvb_dmxdev_init(dmxdev, dvb_adapter);
+	ret = mediatree_dvb_dmxdev_init(dmxdev, dvb_adapter);
 	if (ret < 0)
 		return ret;
 
@@ -852,7 +852,7 @@ static int smi_dvb_init(struct smi_port *port)
 	dev_dbg(&port->dev->pci_dev->dev,
 		"%s, port %d\n", __func__, port->idx);
 
-	ret = dvb_register_adapter(adap, "SMI_DVB", THIS_MODULE,
+	ret = mediatree_dvb_register_adapter(adap, "SMI_DVB", THIS_MODULE,
 				   &port->dev->pci_dev->dev,
 				   adapter_nr);
 	if (ret < 0) {
@@ -863,7 +863,7 @@ static int smi_dvb_init(struct smi_port *port)
 				      smi_start_feed,
 				      smi_stop_feed, port);
 	if (ret < 0)
-		goto err_del_dvb_register_adapter;
+		goto err_del_mediatree_dvb_register_adapter;
 
 	ret = my_dvb_dmxdev_ts_card_init(&port->dmxdev, &port->demux,
 					 &port->hw_frontend,
@@ -871,7 +871,7 @@ static int smi_dvb_init(struct smi_port *port)
 	if (ret < 0)
 		goto err_del_dvb_dmx;
 
-	ret = dvb_net_init(adap, &port->dvbnet, port->dmxdev.demux);
+	ret = mediatree_dvb_net_init(adap, &port->dvbnet, port->dmxdev.demux);
 	if (ret < 0)
 		goto err_del_dvb_dmxdev;
 	return 0;
@@ -879,11 +879,11 @@ err_del_dvb_dmxdev:
 	dvbdemux->dmx.close(&dvbdemux->dmx);
 	dvbdemux->dmx.remove_frontend(&dvbdemux->dmx, &port->hw_frontend);
 	dvbdemux->dmx.remove_frontend(&dvbdemux->dmx, &port->mem_frontend);
-	dvb_dmxdev_release(&port->dmxdev);
+	mediatree_dvb_dmxdev_release(&port->dmxdev);
 err_del_dvb_dmx:
-	dvb_dmx_release(&port->demux);
-err_del_dvb_register_adapter:
-	dvb_unregister_adapter(&port->dvb_adapter);
+	mediatree_dvb_dmx_release(&port->demux);
+err_del_mediatree_dvb_register_adapter:
+	mediatree_dvb_unregister_adapter(&port->dvb_adapter);
 	return ret;
 }
 
@@ -891,15 +891,15 @@ static void smi_dvb_exit(struct smi_port *port)
 {
 	struct dvb_demux *dvbdemux = &port->demux;
 
-	dvb_net_release(&port->dvbnet);
+	mediatree_dvb_net_release(&port->dvbnet);
 
 	dvbdemux->dmx.close(&dvbdemux->dmx);
 	dvbdemux->dmx.remove_frontend(&dvbdemux->dmx, &port->hw_frontend);
 	dvbdemux->dmx.remove_frontend(&dvbdemux->dmx, &port->mem_frontend);
-	dvb_dmxdev_release(&port->dmxdev);
-	dvb_dmx_release(&port->demux);
+	mediatree_dvb_dmxdev_release(&port->dmxdev);
+	mediatree_dvb_dmx_release(&port->demux);
 
-	dvb_unregister_adapter(&port->dvb_adapter);
+	mediatree_dvb_unregister_adapter(&port->dvb_adapter);
 }
 
 static int smi_port_attach(struct smi_dev *dev,
diff --git a/drivers/media/pci/ttpci/budget-av.c b/drivers/media/pci/ttpci/budget-av.c
index 64e6188..cd6c33b 100644
--- a/drivers/media/pci/ttpci/budget-av.c
+++ b/drivers/media/pci/ttpci/budget-av.c
@@ -222,7 +222,7 @@ static int ciintf_slot_reset(struct dvb_ca_en50221 *ca, int slot)
 
 	/* reinitialise the frontend if necessary */
 	if (budget_av->reinitialise_demod)
-		dvb_frontend_reinitialise(budget_av->budget.dvb_frontend);
+		mediatree_dvb_frontend_reinitialise(budget_av->budget.dvb_frontend);
 
 	return 0;
 }
@@ -349,7 +349,7 @@ static int ciintf_init(struct budget_av *budget_av)
 	budget_av->budget.ci_present = 1;
 	budget_av->slot_status = SLOTSTATUS_NONE;
 
-	if ((result = dvb_ca_en50221_init(&budget_av->budget.dvb_adapter,
+	if ((result = mediatree_dvb_ca_en50221_init(&budget_av->budget.dvb_adapter,
 					  &budget_av->ca, 0, 1)) != 0) {
 		pr_err("ci initialisation failed\n");
 		goto error;
@@ -373,7 +373,7 @@ static void ciintf_deinit(struct budget_av *budget_av)
 	saa7146_setgpio(saa, 3, SAA7146_GPIO_INPUT);
 
 	/* release the CA device */
-	dvb_ca_en50221_release(&budget_av->ca);
+	mediatree_dvb_ca_en50221_release(&budget_av->ca);
 
 	/* disable DEBI pins */
 	saa7146_write(saa, MC1, MASK_27);
@@ -1342,10 +1342,10 @@ static void frontend_init(struct budget_av *budget_av)
 
 	budget_av->budget.dvb_frontend = fe;
 
-	if (dvb_register_frontend(&budget_av->budget.dvb_adapter,
+	if (mediatree_dvb_register_frontend(&budget_av->budget.dvb_adapter,
 				  budget_av->budget.dvb_frontend)) {
 		pr_err("Frontend registration failed!\n");
-		dvb_frontend_detach(budget_av->budget.dvb_frontend);
+		mediatree_dvb_frontend_detach(budget_av->budget.dvb_frontend);
 		budget_av->budget.dvb_frontend = NULL;
 	}
 }
@@ -1382,8 +1382,8 @@ static int budget_av_detach(struct saa7146_dev *dev)
 		ciintf_deinit(budget_av);
 
 	if (budget_av->budget.dvb_frontend != NULL) {
-		dvb_unregister_frontend(budget_av->budget.dvb_frontend);
-		dvb_frontend_detach(budget_av->budget.dvb_frontend);
+		mediatree_dvb_unregister_frontend(budget_av->budget.dvb_frontend);
+		mediatree_dvb_frontend_detach(budget_av->budget.dvb_frontend);
 	}
 	err = ttpci_budget_deinit(&budget_av->budget);
 
diff --git a/drivers/media/pci/ttpci/budget-ci.c b/drivers/media/pci/ttpci/budget-ci.c
index d59d186..1bf0128 100644
--- a/drivers/media/pci/ttpci/budget-ci.c
+++ b/drivers/media/pci/ttpci/budget-ci.c
@@ -369,17 +369,17 @@ static void ciintf_interrupt(struct tasklet_struct *t)
 		if (budget_ci->slot_status & SLOTSTATUS_NONE) {
 			// CAM insertion IRQ
 			budget_ci->slot_status = SLOTSTATUS_PRESENT;
-			dvb_ca_en50221_camchange_irq(&budget_ci->ca, 0,
+			mediatree_dvb_ca_en50221_camchange_irq(&budget_ci->ca, 0,
 						     DVB_CA_EN50221_CAMCHANGE_INSERTED);
 
 		} else if (budget_ci->slot_status & SLOTSTATUS_RESET) {
 			// CAM ready (reset completed)
 			budget_ci->slot_status = SLOTSTATUS_READY;
-			dvb_ca_en50221_camready_irq(&budget_ci->ca, 0);
+			mediatree_dvb_ca_en50221_camready_irq(&budget_ci->ca, 0);
 
 		} else if (budget_ci->slot_status & SLOTSTATUS_READY) {
 			// FR/DA IRQ
-			dvb_ca_en50221_frda_irq(&budget_ci->ca, 0);
+			mediatree_dvb_ca_en50221_frda_irq(&budget_ci->ca, 0);
 		}
 	} else {
 
@@ -392,7 +392,7 @@ static void ciintf_interrupt(struct tasklet_struct *t)
 		if (budget_ci->slot_status & SLOTSTATUS_OCCUPIED) {
 			// CAM removal IRQ
 			budget_ci->slot_status = SLOTSTATUS_NONE;
-			dvb_ca_en50221_camchange_irq(&budget_ci->ca, 0,
+			mediatree_dvb_ca_en50221_camchange_irq(&budget_ci->ca, 0,
 						     DVB_CA_EN50221_CAMCHANGE_REMOVED);
 		}
 	}
@@ -483,7 +483,7 @@ static int ciintf_init(struct budget_ci *budget_ci)
 	budget_ci->ca.slot_ts_enable = ciintf_slot_ts_enable;
 	budget_ci->ca.poll_slot_status = ciintf_poll_slot_status;
 	budget_ci->ca.data = budget_ci;
-	if ((result = dvb_ca_en50221_init(&budget_ci->budget.dvb_adapter,
+	if ((result = mediatree_dvb_ca_en50221_init(&budget_ci->budget.dvb_adapter,
 					  &budget_ci->ca,
 					  ca_flags, 1)) != 0) {
 		printk("budget_ci: CI interface detected, but initialisation failed.\n");
@@ -514,7 +514,7 @@ static int ciintf_init(struct budget_ci *budget_ci)
 		flags = DVB_CA_EN50221_CAMCHANGE_REMOVED;
 		if (budget_ci->slot_status != SLOTSTATUS_NONE)
 			flags = DVB_CA_EN50221_CAMCHANGE_INSERTED;
-		dvb_ca_en50221_camchange_irq(&budget_ci->ca, 0, flags);
+		mediatree_dvb_ca_en50221_camchange_irq(&budget_ci->ca, 0, flags);
 	}
 
 	return 0;
@@ -545,7 +545,7 @@ static void ciintf_deinit(struct budget_ci *budget_ci)
 	saa7146_setgpio(saa, 1, SAA7146_GPIO_INPUT);
 
 	// release the CA device
-	dvb_ca_en50221_release(&budget_ci->ca);
+	mediatree_dvb_ca_en50221_release(&budget_ci->ca);
 
 	// disable DEBI pins
 	saa7146_write(saa, MC1, MASK_27);
@@ -1360,7 +1360,7 @@ static void frontend_init(struct budget_ci *budget_ci)
 			budget_ci->budget.dvb_frontend->ops.dishnetwork_send_legacy_command = NULL;
 			if (dvb_attach(lnbp21_attach, budget_ci->budget.dvb_frontend, &budget_ci->budget.i2c_adap, LNBP21_LLC, 0) == NULL) {
 				printk("%s: No LNBP21 found!\n", __func__);
-				dvb_frontend_detach(budget_ci->budget.dvb_frontend);
+				mediatree_dvb_frontend_detach(budget_ci->budget.dvb_frontend);
 				budget_ci->budget.dvb_frontend = NULL;
 			}
 		}
@@ -1371,7 +1371,7 @@ static void frontend_init(struct budget_ci *budget_ci)
 		if (budget_ci->budget.dvb_frontend) {
 			if (dvb_attach(tda827x_attach, budget_ci->budget.dvb_frontend, 0x61, &budget_ci->budget.i2c_adap, &tda827x_config) == NULL) {
 				printk(KERN_ERR "%s: No tda827x found!\n", __func__);
-				dvb_frontend_detach(budget_ci->budget.dvb_frontend);
+				mediatree_dvb_frontend_detach(budget_ci->budget.dvb_frontend);
 				budget_ci->budget.dvb_frontend = NULL;
 			}
 		}
@@ -1383,12 +1383,12 @@ static void frontend_init(struct budget_ci *budget_ci)
 			if (dvb_attach(stb6000_attach, budget_ci->budget.dvb_frontend, 0x63, &budget_ci->budget.i2c_adap)) {
 				if (!dvb_attach(lnbp21_attach, budget_ci->budget.dvb_frontend, &budget_ci->budget.i2c_adap, 0, 0)) {
 					printk(KERN_ERR "%s: No LNBP21 found!\n", __func__);
-					dvb_frontend_detach(budget_ci->budget.dvb_frontend);
+					mediatree_dvb_frontend_detach(budget_ci->budget.dvb_frontend);
 					budget_ci->budget.dvb_frontend = NULL;
 				}
 			} else {
 				printk(KERN_ERR "%s: No STB6000 found!\n", __func__);
-				dvb_frontend_detach(budget_ci->budget.dvb_frontend);
+				mediatree_dvb_frontend_detach(budget_ci->budget.dvb_frontend);
 				budget_ci->budget.dvb_frontend = NULL;
 			}
 		}
@@ -1423,11 +1423,11 @@ static void frontend_init(struct budget_ci *budget_ci)
 			if (dvb_attach(stb6100_attach, budget_ci->budget.dvb_frontend, &tt3200_stb6100_config, &budget_ci->budget.i2c_adap)) {
 				if (!dvb_attach(lnbp21_attach, budget_ci->budget.dvb_frontend, &budget_ci->budget.i2c_adap, 0, 0)) {
 					printk("%s: No LNBP21 found!\n", __func__);
-					dvb_frontend_detach(budget_ci->budget.dvb_frontend);
+					mediatree_dvb_frontend_detach(budget_ci->budget.dvb_frontend);
 					budget_ci->budget.dvb_frontend = NULL;
 				}
 			} else {
-					dvb_frontend_detach(budget_ci->budget.dvb_frontend);
+					mediatree_dvb_frontend_detach(budget_ci->budget.dvb_frontend);
 					budget_ci->budget.dvb_frontend = NULL;
 			}
 		}
@@ -1442,10 +1442,10 @@ static void frontend_init(struct budget_ci *budget_ci)
 		       budget_ci->budget.dev->pci->subsystem_vendor,
 		       budget_ci->budget.dev->pci->subsystem_device);
 	} else {
-		if (dvb_register_frontend
+		if (mediatree_dvb_register_frontend
 		    (&budget_ci->budget.dvb_adapter, budget_ci->budget.dvb_frontend)) {
 			printk("budget-ci: Frontend registration failed!\n");
-			dvb_frontend_detach(budget_ci->budget.dvb_frontend);
+			mediatree_dvb_frontend_detach(budget_ci->budget.dvb_frontend);
 			budget_ci->budget.dvb_frontend = NULL;
 		}
 	}
@@ -1502,8 +1502,8 @@ static int budget_ci_detach(struct saa7146_dev *dev)
 		ciintf_deinit(budget_ci);
 	msp430_ir_deinit(budget_ci);
 	if (budget_ci->budget.dvb_frontend) {
-		dvb_unregister_frontend(budget_ci->budget.dvb_frontend);
-		dvb_frontend_detach(budget_ci->budget.dvb_frontend);
+		mediatree_dvb_unregister_frontend(budget_ci->budget.dvb_frontend);
+		mediatree_dvb_frontend_detach(budget_ci->budget.dvb_frontend);
 	}
 	err = ttpci_budget_deinit(&budget_ci->budget);
 
diff --git a/drivers/media/pci/ttpci/budget-core.c b/drivers/media/pci/ttpci/budget-core.c
index 5d5796f..3cac00a 100644
--- a/drivers/media/pci/ttpci/budget-core.c
+++ b/drivers/media/pci/ttpci/budget-core.c
@@ -196,12 +196,12 @@ static void vpeirq(struct tasklet_struct *t)
 
 	if (newdma > olddma) {	/* no wraparound, dump olddma..newdma */
 		count = newdma - olddma;
-		dvb_dmx_swfilter_packets(&budget->demux, mem + olddma, count / 188);
+		mediatree_dvb_dmx_swfilter_packets(&budget->demux, mem + olddma, count / 188);
 	} else {		/* wraparound, dump olddma..buflen and 0..newdma */
 		count = budget->buffer_size - olddma;
-		dvb_dmx_swfilter_packets(&budget->demux, mem + olddma, count / 188);
+		mediatree_dvb_dmx_swfilter_packets(&budget->demux, mem + olddma, count / 188);
 		count += newdma;
-		dvb_dmx_swfilter_packets(&budget->demux, mem, newdma / 188);
+		mediatree_dvb_dmx_swfilter_packets(&budget->demux, mem, newdma / 188);
 	}
 
 	if (count > budget->buffer_warning_threshold)
@@ -357,13 +357,13 @@ static int budget_register(struct budget *budget)
 	dvbdemux->dmx.capabilities = (DMX_TS_FILTERING | DMX_SECTION_FILTERING |
 				      DMX_MEMORY_BASED_FILTERING);
 
-	dvb_dmx_init(&budget->demux);
+	mediatree_dvb_dmx_init(&budget->demux);
 
 	budget->dmxdev.filternum = 256;
 	budget->dmxdev.demux = &dvbdemux->dmx;
 	budget->dmxdev.capabilities = 0;
 
-	dvb_dmxdev_init(&budget->dmxdev, &budget->dvb_adapter);
+	mediatree_dvb_dmxdev_init(&budget->dmxdev, &budget->dvb_adapter);
 
 	budget->hw_frontend.source = DMX_FRONTEND_0;
 
@@ -381,13 +381,13 @@ static int budget_register(struct budget *budget)
 	if (ret < 0)
 		goto err_release_dmx;
 
-	dvb_net_init(&budget->dvb_adapter, &budget->dvb_net, &dvbdemux->dmx);
+	mediatree_dvb_net_init(&budget->dvb_adapter, &budget->dvb_net, &dvbdemux->dmx);
 
 	return 0;
 
 err_release_dmx:
-	dvb_dmxdev_release(&budget->dmxdev);
-	dvb_dmx_release(&budget->demux);
+	mediatree_dvb_dmxdev_release(&budget->dmxdev);
+	mediatree_dvb_dmx_release(&budget->demux);
 	return ret;
 }
 
@@ -397,14 +397,14 @@ static void budget_unregister(struct budget *budget)
 
 	dprintk(2, "budget: %p\n", budget);
 
-	dvb_net_release(&budget->dvb_net);
+	mediatree_dvb_net_release(&budget->dvb_net);
 
 	dvbdemux->dmx.close(&dvbdemux->dmx);
 	dvbdemux->dmx.remove_frontend(&dvbdemux->dmx, &budget->hw_frontend);
 	dvbdemux->dmx.remove_frontend(&dvbdemux->dmx, &budget->mem_frontend);
 
-	dvb_dmxdev_release(&budget->dmxdev);
-	dvb_dmx_release(&budget->demux);
+	mediatree_dvb_dmxdev_release(&budget->dmxdev);
+	mediatree_dvb_dmx_release(&budget->demux);
 }
 
 int ttpci_budget_init(struct budget *budget, struct saa7146_dev *dev,
@@ -472,7 +472,7 @@ int ttpci_budget_init(struct budget *budget, struct saa7146_dev *dev,
 		budget->buffer_width, budget->buffer_height);
 	printk("%s: dma buffer size %u\n", budget->dev->name, budget->buffer_size);
 
-	ret = dvb_register_adapter(&budget->dvb_adapter, budget->card->name,
+	ret = mediatree_dvb_register_adapter(&budget->dvb_adapter, budget->card->name,
 				   owner, &budget->dev->pci->dev, adapter_nums);
 	if (ret < 0)
 		return ret;
@@ -536,7 +536,7 @@ err_del_i2c:
 	i2c_del_adapter(&budget->i2c_adap);
 
 err_dvb_unregister:
-	dvb_unregister_adapter(&budget->dvb_adapter);
+	mediatree_dvb_unregister_adapter(&budget->dvb_adapter);
 
 	return ret;
 }
@@ -563,7 +563,7 @@ int ttpci_budget_deinit(struct budget *budget)
 
 	i2c_del_adapter(&budget->i2c_adap);
 
-	dvb_unregister_adapter(&budget->dvb_adapter);
+	mediatree_dvb_unregister_adapter(&budget->dvb_adapter);
 
 	return 0;
 }
diff --git a/drivers/media/pci/ttpci/budget.c b/drivers/media/pci/ttpci/budget.c
index a88711a..ec156de 100644
--- a/drivers/media/pci/ttpci/budget.c
+++ b/drivers/media/pci/ttpci/budget.c
@@ -757,14 +757,14 @@ static void frontend_init(struct budget *budget)
 		       budget->dev->pci->subsystem_vendor,
 		       budget->dev->pci->subsystem_device);
 	} else {
-		if (dvb_register_frontend(&budget->dvb_adapter, budget->dvb_frontend))
+		if (mediatree_dvb_register_frontend(&budget->dvb_adapter, budget->dvb_frontend))
 			goto error_out;
 	}
 	return;
 
 error_out:
 	printk("budget: Frontend registration failed!\n");
-	dvb_frontend_detach(budget->dvb_frontend);
+	mediatree_dvb_frontend_detach(budget->dvb_frontend);
 	budget->dvb_frontend = NULL;
 	return;
 }
@@ -804,8 +804,8 @@ static int budget_detach (struct saa7146_dev* dev)
 	int err;
 
 	if (budget->dvb_frontend) {
-		dvb_unregister_frontend(budget->dvb_frontend);
-		dvb_frontend_detach(budget->dvb_frontend);
+		mediatree_dvb_unregister_frontend(budget->dvb_frontend);
+		mediatree_dvb_frontend_detach(budget->dvb_frontend);
 	}
 
 	err = ttpci_budget_deinit (budget);
diff --git a/drivers/media/platform/st/sti/c8sectpfe/c8sectpfe-common.c b/drivers/media/platform/st/sti/c8sectpfe/c8sectpfe-common.c
index 5df67da..ff0bf73 100644
--- a/drivers/media/platform/st/sti/c8sectpfe/c8sectpfe-common.c
+++ b/drivers/media/platform/st/sti/c8sectpfe/c8sectpfe-common.c
@@ -49,9 +49,9 @@ static int register_dvb(struct stdemux *demux, struct dvb_adapter *adap,
 	demux->dvb_demux.stop_feed = stop_feed;
 	demux->dvb_demux.write_to_decoder = NULL;
 
-	result = dvb_dmx_init(&demux->dvb_demux);
+	result = mediatree_dvb_dmx_init(&demux->dvb_demux);
 	if (result < 0) {
-		dev_err(fei->dev, "dvb_dmx_init failed (errno = %d)\n",
+		dev_err(fei->dev, "mediatree_dvb_dmx_init failed (errno = %d)\n",
 			result);
 		goto err_dmx;
 	}
@@ -60,9 +60,9 @@ static int register_dvb(struct stdemux *demux, struct dvb_adapter *adap,
 	demux->dmxdev.demux = &demux->dvb_demux.dmx;
 	demux->dmxdev.capabilities = 0;
 
-	result = dvb_dmxdev_init(&demux->dmxdev, adap);
+	result = mediatree_dvb_dmxdev_init(&demux->dmxdev, adap);
 	if (result < 0) {
-		dev_err(fei->dev, "dvb_dmxdev_init failed (errno = %d)\n",
+		dev_err(fei->dev, "mediatree_dvb_dmxdev_init failed (errno = %d)\n",
 			result);
 
 		goto err_dmxdev;
@@ -101,9 +101,9 @@ err_fe_mem:
 	demux->dvb_demux.dmx.remove_frontend(&demux->dvb_demux.dmx,
 						     &demux->hw_frontend);
 err_fe_hw:
-	dvb_dmxdev_release(&demux->dmxdev);
+	mediatree_dvb_dmxdev_release(&demux->dmxdev);
 err_dmxdev:
-	dvb_dmx_release(&demux->dvb_demux);
+	mediatree_dvb_dmx_release(&demux->dvb_demux);
 err_dmx:
 	return result;
 
@@ -118,9 +118,9 @@ static void unregister_dvb(struct stdemux *demux)
 	demux->dvb_demux.dmx.remove_frontend(&demux->dvb_demux.dmx,
 						     &demux->hw_frontend);
 
-	dvb_dmxdev_release(&demux->dmxdev);
+	mediatree_dvb_dmxdev_release(&demux->dmxdev);
 
-	dvb_dmx_release(&demux->dvb_demux);
+	mediatree_dvb_dmx_release(&demux->dvb_demux);
 }
 
 static struct c8sectpfe *c8sectpfe_create(struct c8sectpfei *fei,
@@ -141,10 +141,10 @@ static struct c8sectpfe *c8sectpfe_create(struct c8sectpfei *fei,
 
 	c8sectpfe->device = fei->dev;
 
-	result = dvb_register_adapter(&c8sectpfe->adapter, "STi c8sectpfe",
+	result = mediatree_dvb_register_adapter(&c8sectpfe->adapter, "STi c8sectpfe",
 					THIS_MODULE, fei->dev, ids);
 	if (result < 0) {
-		dev_err(fei->dev, "dvb_register_adapter failed (errno = %d)\n",
+		dev_err(fei->dev, "mediatree_dvb_register_adapter failed (errno = %d)\n",
 			result);
 		goto err2;
 	}
@@ -174,7 +174,7 @@ static struct c8sectpfe *c8sectpfe_create(struct c8sectpfei *fei,
 
 	return c8sectpfe;
 err3:
-	dvb_unregister_adapter(&c8sectpfe->adapter);
+	mediatree_dvb_unregister_adapter(&c8sectpfe->adapter);
 err2:
 	kfree(c8sectpfe);
 err1:
@@ -191,7 +191,7 @@ static void c8sectpfe_delete(struct c8sectpfe *c8sectpfe)
 	for (i = 0; i < c8sectpfe->num_feeds; i++)
 		unregister_dvb(&c8sectpfe->demux[i]);
 
-	dvb_unregister_adapter(&c8sectpfe->adapter);
+	mediatree_dvb_unregister_adapter(&c8sectpfe->adapter);
 
 	kfree(c8sectpfe);
 };
@@ -208,8 +208,8 @@ void c8sectpfe_tuner_unregister_frontend(struct c8sectpfe *c8sectpfe,
 
 		if (tsin) {
 			if (tsin->frontend) {
-				dvb_unregister_frontend(tsin->frontend);
-				dvb_frontend_detach(tsin->frontend);
+				mediatree_dvb_unregister_frontend(tsin->frontend);
+				mediatree_dvb_frontend_detach(tsin->frontend);
 			}
 
 			i2c_put_adapter(tsin->i2c_adapter);
@@ -244,9 +244,9 @@ int c8sectpfe_tuner_register_frontend(struct c8sectpfe **c8sectpfe,
 		if (res)
 			goto err;
 
-		res = dvb_register_frontend(&c8sectpfe[0]->adapter, frontend);
+		res = mediatree_dvb_register_frontend(&c8sectpfe[0]->adapter, frontend);
 		if (res < 0) {
-			dev_err(fei->dev, "dvb_register_frontend failed (%d)\n",
+			dev_err(fei->dev, "mediatree_dvb_register_frontend failed (%d)\n",
 				res);
 			goto err;
 		}
diff --git a/drivers/media/platform/st/sti/c8sectpfe/c8sectpfe-core.c b/drivers/media/platform/st/sti/c8sectpfe/c8sectpfe-core.c
index 7bb1384..9e978c7 100644
--- a/drivers/media/platform/st/sti/c8sectpfe/c8sectpfe-core.c
+++ b/drivers/media/platform/st/sti/c8sectpfe/c8sectpfe-core.c
@@ -114,7 +114,7 @@ static void channel_swdemux_tsklet(struct tasklet_struct *t)
 		channel->tsin_id, channel, num_packets, buf, pos, rp, wp);
 
 	for (n = 0; n < num_packets; n++) {
-		dvb_dmx_swfilter_packets(
+		mediatree_dvb_dmx_swfilter_packets(
 			&fei->c8sectpfe[0]->
 				demux[channel->demux_mapping].dvb_demux,
 			&buf[pos], 1);
diff --git a/drivers/media/platform/st/sti/c8sectpfe/c8sectpfe-dvb.c b/drivers/media/platform/st/sti/c8sectpfe/c8sectpfe-dvb.c
index feb48cb..90265d3 100644
--- a/drivers/media/platform/st/sti/c8sectpfe/c8sectpfe-dvb.c
+++ b/drivers/media/platform/st/sti/c8sectpfe/c8sectpfe-dvb.c
@@ -172,13 +172,13 @@ int c8sectpfe_frontend_attach(struct dvb_frontend **fe,
 		client = i2c_new_client_device(tsin->i2c_adapter,
 					       &tda18212_info);
 		if (!i2c_client_has_driver(client)) {
-			dvb_frontend_detach(*fe);
+			mediatree_dvb_frontend_detach(*fe);
 			return -ENODEV;
 		}
 
 		if (!try_module_get(client->dev.driver->owner)) {
 			i2c_unregister_device(client);
-			dvb_frontend_detach(*fe);
+			mediatree_dvb_frontend_detach(*fe);
 			return -ENODEV;
 		}
 
diff --git a/drivers/media/spi/cxd2880-spi.c b/drivers/media/spi/cxd2880-spi.c
index 071d8e2..c73139c 100644
--- a/drivers/media/spi/cxd2880-spi.c
+++ b/drivers/media/spi/cxd2880-spi.c
@@ -298,7 +298,7 @@ static int cxd2880_ts_read(void *arg)
 				cxd2880_spi_read_ts(dvb_spi->spi,
 						    dvb_spi->ts_buf,
 						    MAX_TRANS_PKT);
-				dvb_dmx_swfilter(&dvb_spi->demux,
+				mediatree_dvb_dmx_swfilter(&dvb_spi->demux,
 						 dvb_spi->ts_buf,
 						 MAX_TRANS_PKT * 188);
 			}
@@ -308,7 +308,7 @@ static int cxd2880_ts_read(void *arg)
 			cxd2880_spi_read_ts(dvb_spi->spi,
 					    dvb_spi->ts_buf,
 					    info.pkt_num);
-			dvb_dmx_swfilter(&dvb_spi->demux,
+			mediatree_dvb_dmx_swfilter(&dvb_spi->demux,
 					 dvb_spi->ts_buf,
 					 info.pkt_num * 188);
 			start = ktime_get();
@@ -540,13 +540,13 @@ cxd2880_spi_probe(struct spi_device *spi)
 	config.spi = spi;
 	config.spi_mutex = &dvb_spi->spi_mutex;
 
-	ret = dvb_register_adapter(&dvb_spi->adapter,
+	ret = mediatree_dvb_register_adapter(&dvb_spi->adapter,
 				   "CXD2880",
 				   THIS_MODULE,
 				   &spi->dev,
 				   adapter_nr);
 	if (ret < 0) {
-		pr_err("dvb_register_adapter() failed\n");
+		pr_err("mediatree_dvb_register_adapter() failed\n");
 		goto fail_adapter;
 	}
 
@@ -556,10 +556,10 @@ cxd2880_spi_probe(struct spi_device *spi)
 		goto fail_attach;
 	}
 
-	ret = dvb_register_frontend(&dvb_spi->adapter,
+	ret = mediatree_dvb_register_frontend(&dvb_spi->adapter,
 				    &dvb_spi->dvb_fe);
 	if (ret < 0) {
-		pr_err("dvb_register_frontend() failed\n");
+		pr_err("mediatree_dvb_register_frontend() failed\n");
 		goto fail_frontend;
 	}
 
@@ -570,19 +570,19 @@ cxd2880_spi_probe(struct spi_device *spi)
 	dvb_spi->demux.start_feed = cxd2880_start_feed;
 	dvb_spi->demux.stop_feed = cxd2880_stop_feed;
 
-	ret = dvb_dmx_init(&dvb_spi->demux);
+	ret = mediatree_dvb_dmx_init(&dvb_spi->demux);
 	if (ret < 0) {
-		pr_err("dvb_dmx_init() failed\n");
+		pr_err("mediatree_dvb_dmx_init() failed\n");
 		goto fail_dmx;
 	}
 
 	dvb_spi->dmxdev.filternum = CXD2880_MAX_FILTER_SIZE;
 	dvb_spi->dmxdev.demux = &dvb_spi->demux.dmx;
 	dvb_spi->dmxdev.capabilities = 0;
-	ret = dvb_dmxdev_init(&dvb_spi->dmxdev,
+	ret = mediatree_dvb_dmxdev_init(&dvb_spi->dmxdev,
 			      &dvb_spi->adapter);
 	if (ret < 0) {
-		pr_err("dvb_dmxdev_init() failed\n");
+		pr_err("mediatree_dvb_dmxdev_init() failed\n");
 		goto fail_dmxdev;
 	}
 
@@ -609,15 +609,15 @@ fail_fe_conn:
 	dvb_spi->demux.dmx.remove_frontend(&dvb_spi->demux.dmx,
 					   &dvb_spi->dmx_fe);
 fail_dmx_fe:
-	dvb_dmxdev_release(&dvb_spi->dmxdev);
+	mediatree_dvb_dmxdev_release(&dvb_spi->dmxdev);
 fail_dmxdev:
-	dvb_dmx_release(&dvb_spi->demux);
+	mediatree_dvb_dmx_release(&dvb_spi->demux);
 fail_dmx:
-	dvb_unregister_frontend(&dvb_spi->dvb_fe);
+	mediatree_dvb_unregister_frontend(&dvb_spi->dvb_fe);
 fail_frontend:
-	dvb_frontend_detach(&dvb_spi->dvb_fe);
+	mediatree_dvb_frontend_detach(&dvb_spi->dvb_fe);
 fail_attach:
-	dvb_unregister_adapter(&dvb_spi->adapter);
+	mediatree_dvb_unregister_adapter(&dvb_spi->adapter);
 fail_adapter:
 	if (dvb_spi->vcc_supply)
 		regulator_disable(dvb_spi->vcc_supply);
@@ -633,11 +633,11 @@ cxd2880_spi_remove(struct spi_device *spi)
 
 	dvb_spi->demux.dmx.remove_frontend(&dvb_spi->demux.dmx,
 					   &dvb_spi->dmx_fe);
-	dvb_dmxdev_release(&dvb_spi->dmxdev);
-	dvb_dmx_release(&dvb_spi->demux);
-	dvb_unregister_frontend(&dvb_spi->dvb_fe);
-	dvb_frontend_detach(&dvb_spi->dvb_fe);
-	dvb_unregister_adapter(&dvb_spi->adapter);
+	mediatree_dvb_dmxdev_release(&dvb_spi->dmxdev);
+	mediatree_dvb_dmx_release(&dvb_spi->demux);
+	mediatree_dvb_unregister_frontend(&dvb_spi->dvb_fe);
+	mediatree_dvb_frontend_detach(&dvb_spi->dvb_fe);
+	mediatree_dvb_unregister_adapter(&dvb_spi->adapter);
 
 	if (dvb_spi->vcc_supply)
 		regulator_disable(dvb_spi->vcc_supply);
diff --git a/drivers/media/test-drivers/vidtv/vidtv_bridge.c b/drivers/media/test-drivers/vidtv/vidtv_bridge.c
index 8262061..37ad3b7 100644
--- a/drivers/media/test-drivers/vidtv/vidtv_bridge.c
+++ b/drivers/media/test-drivers/vidtv/vidtv_bridge.c
@@ -160,7 +160,7 @@ static void vidtv_bridge_on_new_pkts_avail(void *priv, u8 *buf, u32 npkts)
 
 	/* drop packets if we lose the lock */
 	if (vidtv_bridge_check_demod_lock(dvb, 0))
-		dvb_dmx_swfilter_packets(&dvb->demux, buf, npkts);
+		mediatree_dvb_dmx_swfilter_packets(&dvb->demux, buf, npkts);
 }
 
 static int vidtv_start_streaming(struct vidtv_dvb *dvb)
@@ -305,7 +305,7 @@ static int vidtv_bridge_register_adap(struct vidtv_dvb *dvb)
 {
 	int ret = 0;
 
-	ret = dvb_register_adapter(&dvb->adapter,
+	ret = mediatree_dvb_register_adapter(&dvb->adapter,
 				   KBUILD_MODNAME,
 				   THIS_MODULE,
 				   &dvb->i2c_adapter.dev,
@@ -325,7 +325,7 @@ static int vidtv_bridge_dmx_init(struct vidtv_dvb *dvb)
 	dvb->demux.start_feed = vidtv_start_feed;
 	dvb->demux.stop_feed  = vidtv_stop_feed;
 
-	return dvb_dmx_init(&dvb->demux);
+	return mediatree_dvb_dmx_init(&dvb->demux);
 }
 
 static int vidtv_bridge_dmxdev_init(struct vidtv_dvb *dvb)
@@ -334,7 +334,7 @@ static int vidtv_bridge_dmxdev_init(struct vidtv_dvb *dvb)
 	dvb->dmx_dev.demux        = &dvb->demux.dmx;
 	dvb->dmx_dev.capabilities = 0;
 
-	return dvb_dmxdev_init(&dvb->dmx_dev, &dvb->adapter);
+	return mediatree_dvb_dmxdev_init(&dvb->dmx_dev, &dvb->adapter);
 }
 
 static int vidtv_bridge_probe_demod(struct vidtv_dvb *dvb, u32 n)
@@ -427,7 +427,7 @@ static int vidtv_bridge_dvb_init(struct vidtv_dvb *dvb)
 		if (ret < 0)
 			goto fail_tuner_probe;
 
-		ret = dvb_register_frontend(&dvb->adapter, dvb->fe[i]);
+		ret = mediatree_dvb_register_frontend(&dvb->adapter, dvb->fe[i]);
 		if (ret < 0)
 			goto fail_fe;
 	}
@@ -460,12 +460,12 @@ fail_dmx_conn:
 		dvb->demux.dmx.remove_frontend(&dvb->demux.dmx,
 					       &dvb->dmx_fe[j]);
 fail_dmx_dev:
-	dvb_dmxdev_release(&dvb->dmx_dev);
+	mediatree_dvb_dmxdev_release(&dvb->dmx_dev);
 fail_dmx:
-	dvb_dmx_release(&dvb->demux);
+	mediatree_dvb_dmx_release(&dvb->demux);
 fail_fe:
 	for (j = i; j >= 0; --j)
-		dvb_unregister_frontend(dvb->fe[j]);
+		mediatree_dvb_unregister_frontend(dvb->fe[j]);
 fail_tuner_probe:
 	for (j = i; j >= 0; --j)
 		if (dvb->i2c_client_tuner[j])
@@ -477,7 +477,7 @@ fail_demod_probe:
 			dvb_module_release(dvb->i2c_client_demod[j]);
 
 fail_adapter:
-	dvb_unregister_adapter(&dvb->adapter);
+	mediatree_dvb_unregister_adapter(&dvb->adapter);
 
 fail_i2c:
 	i2c_del_adapter(&dvb->i2c_adapter);
@@ -549,14 +549,14 @@ static int vidtv_bridge_remove(struct platform_device *pdev)
 	mutex_destroy(&dvb->feed_lock);
 
 	for (i = 0; i < NUM_FE; ++i) {
-		dvb_unregister_frontend(dvb->fe[i]);
+		mediatree_dvb_unregister_frontend(dvb->fe[i]);
 		dvb_module_release(dvb->i2c_client_tuner[i]);
 		dvb_module_release(dvb->i2c_client_demod[i]);
 	}
 
-	dvb_dmxdev_release(&dvb->dmx_dev);
-	dvb_dmx_release(&dvb->demux);
-	dvb_unregister_adapter(&dvb->adapter);
+	mediatree_dvb_dmxdev_release(&dvb->dmx_dev);
+	mediatree_dvb_dmx_release(&dvb->demux);
+	mediatree_dvb_unregister_adapter(&dvb->adapter);
 	dev_info(&pdev->dev, "Successfully removed vidtv\n");
 
 	return 0;
diff --git a/drivers/media/test-drivers/vidtv/vidtv_bridge.h b/drivers/media/test-drivers/vidtv/vidtv_bridge.h
index de47ce6..d7b1979 100644
--- a/drivers/media/test-drivers/vidtv/vidtv_bridge.h
+++ b/drivers/media/test-drivers/vidtv/vidtv_bridge.h
@@ -33,8 +33,8 @@
  * struct vidtv_dvb - Vidtv bridge state
  * @pdev: The platform device. Obtained when the bridge is probed.
  * @fe: The frontends. Obtained when probing the demodulator modules.
- * @adapter: Represents a DTV adapter. See 'dvb_register_adapter'.
- * @demux: The demux used by the dvb_dmx_swfilter_packets() call.
+ * @adapter: Represents a DTV adapter. See 'mediatree_dvb_register_adapter'.
+ * @demux: The demux used by the mediatree_dvb_dmx_swfilter_packets() call.
  * @dmx_dev: Represents a demux device.
  * @dmx_fe: The frontends associated with the demux.
  * @i2c_adapter: The i2c_adapter associated with the bridge driver.
diff --git a/drivers/media/usb/as102/as102_drv.c b/drivers/media/usb/as102/as102_drv.c
index 6b1d352..2c8393a 100644
--- a/drivers/media/usb/as102/as102_drv.c
+++ b/drivers/media/usb/as102/as102_drv.c
@@ -287,11 +287,11 @@ int as102_dvb_register(struct as102_dev_t *as102_dev)
 	struct device *dev = &as102_dev->bus_adap.usb_dev->dev;
 	int ret;
 
-	ret = dvb_register_adapter(&as102_dev->dvb_adap,
+	ret = mediatree_dvb_register_adapter(&as102_dev->dvb_adap,
 			   as102_dev->name, THIS_MODULE,
 			   dev, adapter_nr);
 	if (ret < 0) {
-		dev_err(dev, "%s: dvb_register_adapter() failed: %d\n",
+		dev_err(dev, "%s: mediatree_dvb_register_adapter() failed: %d\n",
 			__func__, ret);
 		return ret;
 	}
@@ -309,15 +309,15 @@ int as102_dvb_register(struct as102_dev_t *as102_dev)
 	as102_dev->dvb_dmxdev.demux = &as102_dev->dvb_dmx.dmx;
 	as102_dev->dvb_dmxdev.capabilities = 0;
 
-	ret = dvb_dmx_init(&as102_dev->dvb_dmx);
+	ret = mediatree_dvb_dmx_init(&as102_dev->dvb_dmx);
 	if (ret < 0) {
-		dev_err(dev, "%s: dvb_dmx_init() failed: %d\n", __func__, ret);
+		dev_err(dev, "%s: mediatree_dvb_dmx_init() failed: %d\n", __func__, ret);
 		goto edmxinit;
 	}
 
-	ret = dvb_dmxdev_init(&as102_dev->dvb_dmxdev, &as102_dev->dvb_adap);
+	ret = mediatree_dvb_dmxdev_init(&as102_dev->dvb_dmxdev, &as102_dev->dvb_adap);
 	if (ret < 0) {
-		dev_err(dev, "%s: dvb_dmxdev_init() failed: %d\n",
+		dev_err(dev, "%s: mediatree_dvb_dmxdev_init() failed: %d\n",
 			__func__, ret);
 		goto edmxdinit;
 	}
@@ -334,9 +334,9 @@ int as102_dvb_register(struct as102_dev_t *as102_dev)
 		goto efereg;
 	}
 
-	ret =  dvb_register_frontend(&as102_dev->dvb_adap, as102_dev->dvb_fe);
+	ret =  mediatree_dvb_register_frontend(&as102_dev->dvb_adap, as102_dev->dvb_fe);
 	if (ret < 0) {
-		dev_err(dev, "%s: as102_dvb_register_frontend() failed: %d",
+		dev_err(dev, "%s: as102_mediatree_dvb_register_frontend() failed: %d",
 		    __func__, ret);
 		goto efereg;
 	}
@@ -359,28 +359,28 @@ int as102_dvb_register(struct as102_dev_t *as102_dev)
 	return 0;
 
 efereg:
-	dvb_dmxdev_release(&as102_dev->dvb_dmxdev);
+	mediatree_dvb_dmxdev_release(&as102_dev->dvb_dmxdev);
 edmxdinit:
-	dvb_dmx_release(&as102_dev->dvb_dmx);
+	mediatree_dvb_dmx_release(&as102_dev->dvb_dmx);
 edmxinit:
-	dvb_unregister_adapter(&as102_dev->dvb_adap);
+	mediatree_dvb_unregister_adapter(&as102_dev->dvb_adap);
 	return ret;
 }
 
 void as102_dvb_unregister(struct as102_dev_t *as102_dev)
 {
 	/* unregister as102 frontend */
-	dvb_unregister_frontend(as102_dev->dvb_fe);
+	mediatree_dvb_unregister_frontend(as102_dev->dvb_fe);
 
 	/* detach frontend */
-	dvb_frontend_detach(as102_dev->dvb_fe);
+	mediatree_dvb_frontend_detach(as102_dev->dvb_fe);
 
 	/* unregister demux device */
-	dvb_dmxdev_release(&as102_dev->dvb_dmxdev);
-	dvb_dmx_release(&as102_dev->dvb_dmx);
+	mediatree_dvb_dmxdev_release(&as102_dev->dvb_dmxdev);
+	mediatree_dvb_dmx_release(&as102_dev->dvb_dmx);
 
 	/* unregister dvb adapter */
-	dvb_unregister_adapter(&as102_dev->dvb_adap);
+	mediatree_dvb_unregister_adapter(&as102_dev->dvb_adap);
 
 	pr_info("Unregistered device %s", as102_dev->name);
 }
diff --git a/drivers/media/usb/as102/as102_usb_drv.c b/drivers/media/usb/as102/as102_usb_drv.c
index 50419e8..b26848f 100644
--- a/drivers/media/usb/as102/as102_usb_drv.c
+++ b/drivers/media/usb/as102/as102_usb_drv.c
@@ -213,7 +213,7 @@ void as102_urb_stream_irq(struct urb *urb)
 	struct as102_dev_t *as102_dev = urb->context;
 
 	if (urb->actual_length > 0) {
-		dvb_dmx_swfilter(&as102_dev->dvb_dmx,
+		mediatree_dvb_dmx_swfilter(&as102_dev->dvb_dmx,
 				 urb->transfer_buffer,
 				 urb->actual_length);
 	} else {
diff --git a/drivers/media/usb/au0828/au0828-dvb.c b/drivers/media/usb/au0828/au0828-dvb.c
index 2a8691a..a41e32e 100644
--- a/drivers/media/usb/au0828/au0828-dvb.c
+++ b/drivers/media/usb/au0828/au0828-dvb.c
@@ -147,7 +147,7 @@ static void urb_completion(struct urb *purb)
 	}
 
 	/* Feed the transport payload into the kernel demux */
-	dvb_dmx_swfilter_packets(&dev->dvb.demux,
+	mediatree_dvb_dmx_swfilter_packets(&dev->dvb.demux,
 		purb->transfer_buffer, purb->actual_length / 188);
 
 	/* Clean the buffer before we requeue */
@@ -417,11 +417,11 @@ static int dvb_register(struct au0828_dev *dev)
 	INIT_WORK(&dev->restart_streaming, au0828_restart_dvb_streaming);
 
 	/* register adapter */
-	result = dvb_register_adapter(&dvb->adapter,
+	result = mediatree_dvb_register_adapter(&dvb->adapter,
 				      KBUILD_MODNAME, THIS_MODULE,
 				      &dev->usbdev->dev, adapter_nr);
 	if (result < 0) {
-		pr_err("dvb_register_adapter failed (errno = %d)\n",
+		pr_err("mediatree_dvb_register_adapter failed (errno = %d)\n",
 		       result);
 		goto fail_adapter;
 	}
@@ -433,9 +433,9 @@ static int dvb_register(struct au0828_dev *dev)
 	dvb->adapter.priv = dev;
 
 	/* register frontend */
-	result = dvb_register_frontend(&dvb->adapter, dvb->frontend);
+	result = mediatree_dvb_register_frontend(&dvb->adapter, dvb->frontend);
 	if (result < 0) {
-		pr_err("dvb_register_frontend failed (errno = %d)\n",
+		pr_err("mediatree_dvb_register_frontend failed (errno = %d)\n",
 		       result);
 		goto fail_frontend;
 	}
@@ -453,18 +453,18 @@ static int dvb_register(struct au0828_dev *dev)
 	dvb->demux.feednum    = 256;
 	dvb->demux.start_feed = au0828_dvb_start_feed;
 	dvb->demux.stop_feed  = au0828_dvb_stop_feed;
-	result = dvb_dmx_init(&dvb->demux);
+	result = mediatree_dvb_dmx_init(&dvb->demux);
 	if (result < 0) {
-		pr_err("dvb_dmx_init failed (errno = %d)\n", result);
+		pr_err("mediatree_dvb_dmx_init failed (errno = %d)\n", result);
 		goto fail_dmx;
 	}
 
 	dvb->dmxdev.filternum    = 256;
 	dvb->dmxdev.demux        = &dvb->demux.dmx;
 	dvb->dmxdev.capabilities = 0;
-	result = dvb_dmxdev_init(&dvb->dmxdev, &dvb->adapter);
+	result = mediatree_dvb_dmxdev_init(&dvb->dmxdev, &dvb->adapter);
 	if (result < 0) {
-		pr_err("dvb_dmxdev_init failed (errno = %d)\n", result);
+		pr_err("mediatree_dvb_dmxdev_init failed (errno = %d)\n", result);
 		goto fail_dmxdev;
 	}
 
@@ -491,7 +491,7 @@ static int dvb_register(struct au0828_dev *dev)
 	}
 
 	/* register network adapter */
-	dvb_net_init(&dvb->adapter, &dvb->net, &dvb->demux.dmx);
+	mediatree_dvb_net_init(&dvb->adapter, &dvb->net, &dvb->demux.dmx);
 
 	dvb->start_count = 0;
 	dvb->stop_count = 0;
@@ -503,20 +503,20 @@ static int dvb_register(struct au0828_dev *dev)
 	return 0;
 
 fail_create_graph:
-	dvb_net_release(&dvb->net);
+	mediatree_dvb_net_release(&dvb->net);
 fail_fe_conn:
 	dvb->demux.dmx.remove_frontend(&dvb->demux.dmx, &dvb->fe_mem);
 fail_fe_mem:
 	dvb->demux.dmx.remove_frontend(&dvb->demux.dmx, &dvb->fe_hw);
 fail_fe_hw:
-	dvb_dmxdev_release(&dvb->dmxdev);
+	mediatree_dvb_dmxdev_release(&dvb->dmxdev);
 fail_dmxdev:
-	dvb_dmx_release(&dvb->demux);
+	mediatree_dvb_dmx_release(&dvb->demux);
 fail_dmx:
-	dvb_unregister_frontend(dvb->frontend);
+	mediatree_dvb_unregister_frontend(dvb->frontend);
 fail_frontend:
-	dvb_frontend_detach(dvb->frontend);
-	dvb_unregister_adapter(&dvb->adapter);
+	mediatree_dvb_frontend_detach(dvb->frontend);
+	mediatree_dvb_unregister_adapter(&dvb->adapter);
 fail_adapter:
 
 	if (preallocate_big_buffers) {
@@ -539,14 +539,14 @@ void au0828_dvb_unregister(struct au0828_dev *dev)
 
 	cancel_work_sync(&dev->restart_streaming);
 
-	dvb_net_release(&dvb->net);
+	mediatree_dvb_net_release(&dvb->net);
 	dvb->demux.dmx.remove_frontend(&dvb->demux.dmx, &dvb->fe_mem);
 	dvb->demux.dmx.remove_frontend(&dvb->demux.dmx, &dvb->fe_hw);
-	dvb_dmxdev_release(&dvb->dmxdev);
-	dvb_dmx_release(&dvb->demux);
-	dvb_unregister_frontend(dvb->frontend);
-	dvb_frontend_detach(dvb->frontend);
-	dvb_unregister_adapter(&dvb->adapter);
+	mediatree_dvb_dmxdev_release(&dvb->dmxdev);
+	mediatree_dvb_dmx_release(&dvb->demux);
+	mediatree_dvb_unregister_frontend(dvb->frontend);
+	mediatree_dvb_frontend_detach(dvb->frontend);
+	mediatree_dvb_unregister_adapter(&dvb->adapter);
 
 	if (preallocate_big_buffers) {
 		int i;
@@ -659,7 +659,7 @@ void au0828_dvb_suspend(struct au0828_dev *dev)
 			dev->need_urb_start = true;
 		}
 		/* suspend frontend - does tuner and fe to sleep */
-		rc = dvb_frontend_suspend(dvb->frontend);
+		rc = mediatree_dvb_frontend_suspend(dvb->frontend);
 		pr_info("au0828_dvb_suspend(): Suspending DVB fe %d\n", rc);
 	}
 }
@@ -671,7 +671,7 @@ void au0828_dvb_resume(struct au0828_dev *dev)
 
 	if (dvb->frontend) {
 		/* resume frontend - does fe and tuner init */
-		rc = dvb_frontend_resume(dvb->frontend);
+		rc = mediatree_dvb_frontend_resume(dvb->frontend);
 		pr_info("au0828_dvb_resume(): Resuming DVB fe %d\n", rc);
 		if (dev->need_urb_start) {
 			/* Start transport */
diff --git a/drivers/media/usb/cx231xx/cx231xx-dvb.c b/drivers/media/usb/cx231xx/cx231xx-dvb.c
index 0037b4b..70611ff 100644
--- a/drivers/media/usb/cx231xx/cx231xx-dvb.c
+++ b/drivers/media/usb/cx231xx/cx231xx-dvb.c
@@ -229,7 +229,7 @@ static inline int dvb_isoc_copy(struct cx231xx *dev, struct urb *urb)
 				continue;
 		}
 
-		dvb_dmx_swfilter(&dev->dvb->demux,
+		mediatree_dvb_dmx_swfilter(&dev->dvb->demux,
 				 urb->transfer_buffer +
 				urb->iso_frame_desc[i].offset,
 				urb->iso_frame_desc[i].actual_length);
@@ -253,7 +253,7 @@ static inline int dvb_bulk_copy(struct cx231xx *dev, struct urb *urb)
 	}
 
 	/* Feed the transport payload into the kernel demux */
-	dvb_dmx_swfilter(&dev->dvb->demux,
+	mediatree_dvb_dmx_swfilter(&dev->dvb->demux,
 		urb->transfer_buffer, urb->actual_length);
 
 	return 0;
@@ -386,7 +386,7 @@ static int attach_xc5000(u8 addr, struct cx231xx *dev)
 	fe = dvb_attach(xc5000_attach, dev->dvb->frontend[0], &cfg);
 	if (!fe) {
 		dev_err(dev->dev, "%s/2: xc5000 attach failed\n", dev->name);
-		dvb_frontend_detach(dev->dvb->frontend[0]);
+		mediatree_dvb_frontend_detach(dev->dvb->frontend[0]);
 		dev->dvb->frontend[0] = NULL;
 		return -EINVAL;
 	}
@@ -461,11 +461,11 @@ static int register_dvb(struct cx231xx_dvb *dvb,
 
 
 	/* register adapter */
-	result = dvb_register_adapter(&dvb->adapter, dev->name, module, device,
+	result = mediatree_dvb_register_adapter(&dvb->adapter, dev->name, module, device,
 				      adapter_nr);
 	if (result < 0) {
 		dev_warn(dev->dev,
-		       "%s: dvb_register_adapter failed (errno = %d)\n",
+		       "%s: mediatree_dvb_register_adapter failed (errno = %d)\n",
 		       dev->name, result);
 		goto fail_adapter;
 	}
@@ -479,19 +479,19 @@ static int register_dvb(struct cx231xx_dvb *dvb,
 	dvb->adapter.priv = dev;
 
 	/* register frontend */
-	result = dvb_register_frontend(&dvb->adapter, dvb->frontend[0]);
+	result = mediatree_dvb_register_frontend(&dvb->adapter, dvb->frontend[0]);
 	if (result < 0) {
 		dev_warn(dev->dev,
-		       "%s: dvb_register_frontend failed (errno = %d)\n",
+		       "%s: mediatree_dvb_register_frontend failed (errno = %d)\n",
 		       dev->name, result);
 		goto fail_frontend0;
 	}
 
 	if (dvb->frontend[1]) {
-		result = dvb_register_frontend(&dvb->adapter, dvb->frontend[1]);
+		result = mediatree_dvb_register_frontend(&dvb->adapter, dvb->frontend[1]);
 		if (result < 0) {
 			dev_warn(dev->dev,
-				 "%s: 2nd dvb_register_frontend failed (errno = %d)\n",
+				 "%s: 2nd mediatree_dvb_register_frontend failed (errno = %d)\n",
 				dev->name, result);
 			goto fail_frontend1;
 		}
@@ -510,10 +510,10 @@ static int register_dvb(struct cx231xx_dvb *dvb,
 	dvb->demux.start_feed = start_feed;
 	dvb->demux.stop_feed = stop_feed;
 
-	result = dvb_dmx_init(&dvb->demux);
+	result = mediatree_dvb_dmx_init(&dvb->demux);
 	if (result < 0) {
 		dev_warn(dev->dev,
-			 "%s: dvb_dmx_init failed (errno = %d)\n",
+			 "%s: mediatree_dvb_dmx_init failed (errno = %d)\n",
 		       dev->name, result);
 		goto fail_dmx;
 	}
@@ -521,10 +521,10 @@ static int register_dvb(struct cx231xx_dvb *dvb,
 	dvb->dmxdev.filternum = 256;
 	dvb->dmxdev.demux = &dvb->demux.dmx;
 	dvb->dmxdev.capabilities = 0;
-	result = dvb_dmxdev_init(&dvb->dmxdev, &dvb->adapter);
+	result = mediatree_dvb_dmxdev_init(&dvb->dmxdev, &dvb->adapter);
 	if (result < 0) {
 		dev_warn(dev->dev,
-			 "%s: dvb_dmxdev_init failed (errno = %d)\n",
+			 "%s: mediatree_dvb_dmxdev_init failed (errno = %d)\n",
 			 dev->name, result);
 		goto fail_dmxdev;
 	}
@@ -556,7 +556,7 @@ static int register_dvb(struct cx231xx_dvb *dvb,
 	}
 
 	/* register network adapter */
-	dvb_net_init(&dvb->adapter, &dvb->net, &dvb->demux.dmx);
+	mediatree_dvb_net_init(&dvb->adapter, &dvb->net, &dvb->demux.dmx);
 	result = dvb_create_media_graph(&dvb->adapter,
 					dev->tuner_type == TUNER_ABSENT);
 	if (result < 0)
@@ -565,43 +565,43 @@ static int register_dvb(struct cx231xx_dvb *dvb,
 	return 0;
 
 fail_create_graph:
-	dvb_net_release(&dvb->net);
+	mediatree_dvb_net_release(&dvb->net);
 fail_fe_conn:
 	dvb->demux.dmx.remove_frontend(&dvb->demux.dmx, &dvb->fe_mem);
 fail_fe_mem:
 	dvb->demux.dmx.remove_frontend(&dvb->demux.dmx, &dvb->fe_hw);
 fail_fe_hw:
-	dvb_dmxdev_release(&dvb->dmxdev);
+	mediatree_dvb_dmxdev_release(&dvb->dmxdev);
 fail_dmxdev:
-	dvb_dmx_release(&dvb->demux);
+	mediatree_dvb_dmx_release(&dvb->demux);
 fail_dmx:
 	if (dvb->frontend[1])
-		dvb_unregister_frontend(dvb->frontend[1]);
-	dvb_unregister_frontend(dvb->frontend[0]);
+		mediatree_dvb_unregister_frontend(dvb->frontend[1]);
+	mediatree_dvb_unregister_frontend(dvb->frontend[0]);
 fail_frontend1:
 	if (dvb->frontend[1])
-		dvb_frontend_detach(dvb->frontend[1]);
+		mediatree_dvb_frontend_detach(dvb->frontend[1]);
 fail_frontend0:
-	dvb_frontend_detach(dvb->frontend[0]);
-	dvb_unregister_adapter(&dvb->adapter);
+	mediatree_dvb_frontend_detach(dvb->frontend[0]);
+	mediatree_dvb_unregister_adapter(&dvb->adapter);
 fail_adapter:
 	return result;
 }
 
 static void unregister_dvb(struct cx231xx_dvb *dvb)
 {
-	dvb_net_release(&dvb->net);
+	mediatree_dvb_net_release(&dvb->net);
 	dvb->demux.dmx.remove_frontend(&dvb->demux.dmx, &dvb->fe_mem);
 	dvb->demux.dmx.remove_frontend(&dvb->demux.dmx, &dvb->fe_hw);
-	dvb_dmxdev_release(&dvb->dmxdev);
-	dvb_dmx_release(&dvb->demux);
+	mediatree_dvb_dmxdev_release(&dvb->dmxdev);
+	mediatree_dvb_dmx_release(&dvb->demux);
 	if (dvb->frontend[1])
-		dvb_unregister_frontend(dvb->frontend[1]);
-	dvb_unregister_frontend(dvb->frontend[0]);
+		mediatree_dvb_unregister_frontend(dvb->frontend[1]);
+	mediatree_dvb_unregister_frontend(dvb->frontend[0]);
 	if (dvb->frontend[1])
-		dvb_frontend_detach(dvb->frontend[1]);
-	dvb_frontend_detach(dvb->frontend[0]);
-	dvb_unregister_adapter(&dvb->adapter);
+		mediatree_dvb_frontend_detach(dvb->frontend[1]);
+	mediatree_dvb_frontend_detach(dvb->frontend[0]);
+	mediatree_dvb_unregister_adapter(&dvb->adapter);
 
 	/* remove I2C tuner */
 	dvb_module_release(dvb->i2c_client_tuner);
diff --git a/drivers/media/usb/dvb-usb-v2/Makefile b/drivers/media/usb/dvb-usb-v2/Makefile
index 58c0140..09c7641 100644
--- a/drivers/media/usb/dvb-usb-v2/Makefile
+++ b/drivers/media/usb/dvb-usb-v2/Makefile
@@ -1,6 +1,6 @@
 # SPDX-License-Identifier: GPL-2.0
-dvb_usb_v2-objs := dvb_usb_core.o dvb_usb_urb.o usb_urb.o
-obj-$(CONFIG_DVB_USB_V2) += dvb_usb_v2.o
+mediatree_dvb_usb_v2-objs := dvb_usb_core.o dvb_usb_urb.o usb_urb.o
+obj-$(CONFIG_DVB_USB_V2) += mediatree_dvb_usb_v2.o
 
 dvb-usb-af9015-objs := af9015.o
 obj-$(CONFIG_DVB_USB_AF9015) += dvb-usb-af9015.o
diff --git a/drivers/media/usb/dvb-usb-v2/anysee.c b/drivers/media/usb/dvb-usb-v2/anysee.c
index aa45b5d..7ef5a7b 100644
--- a/drivers/media/usb/dvb-usb-v2/anysee.c
+++ b/drivers/media/usb/dvb-usb-v2/anysee.c
@@ -1295,7 +1295,7 @@ static int anysee_ci_init(struct dvb_usb_device *d)
 	if (ret)
 		return ret;
 
-	ret = dvb_ca_en50221_init(&d->adapter[0].dvb_adap, &state->ci, 0, 1);
+	ret = mediatree_dvb_ca_en50221_init(&d->adapter[0].dvb_adap, &state->ci, 0, 1);
 	if (ret)
 		return ret;
 
@@ -1310,7 +1310,7 @@ static void anysee_ci_release(struct dvb_usb_device *d)
 
 	/* detach CI */
 	if (state->ci_attached)
-		dvb_ca_en50221_release(&state->ci);
+		mediatree_dvb_ca_en50221_release(&state->ci);
 
 	return;
 }
diff --git a/drivers/media/usb/dvb-usb-v2/az6007.c b/drivers/media/usb/dvb-usb-v2/az6007.c
index 62ee09f..10f53fc 100644
--- a/drivers/media/usb/dvb-usb-v2/az6007.c
+++ b/drivers/media/usb/dvb-usb-v2/az6007.c
@@ -567,7 +567,7 @@ static void az6007_ci_uninit(struct dvb_usb_device *d)
 	if (NULL == state->ca.data)
 		return;
 
-	dvb_ca_en50221_release(&state->ca);
+	mediatree_dvb_ca_en50221_release(&state->ca);
 
 	memset(&state->ca, 0, sizeof(state->ca));
 }
@@ -593,7 +593,7 @@ static int az6007_ci_init(struct dvb_usb_adapter *adap)
 	state->ca.poll_slot_status	= az6007_ci_poll_slot_status;
 	state->ca.data			= d;
 
-	ret = dvb_ca_en50221_init(&adap->dvb_adap,
+	ret = mediatree_dvb_ca_en50221_init(&adap->dvb_adap,
 				  &state->ca,
 				  0, /* flags */
 				  1);/* n_slots */
diff --git a/drivers/media/usb/dvb-usb-v2/dvb_usb.h b/drivers/media/usb/dvb-usb-v2/dvb_usb.h
index 288c15a..887868e 100644
--- a/drivers/media/usb/dvb-usb-v2/dvb_usb.h
+++ b/drivers/media/usb/dvb-usb-v2/dvb_usb.h
@@ -399,19 +399,19 @@ struct dvb_usb_device {
 	void *priv;
 };
 
-extern int dvb_usbv2_probe(struct usb_interface *,
+extern int mediatree_dvb_usbv2_probe(struct usb_interface *,
 		const struct usb_device_id *);
-extern void dvb_usbv2_disconnect(struct usb_interface *);
-extern int dvb_usbv2_suspend(struct usb_interface *, pm_message_t);
-extern int dvb_usbv2_resume(struct usb_interface *);
-extern int dvb_usbv2_reset_resume(struct usb_interface *);
+extern void mediatree_dvb_usbv2_disconnect(struct usb_interface *);
+extern int mediatree_dvb_usbv2_suspend(struct usb_interface *, pm_message_t);
+extern int mediatree_dvb_usbv2_resume(struct usb_interface *);
+extern int mediatree_dvb_usbv2_reset_resume(struct usb_interface *);
 
 /* the generic read/write method for device control */
-extern int dvb_usbv2_generic_rw(struct dvb_usb_device *, u8 *, u16, u8 *, u16);
-extern int dvb_usbv2_generic_write(struct dvb_usb_device *, u8 *, u16);
+extern int mediatree_dvb_usbv2_generic_rw(struct dvb_usb_device *, u8 *, u16, u8 *, u16);
+extern int mediatree_dvb_usbv2_generic_write(struct dvb_usb_device *, u8 *, u16);
 /* caller must hold lock when locked versions are called */
-extern int dvb_usbv2_generic_rw_locked(struct dvb_usb_device *,
+extern int mediatree_dvb_usbv2_generic_rw_locked(struct dvb_usb_device *,
 		u8 *, u16, u8 *, u16);
-extern int dvb_usbv2_generic_write_locked(struct dvb_usb_device *, u8 *, u16);
+extern int mediatree_dvb_usbv2_generic_write_locked(struct dvb_usb_device *, u8 *, u16);
 
 #endif
diff --git a/drivers/media/usb/dvb-usb-v2/dvb_usb_core.c b/drivers/media/usb/dvb-usb-v2/dvb_usb_core.c
index f1c79f3..68a42cd 100644
--- a/drivers/media/usb/dvb-usb-v2/dvb_usb_core.c
+++ b/drivers/media/usb/dvb-usb-v2/dvb_usb_core.c
@@ -9,8 +9,8 @@
 #include "dvb_usb_common.h"
 #include <media/media-device.h>
 
-static int dvb_usbv2_disable_rc_polling;
-module_param_named(disable_rc_polling, dvb_usbv2_disable_rc_polling, int, 0644);
+static int mediatree_dvb_usbv2_disable_rc_polling;
+module_param_named(disable_rc_polling, mediatree_dvb_usbv2_disable_rc_polling, int, 0644);
 MODULE_PARM_DESC(disable_rc_polling,
 		"disable remote control polling (default: 0)");
 static int dvb_usb_force_pid_filter_usage;
@@ -19,7 +19,7 @@ module_param_named(force_pid_filter_usage, dvb_usb_force_pid_filter_usage,
 MODULE_PARM_DESC(force_pid_filter_usage,
 		"force all DVB USB devices to use a PID filter, if any (default: 0)");
 
-static int dvb_usbv2_download_firmware(struct dvb_usb_device *d,
+static int mediatree_dvb_usbv2_download_firmware(struct dvb_usb_device *d,
 		const char *name)
 {
 	int ret;
@@ -53,7 +53,7 @@ err:
 	return ret;
 }
 
-static int dvb_usbv2_i2c_init(struct dvb_usb_device *d)
+static int mediatree_dvb_usbv2_i2c_init(struct dvb_usb_device *d)
 {
 	int ret;
 	dev_dbg(&d->udev->dev, "%s:\n", __func__);
@@ -78,7 +78,7 @@ err:
 	return ret;
 }
 
-static int dvb_usbv2_i2c_exit(struct dvb_usb_device *d)
+static int mediatree_dvb_usbv2_i2c_exit(struct dvb_usb_device *d)
 {
 	dev_dbg(&d->udev->dev, "%s:\n", __func__);
 
@@ -99,7 +99,7 @@ static void dvb_usb_read_remote_control(struct work_struct *work)
 	 * When the parameter has been set to 1 via sysfs while the
 	 * driver was running, or when bulk mode is enabled after IR init.
 	 */
-	if (dvb_usbv2_disable_rc_polling || d->rc.bulk_mode) {
+	if (mediatree_dvb_usbv2_disable_rc_polling || d->rc.bulk_mode) {
 		d->rc_polling_active = false;
 		return;
 	}
@@ -116,13 +116,13 @@ static void dvb_usb_read_remote_control(struct work_struct *work)
 			msecs_to_jiffies(d->rc.interval));
 }
 
-static int dvb_usbv2_remote_init(struct dvb_usb_device *d)
+static int mediatree_dvb_usbv2_remote_init(struct dvb_usb_device *d)
 {
 	int ret;
 	struct rc_dev *dev;
 	dev_dbg(&d->udev->dev, "%s:\n", __func__);
 
-	if (dvb_usbv2_disable_rc_polling || !d->props->get_rc_config)
+	if (mediatree_dvb_usbv2_disable_rc_polling || !d->props->get_rc_config)
 		return 0;
 
 	d->rc.map_name = d->rc_map;
@@ -180,7 +180,7 @@ err:
 	return ret;
 }
 
-static int dvb_usbv2_remote_exit(struct dvb_usb_device *d)
+static int mediatree_dvb_usbv2_remote_exit(struct dvb_usb_device *d)
 {
 	dev_dbg(&d->udev->dev, "%s:\n", __func__);
 
@@ -193,32 +193,32 @@ static int dvb_usbv2_remote_exit(struct dvb_usb_device *d)
 	return 0;
 }
 #else
-	#define dvb_usbv2_remote_init(args...) 0
-	#define dvb_usbv2_remote_exit(args...)
+	#define mediatree_dvb_usbv2_remote_init(args...) 0
+	#define mediatree_dvb_usbv2_remote_exit(args...)
 #endif
 
 static void dvb_usb_data_complete(struct usb_data_stream *stream, u8 *buf,
 		size_t len)
 {
 	struct dvb_usb_adapter *adap = stream->user_priv;
-	dvb_dmx_swfilter(&adap->demux, buf, len);
+	mediatree_dvb_dmx_swfilter(&adap->demux, buf, len);
 }
 
 static void dvb_usb_data_complete_204(struct usb_data_stream *stream, u8 *buf,
 		size_t len)
 {
 	struct dvb_usb_adapter *adap = stream->user_priv;
-	dvb_dmx_swfilter_204(&adap->demux, buf, len);
+	mediatree_dvb_dmx_swfilter_204(&adap->demux, buf, len);
 }
 
 static void dvb_usb_data_complete_raw(struct usb_data_stream *stream, u8 *buf,
 		size_t len)
 {
 	struct dvb_usb_adapter *adap = stream->user_priv;
-	dvb_dmx_swfilter_raw(&adap->demux, buf, len);
+	mediatree_dvb_dmx_swfilter_raw(&adap->demux, buf, len);
 }
 
-static int dvb_usbv2_adapter_stream_init(struct dvb_usb_adapter *adap)
+static int mediatree_dvb_usbv2_adapter_stream_init(struct dvb_usb_adapter *adap)
 {
 	dev_dbg(&adap_to_d(adap)->udev->dev, "%s: adap=%d\n", __func__,
 			adap->id);
@@ -230,7 +230,7 @@ static int dvb_usbv2_adapter_stream_init(struct dvb_usb_adapter *adap)
 	return usb_urb_initv2(&adap->stream, &adap->props->stream);
 }
 
-static int dvb_usbv2_adapter_stream_exit(struct dvb_usb_adapter *adap)
+static int mediatree_dvb_usbv2_adapter_stream_exit(struct dvb_usb_adapter *adap)
 {
 	dev_dbg(&adap_to_d(adap)->udev->dev, "%s: adap=%d\n", __func__,
 			adap->id);
@@ -385,7 +385,7 @@ skip_feed_stop:
 	return ret;
 }
 
-static int dvb_usbv2_media_device_init(struct dvb_usb_adapter *adap)
+static int mediatree_dvb_usbv2_media_device_init(struct dvb_usb_adapter *adap)
 {
 #ifdef CONFIG_MEDIA_CONTROLLER_DVB
 	struct media_device *mdev;
@@ -405,7 +405,7 @@ static int dvb_usbv2_media_device_init(struct dvb_usb_adapter *adap)
 	return 0;
 }
 
-static int dvb_usbv2_media_device_register(struct dvb_usb_adapter *adap)
+static int mediatree_dvb_usbv2_media_device_register(struct dvb_usb_adapter *adap)
 {
 #ifdef CONFIG_MEDIA_CONTROLLER_DVB
 	return media_device_register(adap->dvb_adap.mdev);
@@ -414,7 +414,7 @@ static int dvb_usbv2_media_device_register(struct dvb_usb_adapter *adap)
 #endif
 }
 
-static void dvb_usbv2_media_device_unregister(struct dvb_usb_adapter *adap)
+static void mediatree_dvb_usbv2_media_device_unregister(struct dvb_usb_adapter *adap)
 {
 #ifdef CONFIG_MEDIA_CONTROLLER_DVB
 
@@ -429,26 +429,26 @@ static void dvb_usbv2_media_device_unregister(struct dvb_usb_adapter *adap)
 #endif
 }
 
-static int dvb_usbv2_adapter_dvb_init(struct dvb_usb_adapter *adap)
+static int mediatree_dvb_usbv2_adapter_dvb_init(struct dvb_usb_adapter *adap)
 {
 	int ret;
 	struct dvb_usb_device *d = adap_to_d(adap);
 
 	dev_dbg(&d->udev->dev, "%s: adap=%d\n", __func__, adap->id);
 
-	ret = dvb_register_adapter(&adap->dvb_adap, d->name, d->props->owner,
+	ret = mediatree_dvb_register_adapter(&adap->dvb_adap, d->name, d->props->owner,
 			&d->udev->dev, d->props->adapter_nr);
 	if (ret < 0) {
-		dev_dbg(&d->udev->dev, "%s: dvb_register_adapter() failed=%d\n",
+		dev_dbg(&d->udev->dev, "%s: mediatree_dvb_register_adapter() failed=%d\n",
 				__func__, ret);
 		goto err_dvb_register_adapter;
 	}
 
 	adap->dvb_adap.priv = adap;
 
-	ret = dvb_usbv2_media_device_init(adap);
+	ret = mediatree_dvb_usbv2_media_device_init(adap);
 	if (ret < 0) {
-		dev_dbg(&d->udev->dev, "%s: dvb_usbv2_media_device_init() failed=%d\n",
+		dev_dbg(&d->udev->dev, "%s: mediatree_dvb_usbv2_media_device_init() failed=%d\n",
 				__func__, ret);
 		goto err_dvb_register_mc;
 	}
@@ -471,9 +471,9 @@ static int dvb_usbv2_adapter_dvb_init(struct dvb_usb_adapter *adap)
 	adap->demux.start_feed       = dvb_usb_start_feed;
 	adap->demux.stop_feed        = dvb_usb_stop_feed;
 	adap->demux.write_to_decoder = NULL;
-	ret = dvb_dmx_init(&adap->demux);
+	ret = mediatree_dvb_dmx_init(&adap->demux);
 	if (ret < 0) {
-		dev_err(&d->udev->dev, "%s: dvb_dmx_init() failed=%d\n",
+		dev_err(&d->udev->dev, "%s: mediatree_dvb_dmx_init() failed=%d\n",
 				KBUILD_MODNAME, ret);
 		goto err_dvb_dmx_init;
 	}
@@ -481,51 +481,51 @@ static int dvb_usbv2_adapter_dvb_init(struct dvb_usb_adapter *adap)
 	adap->dmxdev.filternum       = adap->demux.filternum;
 	adap->dmxdev.demux           = &adap->demux.dmx;
 	adap->dmxdev.capabilities    = 0;
-	ret = dvb_dmxdev_init(&adap->dmxdev, &adap->dvb_adap);
+	ret = mediatree_dvb_dmxdev_init(&adap->dmxdev, &adap->dvb_adap);
 	if (ret < 0) {
-		dev_err(&d->udev->dev, "%s: dvb_dmxdev_init() failed=%d\n",
+		dev_err(&d->udev->dev, "%s: mediatree_dvb_dmxdev_init() failed=%d\n",
 				KBUILD_MODNAME, ret);
 		goto err_dvb_dmxdev_init;
 	}
 
-	ret = dvb_net_init(&adap->dvb_adap, &adap->dvb_net, &adap->demux.dmx);
+	ret = mediatree_dvb_net_init(&adap->dvb_adap, &adap->dvb_net, &adap->demux.dmx);
 	if (ret < 0) {
-		dev_err(&d->udev->dev, "%s: dvb_net_init() failed=%d\n",
+		dev_err(&d->udev->dev, "%s: mediatree_dvb_net_init() failed=%d\n",
 				KBUILD_MODNAME, ret);
 		goto err_dvb_net_init;
 	}
 
 	return 0;
 err_dvb_net_init:
-	dvb_dmxdev_release(&adap->dmxdev);
+	mediatree_dvb_dmxdev_release(&adap->dmxdev);
 err_dvb_dmxdev_init:
-	dvb_dmx_release(&adap->demux);
+	mediatree_dvb_dmx_release(&adap->demux);
 err_dvb_dmx_init:
-	dvb_usbv2_media_device_unregister(adap);
+	mediatree_dvb_usbv2_media_device_unregister(adap);
 err_dvb_register_mc:
-	dvb_unregister_adapter(&adap->dvb_adap);
+	mediatree_dvb_unregister_adapter(&adap->dvb_adap);
 err_dvb_register_adapter:
 	adap->dvb_adap.priv = NULL;
 	return ret;
 }
 
-static int dvb_usbv2_adapter_dvb_exit(struct dvb_usb_adapter *adap)
+static int mediatree_dvb_usbv2_adapter_dvb_exit(struct dvb_usb_adapter *adap)
 {
 	dev_dbg(&adap_to_d(adap)->udev->dev, "%s: adap=%d\n", __func__,
 			adap->id);
 
 	if (adap->dvb_adap.priv) {
-		dvb_net_release(&adap->dvb_net);
+		mediatree_dvb_net_release(&adap->dvb_net);
 		adap->demux.dmx.close(&adap->demux.dmx);
-		dvb_dmxdev_release(&adap->dmxdev);
-		dvb_dmx_release(&adap->demux);
-		dvb_unregister_adapter(&adap->dvb_adap);
+		mediatree_dvb_dmxdev_release(&adap->dmxdev);
+		mediatree_dvb_dmx_release(&adap->demux);
+		mediatree_dvb_unregister_adapter(&adap->dvb_adap);
 	}
 
 	return 0;
 }
 
-static int dvb_usbv2_device_power_ctrl(struct dvb_usb_device *d, int onoff)
+static int mediatree_dvb_usbv2_device_power_ctrl(struct dvb_usb_device *d, int onoff)
 {
 	int ret;
 
@@ -563,7 +563,7 @@ static int dvb_usb_fe_init(struct dvb_frontend *fe)
 		set_bit(ADAP_INIT, &adap->state_bits);
 	}
 
-	ret = dvb_usbv2_device_power_ctrl(d, 1);
+	ret = mediatree_dvb_usbv2_device_power_ctrl(d, 1);
 	if (ret < 0)
 		goto err;
 
@@ -615,7 +615,7 @@ static int dvb_usb_fe_sleep(struct dvb_frontend *fe)
 			goto err;
 	}
 
-	ret = dvb_usbv2_device_power_ctrl(d, 0);
+	ret = mediatree_dvb_usbv2_device_power_ctrl(d, 0);
 
 err:
 	if (!adap->suspend_resume_active) {
@@ -629,7 +629,7 @@ err:
 	return ret;
 }
 
-static int dvb_usbv2_adapter_frontend_init(struct dvb_usb_adapter *adap)
+static int mediatree_dvb_usbv2_adapter_frontend_init(struct dvb_usb_adapter *adap)
 {
 	int ret, i, count_registered = 0;
 	struct dvb_usb_device *d = adap_to_d(adap);
@@ -661,7 +661,7 @@ static int dvb_usbv2_adapter_frontend_init(struct dvb_usb_adapter *adap)
 		adap->fe_sleep[i] = adap->fe[i]->ops.sleep;
 		adap->fe[i]->ops.sleep = dvb_usb_fe_sleep;
 
-		ret = dvb_register_frontend(&adap->dvb_adap, adap->fe[i]);
+		ret = mediatree_dvb_register_frontend(&adap->dvb_adap, adap->fe[i]);
 		if (ret < 0) {
 			dev_err(&d->udev->dev,
 					"%s: frontend%d registration failed\n",
@@ -685,18 +685,18 @@ static int dvb_usbv2_adapter_frontend_init(struct dvb_usb_adapter *adap)
 	if (ret < 0)
 		goto err_dvb_unregister_frontend;
 
-	ret = dvb_usbv2_media_device_register(adap);
+	ret = mediatree_dvb_usbv2_media_device_register(adap);
 
 	return ret;
 
 err_dvb_unregister_frontend:
 	for (i = count_registered - 1; i >= 0; i--)
-		dvb_unregister_frontend(adap->fe[i]);
+		mediatree_dvb_unregister_frontend(adap->fe[i]);
 
 err_dvb_frontend_detach:
 	for (i = MAX_NO_OF_FE_PER_ADAP - 1; i >= 0; i--) {
 		if (adap->fe[i]) {
-			dvb_frontend_detach(adap->fe[i]);
+			mediatree_dvb_frontend_detach(adap->fe[i]);
 			adap->fe[i] = NULL;
 		}
 	}
@@ -706,7 +706,7 @@ err:
 	return ret;
 }
 
-static int dvb_usbv2_adapter_frontend_exit(struct dvb_usb_adapter *adap)
+static int mediatree_dvb_usbv2_adapter_frontend_exit(struct dvb_usb_adapter *adap)
 {
 	int ret, i;
 	struct dvb_usb_device *d = adap_to_d(adap);
@@ -715,8 +715,8 @@ static int dvb_usbv2_adapter_frontend_exit(struct dvb_usb_adapter *adap)
 
 	for (i = MAX_NO_OF_FE_PER_ADAP - 1; i >= 0; i--) {
 		if (adap->fe[i]) {
-			dvb_unregister_frontend(adap->fe[i]);
-			dvb_frontend_detach(adap->fe[i]);
+			mediatree_dvb_unregister_frontend(adap->fe[i]);
+			mediatree_dvb_frontend_detach(adap->fe[i]);
 		}
 	}
 
@@ -740,7 +740,7 @@ static int dvb_usbv2_adapter_frontend_exit(struct dvb_usb_adapter *adap)
 	return 0;
 }
 
-static int dvb_usbv2_adapter_init(struct dvb_usb_device *d)
+static int mediatree_dvb_usbv2_adapter_init(struct dvb_usb_device *d)
 {
 	struct dvb_usb_adapter *adap;
 	int ret, i, adapter_count;
@@ -794,15 +794,15 @@ static int dvb_usbv2_adapter_init(struct dvb_usb_device *d)
 			adap->max_feed_count = adap->props->pid_filter_count;
 		}
 
-		ret = dvb_usbv2_adapter_stream_init(adap);
+		ret = mediatree_dvb_usbv2_adapter_stream_init(adap);
 		if (ret)
 			goto err;
 
-		ret = dvb_usbv2_adapter_dvb_init(adap);
+		ret = mediatree_dvb_usbv2_adapter_dvb_init(adap);
 		if (ret)
 			goto err;
 
-		ret = dvb_usbv2_adapter_frontend_init(adap);
+		ret = mediatree_dvb_usbv2_adapter_frontend_init(adap);
 		if (ret)
 			goto err;
 
@@ -817,17 +817,17 @@ err:
 	return ret;
 }
 
-static int dvb_usbv2_adapter_exit(struct dvb_usb_device *d)
+static int mediatree_dvb_usbv2_adapter_exit(struct dvb_usb_device *d)
 {
 	int i;
 	dev_dbg(&d->udev->dev, "%s:\n", __func__);
 
 	for (i = MAX_NO_OF_ADAPTER_PER_DEVICE - 1; i >= 0; i--) {
 		if (d->adapter[i].props) {
-			dvb_usbv2_adapter_dvb_exit(&d->adapter[i]);
-			dvb_usbv2_adapter_stream_exit(&d->adapter[i]);
-			dvb_usbv2_adapter_frontend_exit(&d->adapter[i]);
-			dvb_usbv2_media_device_unregister(&d->adapter[i]);
+			mediatree_dvb_usbv2_adapter_dvb_exit(&d->adapter[i]);
+			mediatree_dvb_usbv2_adapter_stream_exit(&d->adapter[i]);
+			mediatree_dvb_usbv2_adapter_frontend_exit(&d->adapter[i]);
+			mediatree_dvb_usbv2_media_device_unregister(&d->adapter[i]);
 		}
 	}
 
@@ -835,23 +835,23 @@ static int dvb_usbv2_adapter_exit(struct dvb_usb_device *d)
 }
 
 /* general initialization functions */
-static int dvb_usbv2_exit(struct dvb_usb_device *d)
+static int mediatree_dvb_usbv2_exit(struct dvb_usb_device *d)
 {
 	dev_dbg(&d->udev->dev, "%s:\n", __func__);
 
-	dvb_usbv2_remote_exit(d);
-	dvb_usbv2_adapter_exit(d);
-	dvb_usbv2_i2c_exit(d);
+	mediatree_dvb_usbv2_remote_exit(d);
+	mediatree_dvb_usbv2_adapter_exit(d);
+	mediatree_dvb_usbv2_i2c_exit(d);
 
 	return 0;
 }
 
-static int dvb_usbv2_init(struct dvb_usb_device *d)
+static int mediatree_dvb_usbv2_init(struct dvb_usb_device *d)
 {
 	int ret;
 	dev_dbg(&d->udev->dev, "%s:\n", __func__);
 
-	dvb_usbv2_device_power_ctrl(d, 1);
+	mediatree_dvb_usbv2_device_power_ctrl(d, 1);
 
 	if (d->props->read_config) {
 		ret = d->props->read_config(d);
@@ -859,11 +859,11 @@ static int dvb_usbv2_init(struct dvb_usb_device *d)
 			goto err;
 	}
 
-	ret = dvb_usbv2_i2c_init(d);
+	ret = mediatree_dvb_usbv2_i2c_init(d);
 	if (ret < 0)
 		goto err;
 
-	ret = dvb_usbv2_adapter_init(d);
+	ret = mediatree_dvb_usbv2_adapter_init(d);
 	if (ret < 0)
 		goto err;
 
@@ -873,20 +873,20 @@ static int dvb_usbv2_init(struct dvb_usb_device *d)
 			goto err;
 	}
 
-	ret = dvb_usbv2_remote_init(d);
+	ret = mediatree_dvb_usbv2_remote_init(d);
 	if (ret < 0)
 		goto err;
 
-	dvb_usbv2_device_power_ctrl(d, 0);
+	mediatree_dvb_usbv2_device_power_ctrl(d, 0);
 
 	return 0;
 err:
-	dvb_usbv2_device_power_ctrl(d, 0);
+	mediatree_dvb_usbv2_device_power_ctrl(d, 0);
 	dev_dbg(&d->udev->dev, "%s: failed=%d\n", __func__, ret);
 	return ret;
 }
 
-int dvb_usbv2_probe(struct usb_interface *intf,
+int mediatree_dvb_usbv2_probe(struct usb_interface *intf,
 		const struct usb_device_id *id)
 {
 	int ret;
@@ -953,7 +953,7 @@ int dvb_usbv2_probe(struct usb_interface *intf,
 			if (!name)
 				name = d->props->firmware;
 
-			ret = dvb_usbv2_download_firmware(d, name);
+			ret = mediatree_dvb_usbv2_download_firmware(d, name);
 			if (ret == 0) {
 				/* device is warm, continue initialization */
 				;
@@ -978,7 +978,7 @@ int dvb_usbv2_probe(struct usb_interface *intf,
 	dev_info(&d->udev->dev, "%s: found a '%s' in warm state\n",
 			KBUILD_MODNAME, d->name);
 
-	ret = dvb_usbv2_init(d);
+	ret = mediatree_dvb_usbv2_init(d);
 	if (ret < 0)
 		goto err_free_all;
 
@@ -990,7 +990,7 @@ exit:
 
 	return 0;
 err_free_all:
-	dvb_usbv2_exit(d);
+	mediatree_dvb_usbv2_exit(d);
 	if (d->props->disconnect)
 		d->props->disconnect(d);
 err_kfree_priv:
@@ -1001,9 +1001,9 @@ err:
 	dev_dbg(&udev->dev, "%s: failed=%d\n", __func__, ret);
 	return ret;
 }
-EXPORT_SYMBOL(dvb_usbv2_probe);
+EXPORT_SYMBOL(mediatree_dvb_usbv2_probe);
 
-void dvb_usbv2_disconnect(struct usb_interface *intf)
+void mediatree_dvb_usbv2_disconnect(struct usb_interface *intf)
 {
 	struct dvb_usb_device *d = usb_get_intfdata(intf);
 	const char *devname = kstrdup(dev_name(&d->udev->dev), GFP_KERNEL);
@@ -1015,7 +1015,7 @@ void dvb_usbv2_disconnect(struct usb_interface *intf)
 	if (d->props->exit)
 		d->props->exit(d);
 
-	dvb_usbv2_exit(d);
+	mediatree_dvb_usbv2_exit(d);
 
 	if (d->props->disconnect)
 		d->props->disconnect(d);
@@ -1027,9 +1027,9 @@ void dvb_usbv2_disconnect(struct usb_interface *intf)
 		KBUILD_MODNAME, drvname, devname);
 	kfree(devname);
 }
-EXPORT_SYMBOL(dvb_usbv2_disconnect);
+EXPORT_SYMBOL(mediatree_dvb_usbv2_disconnect);
 
-int dvb_usbv2_suspend(struct usb_interface *intf, pm_message_t msg)
+int mediatree_dvb_usbv2_suspend(struct usb_interface *intf, pm_message_t msg)
 {
 	struct dvb_usb_device *d = usb_get_intfdata(intf);
 	int ret = 0, i, active_fe;
@@ -1052,15 +1052,15 @@ int dvb_usbv2_suspend(struct usb_interface *intf, pm_message_t msg)
 			/* stop usb streaming */
 			usb_urb_killv2(&d->adapter[i].stream);
 
-			ret = dvb_frontend_suspend(fe);
+			ret = mediatree_dvb_frontend_suspend(fe);
 		}
 	}
 
 	return ret;
 }
-EXPORT_SYMBOL(dvb_usbv2_suspend);
+EXPORT_SYMBOL(mediatree_dvb_usbv2_suspend);
 
-static int dvb_usbv2_resume_common(struct dvb_usb_device *d)
+static int mediatree_dvb_usbv2_resume_common(struct dvb_usb_device *d)
 {
 	int ret = 0, i, active_fe;
 	struct dvb_frontend *fe;
@@ -1071,7 +1071,7 @@ static int dvb_usbv2_resume_common(struct dvb_usb_device *d)
 		if (d->adapter[i].dvb_adap.priv && active_fe != -1) {
 			fe = d->adapter[i].fe[active_fe];
 
-			ret = dvb_frontend_resume(fe);
+			ret = mediatree_dvb_frontend_resume(fe);
 
 			/* resume usb streaming */
 			usb_urb_submitv2(&d->adapter[i].stream, NULL);
@@ -1091,33 +1091,33 @@ static int dvb_usbv2_resume_common(struct dvb_usb_device *d)
 	return ret;
 }
 
-int dvb_usbv2_resume(struct usb_interface *intf)
+int mediatree_dvb_usbv2_resume(struct usb_interface *intf)
 {
 	struct dvb_usb_device *d = usb_get_intfdata(intf);
 	dev_dbg(&d->udev->dev, "%s:\n", __func__);
 
-	return dvb_usbv2_resume_common(d);
+	return mediatree_dvb_usbv2_resume_common(d);
 }
-EXPORT_SYMBOL(dvb_usbv2_resume);
+EXPORT_SYMBOL(mediatree_dvb_usbv2_resume);
 
-int dvb_usbv2_reset_resume(struct usb_interface *intf)
+int mediatree_dvb_usbv2_reset_resume(struct usb_interface *intf)
 {
 	struct dvb_usb_device *d = usb_get_intfdata(intf);
 	int ret;
 	dev_dbg(&d->udev->dev, "%s:\n", __func__);
 
-	dvb_usbv2_device_power_ctrl(d, 1);
+	mediatree_dvb_usbv2_device_power_ctrl(d, 1);
 
 	if (d->props->init)
 		d->props->init(d);
 
-	ret = dvb_usbv2_resume_common(d);
+	ret = mediatree_dvb_usbv2_resume_common(d);
 
-	dvb_usbv2_device_power_ctrl(d, 0);
+	mediatree_dvb_usbv2_device_power_ctrl(d, 0);
 
 	return ret;
 }
-EXPORT_SYMBOL(dvb_usbv2_reset_resume);
+EXPORT_SYMBOL(mediatree_dvb_usbv2_reset_resume);
 
 MODULE_VERSION("2.0");
 MODULE_AUTHOR("Patrick Boettcher <patrick.boettcher@posteo.de>");
diff --git a/drivers/media/usb/dvb-usb-v2/dvb_usb_urb.c b/drivers/media/usb/dvb-usb-v2/dvb_usb_urb.c
index 7e817ea..cb5fe50 100644
--- a/drivers/media/usb/dvb-usb-v2/dvb_usb_urb.c
+++ b/drivers/media/usb/dvb-usb-v2/dvb_usb_urb.c
@@ -8,7 +8,7 @@
 
 #include "dvb_usb_common.h"
 
-static int dvb_usb_v2_generic_io(struct dvb_usb_device *d,
+static int dvb_usb_v2_mediatree_generic_io(struct dvb_usb_device *d,
 		u8 *wbuf, u16 wlen, u8 *rbuf, u16 rlen)
 {
 	int ret, actual_length;
@@ -57,40 +57,40 @@ static int dvb_usb_v2_generic_io(struct dvb_usb_device *d,
 	return ret;
 }
 
-int dvb_usbv2_generic_rw(struct dvb_usb_device *d,
+int mediatree_dvb_usbv2_generic_rw(struct dvb_usb_device *d,
 		u8 *wbuf, u16 wlen, u8 *rbuf, u16 rlen)
 {
 	int ret;
 
 	mutex_lock(&d->usb_mutex);
-	ret = dvb_usb_v2_generic_io(d, wbuf, wlen, rbuf, rlen);
+	ret = dvb_usb_v2_mediatree_generic_io(d, wbuf, wlen, rbuf, rlen);
 	mutex_unlock(&d->usb_mutex);
 
 	return ret;
 }
-EXPORT_SYMBOL(dvb_usbv2_generic_rw);
+EXPORT_SYMBOL(mediatree_dvb_usbv2_generic_rw);
 
-int dvb_usbv2_generic_write(struct dvb_usb_device *d, u8 *buf, u16 len)
+int mediatree_dvb_usbv2_generic_write(struct dvb_usb_device *d, u8 *buf, u16 len)
 {
 	int ret;
 
 	mutex_lock(&d->usb_mutex);
-	ret = dvb_usb_v2_generic_io(d, buf, len, NULL, 0);
+	ret = dvb_usb_v2_mediatree_generic_io(d, buf, len, NULL, 0);
 	mutex_unlock(&d->usb_mutex);
 
 	return ret;
 }
-EXPORT_SYMBOL(dvb_usbv2_generic_write);
+EXPORT_SYMBOL(mediatree_dvb_usbv2_generic_write);
 
-int dvb_usbv2_generic_rw_locked(struct dvb_usb_device *d,
+int mediatree_dvb_usbv2_generic_rw_locked(struct dvb_usb_device *d,
 		u8 *wbuf, u16 wlen, u8 *rbuf, u16 rlen)
 {
-	return dvb_usb_v2_generic_io(d, wbuf, wlen, rbuf, rlen);
+	return dvb_usb_v2_mediatree_generic_io(d, wbuf, wlen, rbuf, rlen);
 }
-EXPORT_SYMBOL(dvb_usbv2_generic_rw_locked);
+EXPORT_SYMBOL(mediatree_dvb_usbv2_generic_rw_locked);
 
-int dvb_usbv2_generic_write_locked(struct dvb_usb_device *d, u8 *buf, u16 len)
+int mediatree_dvb_usbv2_generic_write_locked(struct dvb_usb_device *d, u8 *buf, u16 len)
 {
-	return dvb_usb_v2_generic_io(d, buf, len, NULL, 0);
+	return dvb_usb_v2_mediatree_generic_io(d, buf, len, NULL, 0);
 }
-EXPORT_SYMBOL(dvb_usbv2_generic_write_locked);
+EXPORT_SYMBOL(mediatree_dvb_usbv2_generic_write_locked);
diff --git a/drivers/media/usb/dvb-usb-v2/dvbsky.c b/drivers/media/usb/dvb-usb-v2/dvbsky.c
index 1221c92..132c54e 100644
--- a/drivers/media/usb/dvb-usb-v2/dvbsky.c
+++ b/drivers/media/usb/dvb-usb-v2/dvbsky.c
@@ -46,7 +46,7 @@ static int dvbsky_usb_generic_rw(struct dvb_usb_device *d,
 	if (wlen != 0)
 		memcpy(state->obuf, wbuf, wlen);
 
-	ret = dvb_usbv2_generic_rw_locked(d, state->obuf, wlen,
+	ret = mediatree_dvb_usbv2_generic_rw_locked(d, state->obuf, wlen,
 			state->ibuf, rlen);
 
 	if (!ret && (rlen != 0))
@@ -65,11 +65,11 @@ static int dvbsky_stream_ctrl(struct dvb_usb_device *d, u8 onoff)
 
 	mutex_lock(&d->usb_mutex);
 	memcpy(state->obuf, obuf_pre, 3);
-	ret = dvb_usbv2_generic_write_locked(d, state->obuf, 3);
+	ret = mediatree_dvb_usbv2_generic_write_locked(d, state->obuf, 3);
 	if (!ret && onoff) {
 		msleep(20);
 		memcpy(state->obuf, obuf_post, 3);
-		ret = dvb_usbv2_generic_write_locked(d, state->obuf, 3);
+		ret = mediatree_dvb_usbv2_generic_write_locked(d, state->obuf, 3);
 	}
 	mutex_unlock(&d->usb_mutex);
 	return ret;
@@ -813,11 +813,11 @@ MODULE_DEVICE_TABLE(usb, dvbsky_id_table);
 static struct usb_driver dvbsky_usb_driver = {
 	.name = KBUILD_MODNAME,
 	.id_table = dvbsky_id_table,
-	.probe = dvb_usbv2_probe,
-	.disconnect = dvb_usbv2_disconnect,
-	.suspend = dvb_usbv2_suspend,
-	.resume = dvb_usbv2_resume,
-	.reset_resume = dvb_usbv2_reset_resume,
+	.probe = mediatree_dvb_usbv2_probe,
+	.disconnect = mediatree_dvb_usbv2_disconnect,
+	.suspend = mediatree_dvb_usbv2_suspend,
+	.resume = mediatree_dvb_usbv2_resume,
+	.reset_resume = mediatree_dvb_usbv2_reset_resume,
 	.no_dynamic_id = 1,
 	.soft_unbind = 1,
 };
diff --git a/drivers/media/usb/dvb-usb-v2/lmedm04.c b/drivers/media/usb/dvb-usb-v2/lmedm04.c
index 8a34e6c..998475c 100644
--- a/drivers/media/usb/dvb-usb-v2/lmedm04.c
+++ b/drivers/media/usb/dvb-usb-v2/lmedm04.c
@@ -1033,7 +1033,7 @@ static int dm04_lme2510_frontend_attach(struct dvb_usb_adapter *adap)
 
 	if (ret) {
 		if (adap->fe[0]) {
-			dvb_frontend_detach(adap->fe[0]);
+			mediatree_dvb_frontend_detach(adap->fe[0]);
 			adap->fe[0] = NULL;
 		}
 		d->rc_map = NULL;
diff --git a/drivers/media/usb/dvb-usb/az6027.c b/drivers/media/usb/dvb-usb/az6027.c
index 8678877..f890a74 100644
--- a/drivers/media/usb/dvb-usb/az6027.c
+++ b/drivers/media/usb/dvb-usb/az6027.c
@@ -726,7 +726,7 @@ static void az6027_ci_uninit(struct dvb_usb_device *d)
 	if (NULL == state->ca.data)
 		return;
 
-	dvb_ca_en50221_release(&state->ca);
+	mediatree_dvb_ca_en50221_release(&state->ca);
 
 	memset(&state->ca, 0, sizeof(state->ca));
 }
@@ -753,7 +753,7 @@ static int az6027_ci_init(struct dvb_usb_adapter *a)
 	state->ca.poll_slot_status	= az6027_ci_poll_slot_status;
 	state->ca.data			= d;
 
-	ret = dvb_ca_en50221_init(&a->dvb_adap,
+	ret = mediatree_dvb_ca_en50221_init(&a->dvb_adap,
 				  &state->ca,
 				  0, /* flags */
 				  1);/* n_slots */
diff --git a/drivers/media/usb/dvb-usb/dvb-usb-dvb.c b/drivers/media/usb/dvb-usb/dvb-usb-dvb.c
index 0a7f8ba..d712ede 100644
--- a/drivers/media/usb/dvb-usb/dvb-usb-dvb.c
+++ b/drivers/media/usb/dvb-usb/dvb-usb-dvb.c
@@ -145,12 +145,12 @@ static void dvb_usb_media_device_unregister(struct dvb_usb_adapter *adap)
 int dvb_usb_adapter_dvb_init(struct dvb_usb_adapter *adap, short *adapter_nums)
 {
 	int i;
-	int ret = dvb_register_adapter(&adap->dvb_adap, adap->dev->desc->name,
+	int ret = mediatree_dvb_register_adapter(&adap->dvb_adap, adap->dev->desc->name,
 				       adap->dev->owner, &adap->dev->udev->dev,
 				       adapter_nums);
 
 	if (ret < 0) {
-		deb_info("dvb_register_adapter failed: error %d", ret);
+		deb_info("mediatree_dvb_register_adapter failed: error %d", ret);
 		goto err;
 	}
 	adap->dvb_adap.priv = adap;
@@ -181,22 +181,22 @@ int dvb_usb_adapter_dvb_init(struct dvb_usb_adapter *adap, short *adapter_nums)
 	adap->demux.start_feed       = dvb_usb_start_feed;
 	adap->demux.stop_feed        = dvb_usb_stop_feed;
 	adap->demux.write_to_decoder = NULL;
-	if ((ret = dvb_dmx_init(&adap->demux)) < 0) {
-		err("dvb_dmx_init failed: error %d", ret);
+	if ((ret = mediatree_dvb_dmx_init(&adap->demux)) < 0) {
+		err("mediatree_dvb_dmx_init failed: error %d", ret);
 		goto err_dmx;
 	}
 
 	adap->dmxdev.filternum       = adap->demux.filternum;
 	adap->dmxdev.demux           = &adap->demux.dmx;
 	adap->dmxdev.capabilities    = 0;
-	if ((ret = dvb_dmxdev_init(&adap->dmxdev, &adap->dvb_adap)) < 0) {
-		err("dvb_dmxdev_init failed: error %d", ret);
+	if ((ret = mediatree_dvb_dmxdev_init(&adap->dmxdev, &adap->dvb_adap)) < 0) {
+		err("mediatree_dvb_dmxdev_init failed: error %d", ret);
 		goto err_dmx_dev;
 	}
 
-	if ((ret = dvb_net_init(&adap->dvb_adap, &adap->dvb_net,
+	if ((ret = mediatree_dvb_net_init(&adap->dvb_adap, &adap->dvb_net,
 						&adap->demux.dmx)) < 0) {
-		err("dvb_net_init failed: error %d", ret);
+		err("mediatree_dvb_net_init failed: error %d", ret);
 		goto err_net_init;
 	}
 
@@ -204,13 +204,13 @@ int dvb_usb_adapter_dvb_init(struct dvb_usb_adapter *adap, short *adapter_nums)
 	return 0;
 
 err_net_init:
-	dvb_dmxdev_release(&adap->dmxdev);
+	mediatree_dvb_dmxdev_release(&adap->dmxdev);
 err_dmx_dev:
-	dvb_dmx_release(&adap->demux);
+	mediatree_dvb_dmx_release(&adap->demux);
 err_dmx:
 	dvb_usb_media_device_unregister(adap);
 err_mc:
-	dvb_unregister_adapter(&adap->dvb_adap);
+	mediatree_dvb_unregister_adapter(&adap->dvb_adap);
 err:
 	return ret;
 }
@@ -219,12 +219,12 @@ int dvb_usb_adapter_dvb_exit(struct dvb_usb_adapter *adap)
 {
 	if (adap->state & DVB_USB_ADAP_STATE_DVB) {
 		deb_info("unregistering DVB part\n");
-		dvb_net_release(&adap->dvb_net);
+		mediatree_dvb_net_release(&adap->dvb_net);
 		adap->demux.dmx.close(&adap->demux.dmx);
-		dvb_dmxdev_release(&adap->dmxdev);
-		dvb_dmx_release(&adap->demux);
+		mediatree_dvb_dmxdev_release(&adap->dmxdev);
+		mediatree_dvb_dmx_release(&adap->demux);
 		dvb_usb_media_device_unregister(adap);
-		dvb_unregister_adapter(&adap->dvb_adap);
+		mediatree_dvb_unregister_adapter(&adap->dvb_adap);
 		adap->state &= ~DVB_USB_ADAP_STATE_DVB;
 	}
 	return 0;
@@ -305,9 +305,9 @@ int dvb_usb_adapter_frontend_init(struct dvb_usb_adapter *adap)
 		adap->fe_adap[i].fe_sleep = adap->fe_adap[i].fe->ops.sleep;
 		adap->fe_adap[i].fe->ops.sleep = dvb_usb_fe_sleep;
 
-		if (dvb_register_frontend(&adap->dvb_adap, adap->fe_adap[i].fe)) {
+		if (mediatree_dvb_register_frontend(&adap->dvb_adap, adap->fe_adap[i].fe)) {
 			err("Frontend %d registration failed.", i);
-			dvb_frontend_detach(adap->fe_adap[i].fe);
+			mediatree_dvb_frontend_detach(adap->fe_adap[i].fe);
 			adap->fe_adap[i].fe = NULL;
 			/* In error case, do not try register more FEs,
 			 * still leaving already registered FEs alive. */
@@ -340,8 +340,8 @@ int dvb_usb_adapter_frontend_exit(struct dvb_usb_adapter *adap)
 	/* unregister all given adapter frontends */
 	for (; i >= 0; i--) {
 		if (adap->fe_adap[i].fe != NULL) {
-			dvb_unregister_frontend(adap->fe_adap[i].fe);
-			dvb_frontend_detach(adap->fe_adap[i].fe);
+			mediatree_dvb_unregister_frontend(adap->fe_adap[i].fe);
+			mediatree_dvb_frontend_detach(adap->fe_adap[i].fe);
 		}
 	}
 	adap->num_frontends_initialized = 0;
diff --git a/drivers/media/usb/dvb-usb/dvb-usb-urb.c b/drivers/media/usb/dvb-usb/dvb-usb-urb.c
index 2aabf90..8b29431 100644
--- a/drivers/media/usb/dvb-usb/dvb-usb-urb.c
+++ b/drivers/media/usb/dvb-usb/dvb-usb-urb.c
@@ -71,14 +71,14 @@ static void dvb_usb_data_complete(struct usb_data_stream *stream, u8 *buffer, si
 {
 	struct dvb_usb_adapter *adap = stream->user_priv;
 	if (adap->feedcount > 0 && adap->state & DVB_USB_ADAP_STATE_DVB)
-		dvb_dmx_swfilter(&adap->demux, buffer, length);
+		mediatree_dvb_dmx_swfilter(&adap->demux, buffer, length);
 }
 
 static void dvb_usb_data_complete_204(struct usb_data_stream *stream, u8 *buffer, size_t length)
 {
 	struct dvb_usb_adapter *adap = stream->user_priv;
 	if (adap->feedcount > 0 && adap->state & DVB_USB_ADAP_STATE_DVB)
-		dvb_dmx_swfilter_204(&adap->demux, buffer, length);
+		mediatree_dvb_dmx_swfilter_204(&adap->demux, buffer, length);
 }
 
 static void dvb_usb_data_complete_raw(struct usb_data_stream *stream,
@@ -86,7 +86,7 @@ static void dvb_usb_data_complete_raw(struct usb_data_stream *stream,
 {
 	struct dvb_usb_adapter *adap = stream->user_priv;
 	if (adap->feedcount > 0 && adap->state & DVB_USB_ADAP_STATE_DVB)
-		dvb_dmx_swfilter_raw(&adap->demux, buffer, length);
+		mediatree_dvb_dmx_swfilter_raw(&adap->demux, buffer, length);
 }
 
 int dvb_usb_adapter_stream_init(struct dvb_usb_adapter *adap)
diff --git a/drivers/media/usb/dvb-usb/dw2102.c b/drivers/media/usb/dvb-usb/dw2102.c
index ca75ebd..4919360 100644
--- a/drivers/media/usb/dvb-usb/dw2102.c
+++ b/drivers/media/usb/dvb-usb/dw2102.c
@@ -1653,13 +1653,13 @@ static int tt_s2_4600_frontend_attach(struct dvb_usb_adapter *adap)
 	client = i2c_new_client_device(i2c_adapter, &board_info);
 
 	if (!i2c_client_has_driver(client)) {
-		dvb_frontend_detach(adap->fe_adap[0].fe);
+		mediatree_dvb_frontend_detach(adap->fe_adap[0].fe);
 		return -ENODEV;
 	}
 
 	if (!try_module_get(client->dev.driver->owner)) {
 		i2c_unregister_device(client);
-		dvb_frontend_detach(adap->fe_adap[0].fe);
+		mediatree_dvb_frontend_detach(adap->fe_adap[0].fe);
 		return -ENODEV;
 	}
 
diff --git a/drivers/media/usb/dvb-usb/pctv452e.c b/drivers/media/usb/dvb-usb/pctv452e.c
index 9b78b40..2cab6b4 100644
--- a/drivers/media/usb/dvb-usb/pctv452e.c
+++ b/drivers/media/usb/dvb-usb/pctv452e.c
@@ -369,7 +369,7 @@ static void tt3650_ci_uninit(struct dvb_usb_device *d)
 	/* Error ignored. */
 	tt3650_ci_set_video_port(&state->ca, /* slot */ 0, /* enable */ 0);
 
-	dvb_ca_en50221_release(&state->ca);
+	mediatree_dvb_ca_en50221_release(&state->ca);
 
 	memset(&state->ca, 0, sizeof(state->ca));
 }
@@ -395,7 +395,7 @@ static int tt3650_ci_init(struct dvb_usb_adapter *a)
 	state->ca.poll_slot_status = tt3650_ci_poll_slot_status;
 	state->ca.data = d;
 
-	ret = dvb_ca_en50221_init(&a->dvb_adap,
+	ret = mediatree_dvb_ca_en50221_init(&a->dvb_adap,
 				   &state->ca,
 				   /* flags */ 0,
 				   /* n_slots */ 1);
diff --git a/drivers/media/usb/dvb-usb/technisat-usb2.c b/drivers/media/usb/dvb-usb/technisat-usb2.c
index a9ed26c..e8c7be1 100644
--- a/drivers/media/usb/dvb-usb/technisat-usb2.c
+++ b/drivers/media/usb/dvb-usb/technisat-usb2.c
@@ -570,7 +570,7 @@ static int technisat_usb2_frontend_attach(struct dvb_usb_adapter *a)
 				a->dev->desc->name,
 				sizeof(a->fe_adap[0].fe->ops.info.name));
 		} else {
-			dvb_frontend_detach(a->fe_adap[0].fe);
+			mediatree_dvb_frontend_detach(a->fe_adap[0].fe);
 			a->fe_adap[0].fe = NULL;
 		}
 	}
diff --git a/drivers/media/usb/dvb-usb/ttusb2.c b/drivers/media/usb/dvb-usb/ttusb2.c
index 294274f..efd3029 100644
--- a/drivers/media/usb/dvb-usb/ttusb2.c
+++ b/drivers/media/usb/dvb-usb/ttusb2.c
@@ -324,7 +324,7 @@ static void tt3650_ci_uninit(struct dvb_usb_device *d)
 	if (NULL == state->ca.data)
 		return;
 
-	dvb_ca_en50221_release(&state->ca);
+	mediatree_dvb_ca_en50221_release(&state->ca);
 
 	memset(&state->ca, 0, sizeof(state->ca));
 }
@@ -350,7 +350,7 @@ static int tt3650_ci_init(struct dvb_usb_adapter *a)
 	state->ca.poll_slot_status = tt3650_ci_poll_slot_status;
 	state->ca.data = d;
 
-	ret = dvb_ca_en50221_init(&a->dvb_adap,
+	ret = mediatree_dvb_ca_en50221_init(&a->dvb_adap,
 				  &state->ca,
 				  /* flags */ 0,
 				  /* n_slots */ 1);
diff --git a/drivers/media/usb/em28xx/em28xx-dvb.c b/drivers/media/usb/em28xx/em28xx-dvb.c
index 9530c41..5fae265 100644
--- a/drivers/media/usb/em28xx/em28xx-dvb.c
+++ b/drivers/media/usb/em28xx/em28xx-dvb.c
@@ -174,7 +174,7 @@ static inline int em28xx_dvb_urb_data_copy(struct em28xx *dev, struct urb *urb)
 			}
 			if (!urb->actual_length)
 				continue;
-			dvb_dmx_swfilter(&dev->dvb->demux, urb->transfer_buffer,
+			mediatree_dvb_dmx_swfilter(&dev->dvb->demux, urb->transfer_buffer,
 					 urb->actual_length);
 		} else {
 			if (urb->iso_frame_desc[i].status < 0) {
@@ -185,7 +185,7 @@ static inline int em28xx_dvb_urb_data_copy(struct em28xx *dev, struct urb *urb)
 			}
 			if (!urb->iso_frame_desc[i].actual_length)
 				continue;
-			dvb_dmx_swfilter(&dev->dvb->demux,
+			mediatree_dvb_dmx_swfilter(&dev->dvb->demux,
 					 urb->transfer_buffer +
 					 urb->iso_frame_desc[i].offset,
 					 urb->iso_frame_desc[i].actual_length);
@@ -962,7 +962,7 @@ static noinline_for_stack int em28xx_attach_xc3028(u8 addr, struct em28xx *dev)
 	fe = dvb_attach(xc2028_attach, dev->dvb->fe[0], &cfg);
 	if (!fe) {
 		dev_err(&dev->intf->dev, "xc3028 attach failed\n");
-		dvb_frontend_detach(dev->dvb->fe[0]);
+		mediatree_dvb_frontend_detach(dev->dvb->fe[0]);
 		dev->dvb->fe[0] = NULL;
 		return -EINVAL;
 	}
@@ -983,12 +983,12 @@ static int em28xx_register_dvb(struct em28xx_dvb *dvb, struct module *module,
 	mutex_init(&dvb->lock);
 
 	/* register adapter */
-	result = dvb_register_adapter(&dvb->adapter,
+	result = mediatree_dvb_register_adapter(&dvb->adapter,
 				      dev_name(&dev->intf->dev), module,
 				      device, adapter_nr);
 	if (result < 0) {
 		dev_warn(&dev->intf->dev,
-			 "dvb_register_adapter failed (errno = %d)\n",
+			 "mediatree_dvb_register_adapter failed (errno = %d)\n",
 			 result);
 		goto fail_adapter;
 	}
@@ -1004,20 +1004,20 @@ static int em28xx_register_dvb(struct em28xx_dvb *dvb, struct module *module,
 	dvb->adapter.priv = &dev->i2c_bus[dev->def_i2c_bus];
 
 	/* register frontend */
-	result = dvb_register_frontend(&dvb->adapter, dvb->fe[0]);
+	result = mediatree_dvb_register_frontend(&dvb->adapter, dvb->fe[0]);
 	if (result < 0) {
 		dev_warn(&dev->intf->dev,
-			 "dvb_register_frontend failed (errno = %d)\n",
+			 "mediatree_dvb_register_frontend failed (errno = %d)\n",
 			 result);
 		goto fail_frontend0;
 	}
 
 	/* register 2nd frontend */
 	if (dvb->fe[1]) {
-		result = dvb_register_frontend(&dvb->adapter, dvb->fe[1]);
+		result = mediatree_dvb_register_frontend(&dvb->adapter, dvb->fe[1]);
 		if (result < 0) {
 			dev_warn(&dev->intf->dev,
-				 "2nd dvb_register_frontend failed (errno = %d)\n",
+				 "2nd mediatree_dvb_register_frontend failed (errno = %d)\n",
 				 result);
 			goto fail_frontend1;
 		}
@@ -1033,10 +1033,10 @@ static int em28xx_register_dvb(struct em28xx_dvb *dvb, struct module *module,
 	dvb->demux.start_feed = em28xx_start_feed;
 	dvb->demux.stop_feed  = em28xx_stop_feed;
 
-	result = dvb_dmx_init(&dvb->demux);
+	result = mediatree_dvb_dmx_init(&dvb->demux);
 	if (result < 0) {
 		dev_warn(&dev->intf->dev,
-			 "dvb_dmx_init failed (errno = %d)\n",
+			 "mediatree_dvb_dmx_init failed (errno = %d)\n",
 			 result);
 		goto fail_dmx;
 	}
@@ -1044,10 +1044,10 @@ static int em28xx_register_dvb(struct em28xx_dvb *dvb, struct module *module,
 	dvb->dmxdev.filternum    = 256;
 	dvb->dmxdev.demux        = &dvb->demux.dmx;
 	dvb->dmxdev.capabilities = 0;
-	result = dvb_dmxdev_init(&dvb->dmxdev, &dvb->adapter);
+	result = mediatree_dvb_dmxdev_init(&dvb->dmxdev, &dvb->adapter);
 	if (result < 0) {
 		dev_warn(&dev->intf->dev,
-			 "dvb_dmxdev_init failed (errno = %d)\n",
+			 "mediatree_dvb_dmxdev_init failed (errno = %d)\n",
 			 result);
 		goto fail_dmxdev;
 	}
@@ -1079,7 +1079,7 @@ static int em28xx_register_dvb(struct em28xx_dvb *dvb, struct module *module,
 	}
 
 	/* register network adapter */
-	dvb_net_init(&dvb->adapter, &dvb->net, &dvb->demux.dmx);
+	mediatree_dvb_net_init(&dvb->adapter, &dvb->net, &dvb->demux.dmx);
 
 	/* If the analog part won't create RF connectors, DVB will do it */
 	if (!dev->has_video || dev->tuner_type == TUNER_ABSENT)
@@ -1092,43 +1092,43 @@ static int em28xx_register_dvb(struct em28xx_dvb *dvb, struct module *module,
 	return 0;
 
 fail_create_graph:
-	dvb_net_release(&dvb->net);
+	mediatree_dvb_net_release(&dvb->net);
 fail_fe_conn:
 	dvb->demux.dmx.remove_frontend(&dvb->demux.dmx, &dvb->fe_mem);
 fail_fe_mem:
 	dvb->demux.dmx.remove_frontend(&dvb->demux.dmx, &dvb->fe_hw);
 fail_fe_hw:
-	dvb_dmxdev_release(&dvb->dmxdev);
+	mediatree_dvb_dmxdev_release(&dvb->dmxdev);
 fail_dmxdev:
-	dvb_dmx_release(&dvb->demux);
+	mediatree_dvb_dmx_release(&dvb->demux);
 fail_dmx:
 	if (dvb->fe[1])
-		dvb_unregister_frontend(dvb->fe[1]);
-	dvb_unregister_frontend(dvb->fe[0]);
+		mediatree_dvb_unregister_frontend(dvb->fe[1]);
+	mediatree_dvb_unregister_frontend(dvb->fe[0]);
 fail_frontend1:
 	if (dvb->fe[1])
-		dvb_frontend_detach(dvb->fe[1]);
+		mediatree_dvb_frontend_detach(dvb->fe[1]);
 fail_frontend0:
-	dvb_frontend_detach(dvb->fe[0]);
-	dvb_unregister_adapter(&dvb->adapter);
+	mediatree_dvb_frontend_detach(dvb->fe[0]);
+	mediatree_dvb_unregister_adapter(&dvb->adapter);
 fail_adapter:
 	return result;
 }
 
 static void em28xx_unregister_dvb(struct em28xx_dvb *dvb)
 {
-	dvb_net_release(&dvb->net);
+	mediatree_dvb_net_release(&dvb->net);
 	dvb->demux.dmx.remove_frontend(&dvb->demux.dmx, &dvb->fe_mem);
 	dvb->demux.dmx.remove_frontend(&dvb->demux.dmx, &dvb->fe_hw);
-	dvb_dmxdev_release(&dvb->dmxdev);
-	dvb_dmx_release(&dvb->demux);
+	mediatree_dvb_dmxdev_release(&dvb->dmxdev);
+	mediatree_dvb_dmx_release(&dvb->demux);
 	if (dvb->fe[1])
-		dvb_unregister_frontend(dvb->fe[1]);
-	dvb_unregister_frontend(dvb->fe[0]);
+		mediatree_dvb_unregister_frontend(dvb->fe[1]);
+	mediatree_dvb_unregister_frontend(dvb->fe[0]);
 	if (dvb->fe[1] && !dvb->dont_attach_fe1)
-		dvb_frontend_detach(dvb->fe[1]);
-	dvb_frontend_detach(dvb->fe[0]);
-	dvb_unregister_adapter(&dvb->adapter);
+		mediatree_dvb_frontend_detach(dvb->fe[1]);
+	mediatree_dvb_frontend_detach(dvb->fe[0]);
+	mediatree_dvb_unregister_adapter(&dvb->adapter);
 }
 
 static int em28174_dvb_init_pctv_460e(struct em28xx *dev)
@@ -1678,7 +1678,7 @@ static int em28xx_dvb_init(struct em28xx *dev)
 		if (!dvb_attach(tda18271_attach, dvb->fe[0], 0x60,
 				&dev->i2c_adap[dev->def_i2c_bus],
 				&kworld_a340_config)) {
-			dvb_frontend_detach(dvb->fe[0]);
+			mediatree_dvb_frontend_detach(dvb->fe[0]);
 			result = -EINVAL;
 			goto out_free;
 		}
@@ -1698,7 +1698,7 @@ static int em28xx_dvb_init(struct em28xx *dev)
 					0x60,
 					&dev->i2c_adap[dev->def_i2c_bus],
 					&em28xx_cxd2820r_tda18271_config)) {
-				dvb_frontend_detach(dvb->fe[0]);
+				mediatree_dvb_frontend_detach(dvb->fe[0]);
 				result = -EINVAL;
 				goto out_free;
 			}
@@ -1810,7 +1810,7 @@ static int em28xx_dvb_init(struct em28xx *dev)
 			if (!dvb_attach(tda18271_attach, dvb->fe[0], 0x60,
 					&dev->i2c_adap[dev->def_i2c_bus],
 					&em28xx_cxd2820r_tda18271_config)) {
-				dvb_frontend_detach(dvb->fe[0]);
+				mediatree_dvb_frontend_detach(dvb->fe[0]);
 				result = -EINVAL;
 				goto out_free;
 			}
@@ -1829,7 +1829,7 @@ static int em28xx_dvb_init(struct em28xx *dev)
 			if (!dvb_attach(tda18271_attach, dvb->fe[0], 0x60,
 					&dev->i2c_adap[dev->def_i2c_bus],
 					&em28xx_cxd2820r_tda18271_config)) {
-				dvb_frontend_detach(dvb->fe[0]);
+				mediatree_dvb_frontend_detach(dvb->fe[0]);
 				result = -EINVAL;
 				goto out_free;
 			}
@@ -1911,7 +1911,7 @@ static int em28xx_dvb_init(struct em28xx *dev)
 							 adapter, 0x60,
 							 &kworld_ub435q_v3_config);
 		if (!dvb->i2c_client_tuner) {
-			dvb_frontend_detach(dvb->fe[0]);
+			mediatree_dvb_frontend_detach(dvb->fe[0]);
 			result = -ENODEV;
 			goto out_free;
 		}
@@ -2090,11 +2090,11 @@ static int em28xx_dvb_suspend(struct em28xx *dev)
 		struct em28xx_dvb *dvb = dev->dvb;
 
 		if (dvb->fe[0]) {
-			ret = dvb_frontend_suspend(dvb->fe[0]);
+			ret = mediatree_dvb_frontend_suspend(dvb->fe[0]);
 			dev_info(&dev->intf->dev, "fe0 suspend %d\n", ret);
 		}
 		if (dvb->fe[1]) {
-			dvb_frontend_suspend(dvb->fe[1]);
+			mediatree_dvb_frontend_suspend(dvb->fe[1]);
 			dev_info(&dev->intf->dev, "fe1 suspend %d\n", ret);
 		}
 	}
@@ -2117,12 +2117,12 @@ static int em28xx_dvb_resume(struct em28xx *dev)
 		struct em28xx_dvb *dvb = dev->dvb;
 
 		if (dvb->fe[0]) {
-			ret = dvb_frontend_resume(dvb->fe[0]);
+			ret = mediatree_dvb_frontend_resume(dvb->fe[0]);
 			dev_info(&dev->intf->dev, "fe0 resume %d\n", ret);
 		}
 
 		if (dvb->fe[1]) {
-			ret = dvb_frontend_resume(dvb->fe[1]);
+			ret = mediatree_dvb_frontend_resume(dvb->fe[1]);
 			dev_info(&dev->intf->dev, "fe1 resume %d\n", ret);
 		}
 	}
diff --git a/drivers/media/usb/pvrusb2/pvrusb2-dvb.c b/drivers/media/usb/pvrusb2/pvrusb2-dvb.c
index 6954584..076fc69 100644
--- a/drivers/media/usb/pvrusb2/pvrusb2-dvb.c
+++ b/drivers/media/usb/pvrusb2/pvrusb2-dvb.c
@@ -40,7 +40,7 @@ static int pvr2_dvb_feed_func(struct pvr2_dvb_adapter *adap)
 		if (bp != NULL) {
 			count = pvr2_buffer_get_count(bp);
 			if (count) {
-				dvb_dmx_swfilter(
+				mediatree_dvb_dmx_swfilter(
 					&adap->demux,
 					adap->buffer_storage[
 					    pvr2_buffer_get_id(bp)],
@@ -244,13 +244,13 @@ static int pvr2_dvb_adapter_init(struct pvr2_dvb_adapter *adap)
 {
 	int ret;
 
-	ret = dvb_register_adapter(&adap->dvb_adap, "pvrusb2-dvb",
+	ret = mediatree_dvb_register_adapter(&adap->dvb_adap, "pvrusb2-dvb",
 				   THIS_MODULE/*&hdw->usb_dev->owner*/,
 				   &adap->channel.hdw->usb_dev->dev,
 				   adapter_nr);
 	if (ret < 0) {
 		pvr2_trace(PVR2_TRACE_ERROR_LEGS,
-			   "dvb_register_adapter failed: error %d", ret);
+			   "mediatree_dvb_register_adapter failed: error %d", ret);
 		goto err;
 	}
 	adap->dvb_adap.priv = adap;
@@ -265,10 +265,10 @@ static int pvr2_dvb_adapter_init(struct pvr2_dvb_adapter *adap)
 	adap->demux.stop_feed        = pvr2_dvb_stop_feed;
 	adap->demux.write_to_decoder = NULL;
 
-	ret = dvb_dmx_init(&adap->demux);
+	ret = mediatree_dvb_dmx_init(&adap->demux);
 	if (ret < 0) {
 		pvr2_trace(PVR2_TRACE_ERROR_LEGS,
-			   "dvb_dmx_init failed: error %d", ret);
+			   "mediatree_dvb_dmx_init failed: error %d", ret);
 		goto err_dmx;
 	}
 
@@ -276,21 +276,21 @@ static int pvr2_dvb_adapter_init(struct pvr2_dvb_adapter *adap)
 	adap->dmxdev.demux           = &adap->demux.dmx;
 	adap->dmxdev.capabilities    = 0;
 
-	ret = dvb_dmxdev_init(&adap->dmxdev, &adap->dvb_adap);
+	ret = mediatree_dvb_dmxdev_init(&adap->dmxdev, &adap->dvb_adap);
 	if (ret < 0) {
 		pvr2_trace(PVR2_TRACE_ERROR_LEGS,
-			   "dvb_dmxdev_init failed: error %d", ret);
+			   "mediatree_dvb_dmxdev_init failed: error %d", ret);
 		goto err_dmx_dev;
 	}
 
-	dvb_net_init(&adap->dvb_adap, &adap->dvb_net, &adap->demux.dmx);
+	mediatree_dvb_net_init(&adap->dvb_adap, &adap->dvb_net, &adap->demux.dmx);
 
 	return 0;
 
 err_dmx_dev:
-	dvb_dmx_release(&adap->demux);
+	mediatree_dvb_dmx_release(&adap->demux);
 err_dmx:
-	dvb_unregister_adapter(&adap->dvb_adap);
+	mediatree_dvb_unregister_adapter(&adap->dvb_adap);
 err:
 	return ret;
 }
@@ -298,11 +298,11 @@ err:
 static int pvr2_dvb_adapter_exit(struct pvr2_dvb_adapter *adap)
 {
 	pvr2_trace(PVR2_TRACE_INFO, "unregistering DVB devices");
-	dvb_net_release(&adap->dvb_net);
+	mediatree_dvb_net_release(&adap->dvb_net);
 	adap->demux.dmx.close(&adap->demux.dmx);
-	dvb_dmxdev_release(&adap->dmxdev);
-	dvb_dmx_release(&adap->demux);
-	dvb_unregister_adapter(&adap->dvb_adap);
+	mediatree_dvb_dmxdev_release(&adap->dmxdev);
+	mediatree_dvb_dmx_release(&adap->demux);
+	mediatree_dvb_unregister_adapter(&adap->dvb_adap);
 	return 0;
 }
 
@@ -335,7 +335,7 @@ static int pvr2_dvb_frontend_init(struct pvr2_dvb_adapter *adap)
 	}
 
 	if (dvb_props->frontend_attach(adap) == 0 && adap->fe[0]) {
-		if (dvb_register_frontend(&adap->dvb_adap, adap->fe[0])) {
+		if (mediatree_dvb_register_frontend(&adap->dvb_adap, adap->fe[0])) {
 			pvr2_trace(PVR2_TRACE_ERROR_LEGS,
 				   "frontend registration failed!");
 			ret = -ENODEV;
@@ -367,7 +367,7 @@ static int pvr2_dvb_frontend_init(struct pvr2_dvb_adapter *adap)
 		       &adap->fe[0]->ops.tuner_ops,
 		       sizeof(struct dvb_tuner_ops));
 
-		if (dvb_register_frontend(&adap->dvb_adap, adap->fe[1])) {
+		if (mediatree_dvb_register_frontend(&adap->dvb_adap, adap->fe[1])) {
 			pvr2_trace(PVR2_TRACE_ERROR_LEGS,
 				   "frontend registration failed!");
 			ret = -ENODEV;
@@ -388,12 +388,12 @@ done:
 	return ret;
 
 fail_frontend1:
-	dvb_frontend_detach(adap->fe[1]);
+	mediatree_dvb_frontend_detach(adap->fe[1]);
 	adap->fe[1] = NULL;
 fail_tuner:
-	dvb_unregister_frontend(adap->fe[0]);
+	mediatree_dvb_unregister_frontend(adap->fe[0]);
 fail_frontend0:
-	dvb_frontend_detach(adap->fe[0]);
+	mediatree_dvb_frontend_detach(adap->fe[0]);
 	adap->fe[0] = NULL;
 	dvb_module_release(adap->i2c_client_tuner);
 	dvb_module_release(adap->i2c_client_demod[1]);
@@ -405,13 +405,13 @@ fail_frontend0:
 static int pvr2_dvb_frontend_exit(struct pvr2_dvb_adapter *adap)
 {
 	if (adap->fe[1]) {
-		dvb_unregister_frontend(adap->fe[1]);
-		dvb_frontend_detach(adap->fe[1]);
+		mediatree_dvb_unregister_frontend(adap->fe[1]);
+		mediatree_dvb_frontend_detach(adap->fe[1]);
 		adap->fe[1] = NULL;
 	}
 	if (adap->fe[0]) {
-		dvb_unregister_frontend(adap->fe[0]);
-		dvb_frontend_detach(adap->fe[0]);
+		mediatree_dvb_unregister_frontend(adap->fe[0]);
+		mediatree_dvb_frontend_detach(adap->fe[0]);
 		adap->fe[0] = NULL;
 	}
 
diff --git a/drivers/media/usb/tm6000/tm6000-dvb.c b/drivers/media/usb/tm6000/tm6000-dvb.c
index 8c2725e..bad0f6b 100644
--- a/drivers/media/usb/tm6000/tm6000-dvb.c
+++ b/drivers/media/usb/tm6000/tm6000-dvb.c
@@ -86,7 +86,7 @@ static void tm6000_urb_received(struct urb *urb)
 	}
 
 	if (urb->actual_length > 0)
-		dvb_dmx_swfilter(&dev->dvb->demux, urb->transfer_buffer,
+		mediatree_dvb_dmx_swfilter(&dev->dvb->demux, urb->transfer_buffer,
 						   urb->actual_length);
 
 	if (dev->dvb->streams > 0) {
@@ -261,7 +261,7 @@ static int register_dvb(struct tm6000_core *dev)
 		goto err;
 	}
 
-	ret = dvb_register_adapter(&dvb->adapter, "Trident TVMaster 6000 DVB-T",
+	ret = mediatree_dvb_register_adapter(&dvb->adapter, "Trident TVMaster 6000 DVB-T",
 					THIS_MODULE, &dev->udev->dev, adapter_nr);
 	if (ret < 0) {
 		pr_err("tm6000: couldn't register the adapter!\n");
@@ -279,7 +279,7 @@ static int register_dvb(struct tm6000_core *dev)
 			};
 
 			dvb->frontend->callback = tm6000_tuner_callback;
-			ret = dvb_register_frontend(&dvb->adapter, dvb->frontend);
+			ret = mediatree_dvb_register_frontend(&dvb->adapter, dvb->frontend);
 			if (ret < 0) {
 				printk(KERN_ERR
 					"tm6000: couldn't register frontend\n");
@@ -300,7 +300,7 @@ static int register_dvb(struct tm6000_core *dev)
 			};
 
 			dvb->frontend->callback = tm6000_xc5000_callback;
-			ret = dvb_register_frontend(&dvb->adapter, dvb->frontend);
+			ret = mediatree_dvb_register_frontend(&dvb->adapter, dvb->frontend);
 			if (ret < 0) {
 				printk(KERN_ERR
 					"tm6000: couldn't register frontend\n");
@@ -327,9 +327,9 @@ static int register_dvb(struct tm6000_core *dev)
 	dvb->demux.start_feed = tm6000_start_feed;
 	dvb->demux.stop_feed = tm6000_stop_feed;
 	dvb->demux.write_to_decoder = NULL;
-	ret = dvb_dmx_init(&dvb->demux);
+	ret = mediatree_dvb_dmx_init(&dvb->demux);
 	if (ret < 0) {
-		printk(KERN_ERR "tm6000: dvb_dmx_init failed (errno = %d)\n", ret);
+		printk(KERN_ERR "tm6000: mediatree_dvb_dmx_init failed (errno = %d)\n", ret);
 		goto frontend_err;
 	}
 
@@ -337,23 +337,23 @@ static int register_dvb(struct tm6000_core *dev)
 	dvb->dmxdev.demux = &dev->dvb->demux.dmx;
 	dvb->dmxdev.capabilities = 0;
 
-	ret =  dvb_dmxdev_init(&dvb->dmxdev, &dvb->adapter);
+	ret =  mediatree_dvb_dmxdev_init(&dvb->dmxdev, &dvb->adapter);
 	if (ret < 0) {
-		printk(KERN_ERR "tm6000: dvb_dmxdev_init failed (errno = %d)\n", ret);
+		printk(KERN_ERR "tm6000: mediatree_dvb_dmxdev_init failed (errno = %d)\n", ret);
 		goto dvb_dmx_err;
 	}
 
 	return 0;
 
 dvb_dmx_err:
-	dvb_dmx_release(&dvb->demux);
+	mediatree_dvb_dmx_release(&dvb->demux);
 frontend_err:
 	if (dvb->frontend) {
-		dvb_unregister_frontend(dvb->frontend);
-		dvb_frontend_detach(dvb->frontend);
+		mediatree_dvb_unregister_frontend(dvb->frontend);
+		mediatree_dvb_frontend_detach(dvb->frontend);
 	}
 adapter_err:
-	dvb_unregister_adapter(&dvb->adapter);
+	mediatree_dvb_unregister_adapter(&dvb->adapter);
 err:
 	return ret;
 }
@@ -373,13 +373,13 @@ static void unregister_dvb(struct tm6000_core *dev)
 
 /*	mutex_lock(&tm6000_driver.open_close_mutex); */
 	if (dvb->frontend) {
-		dvb_unregister_frontend(dvb->frontend);
-		dvb_frontend_detach(dvb->frontend);
+		mediatree_dvb_unregister_frontend(dvb->frontend);
+		mediatree_dvb_frontend_detach(dvb->frontend);
 	}
 
-	dvb_dmxdev_release(&dvb->dmxdev);
-	dvb_dmx_release(&dvb->demux);
-	dvb_unregister_adapter(&dvb->adapter);
+	mediatree_dvb_dmxdev_release(&dvb->dmxdev);
+	mediatree_dvb_dmx_release(&dvb->demux);
+	mediatree_dvb_unregister_adapter(&dvb->adapter);
 	mutex_destroy(&dvb->mutex);
 /*	mutex_unlock(&tm6000_driver.open_close_mutex); */
 }
diff --git a/drivers/media/usb/ttusb-budget/dvb-ttusb-budget.c b/drivers/media/usb/ttusb-budget/dvb-ttusb-budget.c
index 3f0c291..3c119db 100644
--- a/drivers/media/usb/ttusb-budget/dvb-ttusb-budget.c
+++ b/drivers/media/usb/ttusb-budget/dvb-ttusb-budget.c
@@ -590,7 +590,7 @@ static void ttusb_process_muxpack(struct ttusb *ttusb, const u8 * muxpack,
 						     188);
 #endif
 		numts++;
-		dvb_dmx_swfilter_packets(&ttusb->dvb_demux, muxpack, 1);
+		mediatree_dvb_dmx_swfilter_packets(&ttusb->dvb_demux, muxpack, 1);
 	} else if (muxpack[0] != 0) {
 		numinvalid++;
 		pr_err("illegal muxpack type %02x\n", muxpack[0]);
@@ -1580,9 +1580,9 @@ static void frontend_init(struct ttusb* ttusb)
 		       le16_to_cpu(ttusb->dev->descriptor.idVendor),
 		       le16_to_cpu(ttusb->dev->descriptor.idProduct));
 	} else {
-		if (dvb_register_frontend(&ttusb->adapter, ttusb->fe)) {
+		if (mediatree_dvb_register_frontend(&ttusb->adapter, ttusb->fe)) {
 			pr_err("Frontend registration failed!\n");
-			dvb_frontend_detach(ttusb->fe);
+			mediatree_dvb_frontend_detach(ttusb->fe);
 			ttusb->fe = NULL;
 		}
 	}
@@ -1634,7 +1634,7 @@ static int ttusb_probe(struct usb_interface *intf, const struct usb_device_id *i
 
 	mutex_unlock(&ttusb->semi2c);
 
-	result = dvb_register_adapter(&ttusb->adapter,
+	result = mediatree_dvb_register_adapter(&ttusb->adapter,
 				      "Technotrend/Hauppauge Nova-USB",
 				      THIS_MODULE, &udev->dev, adapter_nr);
 	if (result < 0) {
@@ -1673,9 +1673,9 @@ static int ttusb_probe(struct usb_interface *intf, const struct usb_device_id *i
 	ttusb->dvb_demux.stop_feed = ttusb_stop_feed;
 	ttusb->dvb_demux.write_to_decoder = NULL;
 
-	result = dvb_dmx_init(&ttusb->dvb_demux);
+	result = mediatree_dvb_dmx_init(&ttusb->dvb_demux);
 	if (result < 0) {
-		pr_err("dvb_dmx_init failed (errno = %d)\n", result);
+		pr_err("mediatree_dvb_dmx_init failed (errno = %d)\n", result);
 		result = -ENODEV;
 		goto err_i2c_del_adapter;
 	}
@@ -1684,16 +1684,16 @@ static int ttusb_probe(struct usb_interface *intf, const struct usb_device_id *i
 	ttusb->dmxdev.demux = &ttusb->dvb_demux.dmx;
 	ttusb->dmxdev.capabilities = 0;
 
-	result = dvb_dmxdev_init(&ttusb->dmxdev, &ttusb->adapter);
+	result = mediatree_dvb_dmxdev_init(&ttusb->dmxdev, &ttusb->adapter);
 	if (result < 0) {
-		pr_err("dvb_dmxdev_init failed (errno = %d)\n",
+		pr_err("mediatree_dvb_dmxdev_init failed (errno = %d)\n",
 		       result);
 		result = -ENODEV;
 		goto err_release_dmx;
 	}
 
-	if (dvb_net_init(&ttusb->adapter, &ttusb->dvbnet, &ttusb->dvb_demux.dmx)) {
-		pr_err("dvb_net_init failed!\n");
+	if (mediatree_dvb_net_init(&ttusb->adapter, &ttusb->dvbnet, &ttusb->dvb_demux.dmx)) {
+		pr_err("mediatree_dvb_net_init failed!\n");
 		result = -ENODEV;
 		goto err_release_dmxdev;
 	}
@@ -1705,13 +1705,13 @@ static int ttusb_probe(struct usb_interface *intf, const struct usb_device_id *i
 	return 0;
 
 err_release_dmxdev:
-	dvb_dmxdev_release(&ttusb->dmxdev);
+	mediatree_dvb_dmxdev_release(&ttusb->dmxdev);
 err_release_dmx:
-	dvb_dmx_release(&ttusb->dvb_demux);
+	mediatree_dvb_dmx_release(&ttusb->dvb_demux);
 err_i2c_del_adapter:
 	i2c_del_adapter(&ttusb->i2c_adap);
 err_unregister_adapter:
-	dvb_unregister_adapter (&ttusb->adapter);
+	mediatree_dvb_unregister_adapter (&ttusb->adapter);
 	ttusb_free_iso_urbs(ttusb);
 	kfree(ttusb);
 	return result;
@@ -1728,15 +1728,15 @@ static void ttusb_disconnect(struct usb_interface *intf)
 	ttusb_stop_iso_xfer(ttusb);
 
 	ttusb->dvb_demux.dmx.close(&ttusb->dvb_demux.dmx);
-	dvb_net_release(&ttusb->dvbnet);
-	dvb_dmxdev_release(&ttusb->dmxdev);
-	dvb_dmx_release(&ttusb->dvb_demux);
+	mediatree_dvb_net_release(&ttusb->dvbnet);
+	mediatree_dvb_dmxdev_release(&ttusb->dmxdev);
+	mediatree_dvb_dmx_release(&ttusb->dvb_demux);
 	if (ttusb->fe != NULL) {
-		dvb_unregister_frontend(ttusb->fe);
-		dvb_frontend_detach(ttusb->fe);
+		mediatree_dvb_unregister_frontend(ttusb->fe);
+		mediatree_dvb_frontend_detach(ttusb->fe);
 	}
 	i2c_del_adapter(&ttusb->i2c_adap);
-	dvb_unregister_adapter(&ttusb->adapter);
+	mediatree_dvb_unregister_adapter(&ttusb->adapter);
 
 	ttusb_free_iso_urbs(ttusb);
 
diff --git a/drivers/media/usb/ttusb-dec/ttusb_dec.c b/drivers/media/usb/ttusb-dec/ttusb_dec.c
index 38822ce..8fc4e47 100644
--- a/drivers/media/usb/ttusb-dec/ttusb_dec.c
+++ b/drivers/media/usb/ttusb-dec/ttusb_dec.c
@@ -1459,11 +1459,11 @@ static int ttusb_dec_init_dvb(struct ttusb_dec *dec)
 
 	dprintk("%s\n", __func__);
 
-	if ((result = dvb_register_adapter(&dec->adapter,
+	if ((result = mediatree_dvb_register_adapter(&dec->adapter,
 					   dec->model_name, THIS_MODULE,
 					   &dec->udev->dev,
 					   adapter_nr)) < 0) {
-		printk("%s: dvb_register_adapter failed: error %d\n",
+		printk("%s: mediatree_dvb_register_adapter failed: error %d\n",
 		       __func__, result);
 
 		return result;
@@ -1478,11 +1478,11 @@ static int ttusb_dec_init_dvb(struct ttusb_dec *dec)
 	dec->demux.stop_feed = ttusb_dec_stop_feed;
 	dec->demux.write_to_decoder = NULL;
 
-	if ((result = dvb_dmx_init(&dec->demux)) < 0) {
-		printk("%s: dvb_dmx_init failed: error %d\n", __func__,
+	if ((result = mediatree_dvb_dmx_init(&dec->demux)) < 0) {
+		printk("%s: mediatree_dvb_dmx_init failed: error %d\n", __func__,
 		       result);
 
-		dvb_unregister_adapter(&dec->adapter);
+		mediatree_dvb_unregister_adapter(&dec->adapter);
 
 		return result;
 	}
@@ -1491,12 +1491,12 @@ static int ttusb_dec_init_dvb(struct ttusb_dec *dec)
 	dec->dmxdev.demux = &dec->demux.dmx;
 	dec->dmxdev.capabilities = 0;
 
-	if ((result = dvb_dmxdev_init(&dec->dmxdev, &dec->adapter)) < 0) {
-		printk("%s: dvb_dmxdev_init failed: error %d\n",
+	if ((result = mediatree_dvb_dmxdev_init(&dec->dmxdev, &dec->adapter)) < 0) {
+		printk("%s: mediatree_dvb_dmxdev_init failed: error %d\n",
 		       __func__, result);
 
-		dvb_dmx_release(&dec->demux);
-		dvb_unregister_adapter(&dec->adapter);
+		mediatree_dvb_dmx_release(&dec->demux);
+		mediatree_dvb_unregister_adapter(&dec->adapter);
 
 		return result;
 	}
@@ -1505,30 +1505,30 @@ static int ttusb_dec_init_dvb(struct ttusb_dec *dec)
 
 	if ((result = dec->demux.dmx.add_frontend(&dec->demux.dmx,
 						  &dec->frontend)) < 0) {
-		printk("%s: dvb_dmx_init failed: error %d\n", __func__,
+		printk("%s: mediatree_dvb_dmx_init failed: error %d\n", __func__,
 		       result);
 
-		dvb_dmxdev_release(&dec->dmxdev);
-		dvb_dmx_release(&dec->demux);
-		dvb_unregister_adapter(&dec->adapter);
+		mediatree_dvb_dmxdev_release(&dec->dmxdev);
+		mediatree_dvb_dmx_release(&dec->demux);
+		mediatree_dvb_unregister_adapter(&dec->adapter);
 
 		return result;
 	}
 
 	if ((result = dec->demux.dmx.connect_frontend(&dec->demux.dmx,
 						      &dec->frontend)) < 0) {
-		printk("%s: dvb_dmx_init failed: error %d\n", __func__,
+		printk("%s: mediatree_dvb_dmx_init failed: error %d\n", __func__,
 		       result);
 
 		dec->demux.dmx.remove_frontend(&dec->demux.dmx, &dec->frontend);
-		dvb_dmxdev_release(&dec->dmxdev);
-		dvb_dmx_release(&dec->demux);
-		dvb_unregister_adapter(&dec->adapter);
+		mediatree_dvb_dmxdev_release(&dec->dmxdev);
+		mediatree_dvb_dmx_release(&dec->demux);
+		mediatree_dvb_unregister_adapter(&dec->adapter);
 
 		return result;
 	}
 
-	dvb_net_init(&dec->adapter, &dec->dvb_net, &dec->demux.dmx);
+	mediatree_dvb_net_init(&dec->adapter, &dec->dvb_net, &dec->demux.dmx);
 
 	return 0;
 }
@@ -1537,17 +1537,17 @@ static void ttusb_dec_exit_dvb(struct ttusb_dec *dec)
 {
 	dprintk("%s\n", __func__);
 
-	dvb_net_release(&dec->dvb_net);
+	mediatree_dvb_net_release(&dec->dvb_net);
 	dec->demux.dmx.close(&dec->demux.dmx);
 	dec->demux.dmx.remove_frontend(&dec->demux.dmx, &dec->frontend);
-	dvb_dmxdev_release(&dec->dmxdev);
-	dvb_dmx_release(&dec->demux);
+	mediatree_dvb_dmxdev_release(&dec->dmxdev);
+	mediatree_dvb_dmx_release(&dec->demux);
 	if (dec->fe) {
-		dvb_unregister_frontend(dec->fe);
+		mediatree_dvb_unregister_frontend(dec->fe);
 		if (dec->fe->ops.release)
 			dec->fe->ops.release(dec->fe);
 	}
-	dvb_unregister_adapter(&dec->adapter);
+	mediatree_dvb_unregister_adapter(&dec->adapter);
 }
 
 static void ttusb_dec_exit_rc(struct ttusb_dec *dec)
@@ -1694,7 +1694,7 @@ static int ttusb_dec_probe(struct usb_interface *intf,
 		       le16_to_cpu(dec->udev->descriptor.idVendor),
 		       le16_to_cpu(dec->udev->descriptor.idProduct));
 	} else {
-		if (dvb_register_frontend(&dec->adapter, dec->fe)) {
+		if (mediatree_dvb_register_frontend(&dec->adapter, dec->fe)) {
 			printk("budget-ci: Frontend registration failed!\n");
 			if (dec->fe->ops.release)
 				dec->fe->ops.release(dec->fe);
diff --git a/drivers/staging/media/av7110/av7110.c b/drivers/staging/media/av7110/av7110.c
index d74ee0e..f6d437b 100644
--- a/drivers/staging/media/av7110/av7110.c
+++ b/drivers/staging/media/av7110/av7110.c
@@ -378,7 +378,7 @@ static void debiirq(struct tasklet_struct *t)
 	switch (type & 0xff) {
 
 	case DATA_TS_RECORD:
-		dvb_dmx_swfilter_packets(&av7110->demux,
+		mediatree_dvb_dmx_swfilter_packets(&av7110->demux,
 					 (const u8 *) av7110->debi_virt,
 					 av7110->debilen / 188);
 		xfer = RX_BUFF;
@@ -541,7 +541,7 @@ static void gpioirq(struct tasklet_struct *t)
 		int avail;
 		struct dvb_ringbuffer *cibuf = &av7110->ci_wbuffer;
 
-		avail = dvb_ringbuffer_avail(cibuf);
+		avail = mediatree_dvb_ringbuffer_avail(cibuf);
 		if (avail <= 2) {
 			iwdebi(av7110, DEBINOSWAP, IRQ_STATE_EXT, 0, 2);
 			iwdebi(av7110, DEBINOSWAP, TX_LEN, 0, 2);
@@ -558,7 +558,7 @@ static void gpioirq(struct tasklet_struct *t)
 		}
 		DVB_RINGBUFFER_SKIP(cibuf, 2);
 
-		dvb_ringbuffer_read(cibuf, av7110->debi_virt, len);
+		mediatree_dvb_ringbuffer_read(cibuf, av7110->debi_virt, len);
 
 		iwdebi(av7110, DEBINOSWAP, TX_LEN, len, 2);
 		iwdebi(av7110, DEBINOSWAP, IRQ_STATE_EXT, len, 2);
@@ -695,9 +695,9 @@ static int dvb_osd_ioctl(struct file *file,
 
 static const struct file_operations dvb_osd_fops = {
 	.owner		= THIS_MODULE,
-	.unlocked_ioctl	= dvb_generic_ioctl,
-	.open		= dvb_generic_open,
-	.release	= dvb_generic_release,
+	.unlocked_ioctl	= mediatree_dvb_generic_ioctl,
+	.open		= mediatree_dvb_generic_open,
+	.release	= mediatree_dvb_generic_release,
 	.llseek		= noop_llseek,
 };
 
@@ -964,8 +964,8 @@ static int av7110_start_feed(struct dvb_demux_feed *feed)
 				       if (feed->pes_type < 2 &&
 					   !(demux->pids[0] & 0x8000) &&
 					   !(demux->pids[1] & 0x8000)) {
-					       dvb_ringbuffer_flush_spinlock_wakeup(&av7110->avout);
-					       dvb_ringbuffer_flush_spinlock_wakeup(&av7110->aout);
+					       mediatree_dvb_ringbuffer_flush_spinlock_wakeup(&av7110->avout);
+					       mediatree_dvb_ringbuffer_flush_spinlock_wakeup(&av7110->aout);
 					       ret = av7110_av_start_play(av7110,RP_AV);
 					       if (!ret)
 						       demux->playing = 1;
@@ -1262,11 +1262,11 @@ static void vpeirq(struct tasklet_struct *t)
 
 	if (newdma > olddma)
 		/* no wraparound, dump olddma..newdma */
-		dvb_dmx_swfilter_packets(demux, mem + olddma, (newdma - olddma) / 188);
+		mediatree_dvb_dmx_swfilter_packets(demux, mem + olddma, (newdma - olddma) / 188);
 	else {
 		/* wraparound, dump olddma..buflen and 0..newdma */
-		dvb_dmx_swfilter_packets(demux, mem + olddma, (TS_BUFLEN - olddma) / 188);
-		dvb_dmx_swfilter_packets(demux, mem, newdma / 188);
+		mediatree_dvb_dmx_swfilter_packets(demux, mem + olddma, (TS_BUFLEN - olddma) / 188);
+		mediatree_dvb_dmx_swfilter_packets(demux, mem, newdma / 188);
 	}
 }
 
@@ -1296,14 +1296,14 @@ static int av7110_register(struct av7110 *av7110)
 	dvbdemux->dmx.capabilities = (DMX_TS_FILTERING | DMX_SECTION_FILTERING |
 				      DMX_MEMORY_BASED_FILTERING);
 
-	dvb_dmx_init(&av7110->demux);
+	mediatree_dvb_dmx_init(&av7110->demux);
 	av7110->demux.dmx.get_stc = dvb_get_stc;
 
 	av7110->dmxdev.filternum = (av7110->full_ts) ? 256 : 32;
 	av7110->dmxdev.demux = &dvbdemux->dmx;
 	av7110->dmxdev.capabilities = 0;
 
-	dvb_dmxdev_init(&av7110->dmxdev, &av7110->dvb_adapter);
+	mediatree_dvb_dmxdev_init(&av7110->dmxdev, &av7110->dvb_adapter);
 
 	av7110->hw_frontend.source = DMX_FRONTEND_0;
 
@@ -1328,11 +1328,11 @@ static int av7110_register(struct av7110 *av7110)
 	av7110_ca_register(av7110);
 
 #ifdef CONFIG_DVB_AV7110_OSD
-	dvb_register_device(&av7110->dvb_adapter, &av7110->osd_dev,
+	mediatree_dvb_register_device(&av7110->dvb_adapter, &av7110->osd_dev,
 			    &dvbdev_osd, av7110, DVB_DEVICE_OSD, 0);
 #endif
 
-	dvb_net_init(&av7110->dvb_adapter, &av7110->dvb_net, &dvbdemux->dmx);
+	mediatree_dvb_net_init(&av7110->dvb_adapter, &av7110->dvb_net, &dvbdemux->dmx);
 
 	if (budgetpatch) {
 		/* initialize software demux1 without its own frontend
@@ -1349,15 +1349,15 @@ static int av7110_register(struct av7110 *av7110)
 		dvbdemux1->dmx.capabilities = (DMX_TS_FILTERING | DMX_SECTION_FILTERING |
 					       DMX_MEMORY_BASED_FILTERING);
 
-		dvb_dmx_init(&av7110->demux1);
+		mediatree_dvb_dmx_init(&av7110->demux1);
 
 		av7110->dmxdev1.filternum = 256;
 		av7110->dmxdev1.demux = &dvbdemux1->dmx;
 		av7110->dmxdev1.capabilities = 0;
 
-		dvb_dmxdev_init(&av7110->dmxdev1, &av7110->dvb_adapter);
+		mediatree_dvb_dmxdev_init(&av7110->dmxdev1, &av7110->dvb_adapter);
 
-		dvb_net_init(&av7110->dvb_adapter, &av7110->dvb_net1, &dvbdemux1->dmx);
+		mediatree_dvb_net_init(&av7110->dvb_adapter, &av7110->dvb_net1, &dvbdemux1->dmx);
 		printk("dvb-ttpci: additional demux1 for budget-patch registered\n");
 	}
 	return 0;
@@ -1375,26 +1375,26 @@ static void dvb_unregister(struct av7110 *av7110)
 		return;
 
 	if (budgetpatch) {
-		dvb_net_release(&av7110->dvb_net1);
+		mediatree_dvb_net_release(&av7110->dvb_net1);
 		dvbdemux->dmx.close(&dvbdemux1->dmx);
-		dvb_dmxdev_release(&av7110->dmxdev1);
-		dvb_dmx_release(&av7110->demux1);
+		mediatree_dvb_dmxdev_release(&av7110->dmxdev1);
+		mediatree_dvb_dmx_release(&av7110->demux1);
 	}
 
-	dvb_net_release(&av7110->dvb_net);
+	mediatree_dvb_net_release(&av7110->dvb_net);
 
 	dvbdemux->dmx.close(&dvbdemux->dmx);
 	dvbdemux->dmx.remove_frontend(&dvbdemux->dmx, &av7110->hw_frontend);
 	dvbdemux->dmx.remove_frontend(&dvbdemux->dmx, &av7110->mem_frontend);
 
-	dvb_dmxdev_release(&av7110->dmxdev);
-	dvb_dmx_release(&av7110->demux);
+	mediatree_dvb_dmxdev_release(&av7110->dmxdev);
+	mediatree_dvb_dmx_release(&av7110->demux);
 
 	if (av7110->fe != NULL) {
-		dvb_unregister_frontend(av7110->fe);
-		dvb_frontend_detach(av7110->fe);
+		mediatree_dvb_unregister_frontend(av7110->fe);
+		mediatree_dvb_frontend_detach(av7110->fe);
 	}
-	dvb_unregister_device(av7110->osd_dev);
+	mediatree_dvb_unregister_device(av7110->osd_dev);
 	av7110_av_unregister(av7110);
 	av7110_ca_unregister(av7110);
 }
@@ -2274,10 +2274,10 @@ static int frontend_init(struct av7110 *av7110)
 		FE_FUNC_OVERRIDE(av7110->fe->ops.dishnetwork_send_legacy_command, av7110->fe_dishnetwork_send_legacy_command, av7110_fe_dishnetwork_send_legacy_command);
 		FE_FUNC_OVERRIDE(av7110->fe->ops.set_frontend, av7110->fe_set_frontend, av7110_fe_set_frontend);
 
-		ret = dvb_register_frontend(&av7110->dvb_adapter, av7110->fe);
+		ret = mediatree_dvb_register_frontend(&av7110->dvb_adapter, av7110->fe);
 		if (ret < 0) {
 			printk("av7110: Frontend registration failed!\n");
-			dvb_frontend_detach(av7110->fe);
+			mediatree_dvb_frontend_detach(av7110->fe);
 			av7110->fe = NULL;
 		}
 	}
@@ -2459,7 +2459,7 @@ static int av7110_attach(struct saa7146_dev* dev,
 	if (ret < 0)
 		goto err_kfree_0;
 
-	ret = dvb_register_adapter(&av7110->dvb_adapter, av7110->card_name,
+	ret = mediatree_dvb_register_adapter(&av7110->dvb_adapter, av7110->card_name,
 				   THIS_MODULE, &dev->pci->dev, adapter_nr);
 	if (ret < 0)
 		goto err_put_firmware_1;
@@ -2736,7 +2736,7 @@ err_saa71466_vfree_4:
 err_i2c_del_3:
 	i2c_del_adapter(&av7110->i2c_adap);
 err_dvb_unregister_adapter_2:
-	dvb_unregister_adapter(&av7110->dvb_adapter);
+	mediatree_dvb_unregister_adapter(&av7110->dvb_adapter);
 err_put_firmware_1:
 	put_firmware(av7110);
 err_kfree_0:
@@ -2787,7 +2787,7 @@ static int av7110_detach(struct saa7146_dev* saa)
 
 	i2c_del_adapter(&av7110->i2c_adap);
 
-	dvb_unregister_adapter (&av7110->dvb_adapter);
+	mediatree_dvb_unregister_adapter (&av7110->dvb_adapter);
 
 	av7110_num--;
 
diff --git a/drivers/staging/media/av7110/av7110_av.c b/drivers/staging/media/av7110/av7110_av.c
index 91f4866..19a93d1 100644
--- a/drivers/staging/media/av7110/av7110_av.c
+++ b/drivers/staging/media/av7110/av7110_av.c
@@ -229,7 +229,7 @@ int av7110_pes_play(void *dest, struct dvb_ringbuffer *buf, int dlen)
 		return -1;
 	}
 	while (1) {
-		len = dvb_ringbuffer_avail(buf);
+		len = mediatree_dvb_ringbuffer_avail(buf);
 		if (len < 6) {
 			wake_up(&buf->queue);
 			return -1;
@@ -255,7 +255,7 @@ int av7110_pes_play(void *dest, struct dvb_ringbuffer *buf, int dlen)
 		return -1;
 	}
 
-	dvb_ringbuffer_read(buf, dest, (size_t) blen);
+	mediatree_dvb_ringbuffer_read(buf, dest, (size_t) blen);
 
 	dprintk(2, "pread=0x%08lx, pwrite=0x%08lx\n",
 	       (unsigned long) buf->pread, (unsigned long) buf->pwrite);
@@ -389,15 +389,15 @@ static inline long aux_ring_buffer_write(struct dvb_ringbuffer *rbuf,
 	int free;
 
 	while (todo > 0) {
-		if (dvb_ringbuffer_free(rbuf) < 2048) {
+		if (mediatree_dvb_ringbuffer_free(rbuf) < 2048) {
 			if (wait_event_interruptible(rbuf->queue,
-						     (dvb_ringbuffer_free(rbuf) >= 2048)))
+						     (mediatree_dvb_ringbuffer_free(rbuf) >= 2048)))
 				return count - todo;
 		}
-		free = dvb_ringbuffer_free(rbuf);
+		free = mediatree_dvb_ringbuffer_free(rbuf);
 		if (free > todo)
 			free = todo;
-		dvb_ringbuffer_write(rbuf, buf, free);
+		mediatree_dvb_ringbuffer_write(rbuf, buf, free);
 		todo -= free;
 		buf += free;
 	}
@@ -426,7 +426,7 @@ static void play_audio_cb(u8 *buf, int count, void *priv)
 }
 
 
-#define FREE_COND_TS (dvb_ringbuffer_free(rb) >= 4096)
+#define FREE_COND_TS (mediatree_dvb_ringbuffer_free(rb) >= 4096)
 
 static ssize_t ts_play(struct av7110 *av7110, const char __user *buf,
 		       unsigned long count, int nonblock, int type)
@@ -464,8 +464,8 @@ static ssize_t ts_play(struct av7110 *av7110, const char __user *buf,
 }
 
 
-#define FREE_COND (dvb_ringbuffer_free(&av7110->avout) >= 20 * 1024 && \
-		   dvb_ringbuffer_free(&av7110->aout) >= 20 * 1024)
+#define FREE_COND (mediatree_dvb_ringbuffer_free(&av7110->avout) >= 20 * 1024 && \
+		   mediatree_dvb_ringbuffer_free(&av7110->aout) >= 20 * 1024)
 
 static ssize_t dvb_play(struct av7110 *av7110, const char __user *buf,
 			unsigned long count, int nonblock, int type)
@@ -538,15 +538,15 @@ static ssize_t dvb_aplay(struct av7110 *av7110, const char __user *buf,
 
 	if (!av7110->kbuf[type])
 		return -ENOBUFS;
-	if (nonblock && dvb_ringbuffer_free(&av7110->aout) < 20 * 1024)
+	if (nonblock && mediatree_dvb_ringbuffer_free(&av7110->aout) < 20 * 1024)
 		return -EWOULDBLOCK;
 
 	while (todo > 0) {
-		if (dvb_ringbuffer_free(&av7110->aout) < 20 * 1024) {
+		if (mediatree_dvb_ringbuffer_free(&av7110->aout) < 20 * 1024) {
 			if (nonblock)
 				return count - todo;
 			if (wait_event_interruptible(av7110->aout.queue,
-					(dvb_ringbuffer_free(&av7110->aout) >= 20 * 1024)))
+					(mediatree_dvb_ringbuffer_free(&av7110->aout) >= 20 * 1024)))
 				return count-todo;
 		}
 		n = todo;
@@ -986,7 +986,7 @@ static __poll_t dvb_audio_poll(struct file *file, poll_table *wait)
 	poll_wait(file, &av7110->aout.queue, wait);
 
 	if (av7110->playing) {
-		if (dvb_ringbuffer_free(&av7110->aout) >= 20 * 1024)
+		if (mediatree_dvb_ringbuffer_free(&av7110->aout) >= 20 * 1024)
 			mask |= (EPOLLOUT | EPOLLWRNORM);
 	} else /* if not playing: may play if asked for */
 		mask = (EPOLLOUT | EPOLLWRNORM);
@@ -1260,7 +1260,7 @@ static int dvb_video_ioctl(struct file *file,
 		struct compat_video_still_picture *pic =
 			(struct compat_video_still_picture *) parg;
 		av7110->videostate.stream_source = VIDEO_SOURCE_MEMORY;
-		dvb_ringbuffer_flush_spinlock_wakeup(&av7110->avout);
+		mediatree_dvb_ringbuffer_flush_spinlock_wakeup(&av7110->avout);
 		ret = play_iframe(av7110, compat_ptr(pic->iFrame),
 				  pic->size, file->f_flags & O_NONBLOCK);
 		break;
@@ -1272,7 +1272,7 @@ static int dvb_video_ioctl(struct file *file,
 		struct video_still_picture *pic =
 			(struct video_still_picture *) parg;
 		av7110->videostate.stream_source = VIDEO_SOURCE_MEMORY;
-		dvb_ringbuffer_flush_spinlock_wakeup(&av7110->avout);
+		mediatree_dvb_ringbuffer_flush_spinlock_wakeup(&av7110->avout);
 		ret = play_iframe(av7110, pic->iFrame, pic->size,
 				  file->f_flags & O_NONBLOCK);
 		break;
@@ -1316,7 +1316,7 @@ static int dvb_video_ioctl(struct file *file,
 		break;
 
 	case VIDEO_CLEAR_BUFFER:
-		dvb_ringbuffer_flush_spinlock_wakeup(&av7110->avout);
+		mediatree_dvb_ringbuffer_flush_spinlock_wakeup(&av7110->avout);
 		av7110_ipack_reset(&av7110->ipack[1]);
 		if (av7110->playing == RP_AV) {
 			ret = av7110_fw_cmd(av7110, COMTYPE_REC_PLAY,
@@ -1470,7 +1470,7 @@ static int dvb_audio_ioctl(struct file *file,
 		break;
 
 	case AUDIO_CLEAR_BUFFER:
-		dvb_ringbuffer_flush_spinlock_wakeup(&av7110->aout);
+		mediatree_dvb_ringbuffer_flush_spinlock_wakeup(&av7110->aout);
 		av7110_ipack_reset(&av7110->ipack[0]);
 		if (av7110->playing == RP_AV)
 			ret = av7110_fw_cmd(av7110, COMTYPE_REC_PLAY,
@@ -1507,12 +1507,12 @@ static int dvb_video_open(struct inode *inode, struct file *file)
 
 	dprintk(2, "av7110:%p, \n", av7110);
 
-	if ((err = dvb_generic_open(inode, file)) < 0)
+	if ((err = mediatree_dvb_generic_open(inode, file)) < 0)
 		return err;
 
 	if ((file->f_flags & O_ACCMODE) != O_RDONLY) {
-		dvb_ringbuffer_flush_spinlock_wakeup(&av7110->aout);
-		dvb_ringbuffer_flush_spinlock_wakeup(&av7110->avout);
+		mediatree_dvb_ringbuffer_flush_spinlock_wakeup(&av7110->aout);
+		mediatree_dvb_ringbuffer_flush_spinlock_wakeup(&av7110->avout);
 		av7110->video_blank = 1;
 		av7110->audiostate.AV_sync_state = 1;
 		av7110->videostate.stream_source = VIDEO_SOURCE_DEMUX;
@@ -1535,20 +1535,20 @@ static int dvb_video_release(struct inode *inode, struct file *file)
 		av7110_av_stop(av7110, RP_VIDEO);
 	}
 
-	return dvb_generic_release(inode, file);
+	return mediatree_dvb_generic_release(inode, file);
 }
 
 static int dvb_audio_open(struct inode *inode, struct file *file)
 {
 	struct dvb_device *dvbdev = file->private_data;
 	struct av7110 *av7110 = dvbdev->priv;
-	int err = dvb_generic_open(inode, file);
+	int err = mediatree_dvb_generic_open(inode, file);
 
 	dprintk(2, "av7110:%p, \n", av7110);
 
 	if (err < 0)
 		return err;
-	dvb_ringbuffer_flush_spinlock_wakeup(&av7110->aout);
+	mediatree_dvb_ringbuffer_flush_spinlock_wakeup(&av7110->aout);
 	av7110->audiostate.stream_source = AUDIO_SOURCE_DEMUX;
 	return 0;
 }
@@ -1561,7 +1561,7 @@ static int dvb_audio_release(struct inode *inode, struct file *file)
 	dprintk(2, "av7110:%p, \n", av7110);
 
 	av7110_av_stop(av7110, RP_AUDIO);
-	return dvb_generic_release(inode, file);
+	return mediatree_dvb_generic_release(inode, file);
 }
 
 
@@ -1573,8 +1573,8 @@ static int dvb_audio_release(struct inode *inode, struct file *file)
 static const struct file_operations dvb_video_fops = {
 	.owner		= THIS_MODULE,
 	.write		= dvb_video_write,
-	.unlocked_ioctl	= dvb_generic_ioctl,
-	.compat_ioctl	= dvb_generic_ioctl,
+	.unlocked_ioctl	= mediatree_dvb_generic_ioctl,
+	.compat_ioctl	= mediatree_dvb_generic_ioctl,
 	.open		= dvb_video_open,
 	.release	= dvb_video_release,
 	.poll		= dvb_video_poll,
@@ -1593,8 +1593,8 @@ static struct dvb_device dvbdev_video = {
 static const struct file_operations dvb_audio_fops = {
 	.owner		= THIS_MODULE,
 	.write		= dvb_audio_write,
-	.unlocked_ioctl	= dvb_generic_ioctl,
-	.compat_ioctl	= dvb_generic_ioctl,
+	.unlocked_ioctl	= mediatree_dvb_generic_ioctl,
+	.compat_ioctl	= mediatree_dvb_generic_ioctl,
 	.open		= dvb_audio_open,
 	.release	= dvb_audio_release,
 	.poll		= dvb_audio_poll,
@@ -1633,10 +1633,10 @@ int av7110_av_register(struct av7110 *av7110)
 	av7110->video_events.overflow = 0;
 	memset(&av7110->video_size, 0, sizeof (video_size_t));
 
-	dvb_register_device(&av7110->dvb_adapter, &av7110->video_dev,
+	mediatree_dvb_register_device(&av7110->dvb_adapter, &av7110->video_dev,
 			    &dvbdev_video, av7110, DVB_DEVICE_VIDEO, 0);
 
-	dvb_register_device(&av7110->dvb_adapter, &av7110->audio_dev,
+	mediatree_dvb_register_device(&av7110->dvb_adapter, &av7110->audio_dev,
 			    &dvbdev_audio, av7110, DVB_DEVICE_AUDIO, 0);
 
 	return 0;
@@ -1644,8 +1644,8 @@ int av7110_av_register(struct av7110 *av7110)
 
 void av7110_av_unregister(struct av7110 *av7110)
 {
-	dvb_unregister_device(av7110->audio_dev);
-	dvb_unregister_device(av7110->video_dev);
+	mediatree_dvb_unregister_device(av7110->audio_dev);
+	mediatree_dvb_unregister_device(av7110->video_dev);
 }
 
 int av7110_av_init(struct av7110 *av7110)
@@ -1665,8 +1665,8 @@ int av7110_av_init(struct av7110 *av7110)
 		ipack->data = av7110;
 	}
 
-	dvb_ringbuffer_init(&av7110->avout, av7110->iobuf, AVOUTLEN);
-	dvb_ringbuffer_init(&av7110->aout, av7110->iobuf + AVOUTLEN, AOUTLEN);
+	mediatree_dvb_ringbuffer_init(&av7110->avout, av7110->iobuf, AVOUTLEN);
+	mediatree_dvb_ringbuffer_init(&av7110->aout, av7110->iobuf + AVOUTLEN, AOUTLEN);
 
 	av7110->kbuf[0] = (u8 *)(av7110->iobuf + AVOUTLEN + AOUTLEN + BMPLEN);
 	av7110->kbuf[1] = av7110->kbuf[0] + 2 * IPACKS;
diff --git a/drivers/staging/media/av7110/av7110_ca.c b/drivers/staging/media/av7110/av7110_ca.c
index c1338e0..33b3647 100644
--- a/drivers/staging/media/av7110/av7110_ca.c
+++ b/drivers/staging/media/av7110/av7110_ca.c
@@ -57,12 +57,12 @@ void CI_handle(struct av7110 *av7110, u8 *data, u16 len)
 
 void ci_get_data(struct dvb_ringbuffer *cibuf, u8 *data, int len)
 {
-	if (dvb_ringbuffer_free(cibuf) < len + 2)
+	if (mediatree_dvb_ringbuffer_free(cibuf) < len + 2)
 		return;
 
 	DVB_RINGBUFFER_WRITE_BYTE(cibuf, len >> 8);
 	DVB_RINGBUFFER_WRITE_BYTE(cibuf, len & 0xff);
-	dvb_ringbuffer_write(cibuf, data, len);
+	mediatree_dvb_ringbuffer_write(cibuf, data, len);
 	wake_up_interruptible(&cibuf->queue);
 }
 
@@ -85,15 +85,15 @@ static int ci_ll_init(struct dvb_ringbuffer *cirbuf, struct dvb_ringbuffer *ciwb
 			}
 			return -ENOMEM;
 		}
-		dvb_ringbuffer_init(*p, data, size);
+		mediatree_dvb_ringbuffer_init(*p, data, size);
 	}
 	return 0;
 }
 
 static void ci_ll_flush(struct dvb_ringbuffer *cirbuf, struct dvb_ringbuffer *ciwbuf)
 {
-	dvb_ringbuffer_flush_spinlock_wakeup(cirbuf);
-	dvb_ringbuffer_flush_spinlock_wakeup(ciwbuf);
+	mediatree_dvb_ringbuffer_flush_spinlock_wakeup(cirbuf);
+	mediatree_dvb_ringbuffer_flush_spinlock_wakeup(ciwbuf);
 }
 
 static void ci_ll_release(struct dvb_ringbuffer *cirbuf, struct dvb_ringbuffer *ciwbuf)
@@ -116,13 +116,13 @@ static int ci_ll_reset(struct dvb_ringbuffer *cibuf, struct file *file,
 			len += 8;
 	}
 
-	if (dvb_ringbuffer_free(cibuf) < len)
+	if (mediatree_dvb_ringbuffer_free(cibuf) < len)
 		return -EBUSY;
 
 	for (i = 0; i < 2; i++) {
 		if (slots & (1 << i)) {
 			msg[2] = i;
-			dvb_ringbuffer_write(cibuf, msg, 8);
+			mediatree_dvb_ringbuffer_write(cibuf, msg, 8);
 			slot[i].flags = 0;
 		}
 	}
@@ -149,21 +149,21 @@ static ssize_t ci_ll_write(struct dvb_ringbuffer *cibuf, struct file *file,
 	if (copy_from_user(page, buf, count))
 		goto out;
 
-	free = dvb_ringbuffer_free(cibuf);
+	free = mediatree_dvb_ringbuffer_free(cibuf);
 	if (count + 2 > free) {
 		res = -EWOULDBLOCK;
 		if (non_blocking)
 			goto out;
 		res = -ERESTARTSYS;
 		if (wait_event_interruptible(cibuf->queue,
-					     (dvb_ringbuffer_free(cibuf) >= count + 2)))
+					     (mediatree_dvb_ringbuffer_free(cibuf) >= count + 2)))
 			goto out;
 	}
 
 	DVB_RINGBUFFER_WRITE_BYTE(cibuf, count >> 8);
 	DVB_RINGBUFFER_WRITE_BYTE(cibuf, count & 0xff);
 
-	res = dvb_ringbuffer_write(cibuf, page, count);
+	res = mediatree_dvb_ringbuffer_write(cibuf, page, count);
 out:
 	free_page((unsigned long)page);
 	return res;
@@ -178,12 +178,12 @@ static ssize_t ci_ll_read(struct dvb_ringbuffer *cibuf, struct file *file,
 
 	if (!cibuf->data || !count)
 		return 0;
-	if (non_blocking && (dvb_ringbuffer_empty(cibuf)))
+	if (non_blocking && (mediatree_dvb_ringbuffer_empty(cibuf)))
 		return -EWOULDBLOCK;
 	if (wait_event_interruptible(cibuf->queue,
-				     !dvb_ringbuffer_empty(cibuf)))
+				     !mediatree_dvb_ringbuffer_empty(cibuf)))
 		return -ERESTARTSYS;
-	avail = dvb_ringbuffer_avail(cibuf);
+	avail = mediatree_dvb_ringbuffer_avail(cibuf);
 	if (avail < 4)
 		return 0;
 	len = DVB_RINGBUFFER_PEEK(cibuf, 0) << 8;
@@ -192,14 +192,14 @@ static ssize_t ci_ll_read(struct dvb_ringbuffer *cibuf, struct file *file,
 		return -EINVAL;
 	DVB_RINGBUFFER_SKIP(cibuf, 2);
 
-	return dvb_ringbuffer_read_user(cibuf, buf, len);
+	return mediatree_dvb_ringbuffer_read_user(cibuf, buf, len);
 }
 
 static int dvb_ca_open(struct inode *inode, struct file *file)
 {
 	struct dvb_device *dvbdev = file->private_data;
 	struct av7110 *av7110 = dvbdev->priv;
-	int err = dvb_generic_open(inode, file);
+	int err = mediatree_dvb_generic_open(inode, file);
 
 	dprintk(8, "av7110:%p\n",av7110);
 
@@ -222,10 +222,10 @@ static __poll_t dvb_ca_poll (struct file *file, poll_table *wait)
 	poll_wait(file, &rbuf->queue, wait);
 	poll_wait(file, &wbuf->queue, wait);
 
-	if (!dvb_ringbuffer_empty(rbuf))
+	if (!mediatree_dvb_ringbuffer_empty(rbuf))
 		mask |= (EPOLLIN | EPOLLRDNORM);
 
-	if (dvb_ringbuffer_free(wbuf) > 1024)
+	if (mediatree_dvb_ringbuffer_free(wbuf) > 1024)
 		mask |= (EPOLLOUT | EPOLLWRNORM);
 
 	return mask;
@@ -342,9 +342,9 @@ static const struct file_operations dvb_ca_fops = {
 	.owner		= THIS_MODULE,
 	.read		= dvb_ca_read,
 	.write		= dvb_ca_write,
-	.unlocked_ioctl	= dvb_generic_ioctl,
+	.unlocked_ioctl	= mediatree_dvb_generic_ioctl,
 	.open		= dvb_ca_open,
-	.release	= dvb_generic_release,
+	.release	= mediatree_dvb_generic_release,
 	.poll		= dvb_ca_poll,
 	.llseek		= default_llseek,
 };
@@ -360,13 +360,13 @@ static struct dvb_device dvbdev_ca = {
 
 int av7110_ca_register(struct av7110 *av7110)
 {
-	return dvb_register_device(&av7110->dvb_adapter, &av7110->ca_dev,
+	return mediatree_dvb_register_device(&av7110->dvb_adapter, &av7110->ca_dev,
 				   &dvbdev_ca, av7110, DVB_DEVICE_CA, 0);
 }
 
 void av7110_ca_unregister(struct av7110 *av7110)
 {
-	dvb_unregister_device(av7110->ca_dev);
+	mediatree_dvb_unregister_device(av7110->ca_dev);
 }
 
 int av7110_ca_init(struct av7110* av7110)
diff --git a/drivers/staging/media/av7110/budget-patch.c b/drivers/staging/media/av7110/budget-patch.c
index d173c8a..4d1e795 100644
--- a/drivers/staging/media/av7110/budget-patch.c
+++ b/drivers/staging/media/av7110/budget-patch.c
@@ -361,9 +361,9 @@ static void frontend_init(struct budget_patch* budget)
 		       budget->dev->pci->subsystem_vendor,
 		       budget->dev->pci->subsystem_device);
 	} else {
-		if (dvb_register_frontend(&budget->dvb_adapter, budget->dvb_frontend)) {
+		if (mediatree_dvb_register_frontend(&budget->dvb_adapter, budget->dvb_frontend)) {
 			printk("budget-av: Frontend registration failed!\n");
-			dvb_frontend_detach(budget->dvb_frontend);
+			mediatree_dvb_frontend_detach(budget->dvb_frontend);
 			budget->dvb_frontend = NULL;
 		}
 	}
@@ -624,8 +624,8 @@ static int budget_patch_detach (struct saa7146_dev* dev)
 	int err;
 
 	if (budget->dvb_frontend) {
-		dvb_unregister_frontend(budget->dvb_frontend);
-		dvb_frontend_detach(budget->dvb_frontend);
+		mediatree_dvb_unregister_frontend(budget->dvb_frontend);
+		mediatree_dvb_frontend_detach(budget->dvb_frontend);
 	}
 	err = ttpci_budget_deinit (budget);
 
diff --git a/include/media/dmxdev.h b/include/media/dmxdev.h
index 63219a6..5636345 100644
--- a/include/media/dmxdev.h
+++ b/include/media/dmxdev.h
@@ -195,19 +195,19 @@ struct dmxdev {
 };
 
 /**
- * dvb_dmxdev_init - initializes a digital TV demux and registers both demux
+ * mediatree_dvb_dmxdev_init - initializes a digital TV demux and registers both demux
  *	and DVR devices.
  *
  * @dmxdev: pointer to &struct dmxdev.
  * @adap: pointer to &struct dvb_adapter.
  */
-int dvb_dmxdev_init(struct dmxdev *dmxdev, struct dvb_adapter *adap);
+int mediatree_dvb_dmxdev_init(struct dmxdev *dmxdev, struct dvb_adapter *adap);
 
 /**
- * dvb_dmxdev_release - releases a digital TV demux and unregisters it.
+ * mediatree_dvb_dmxdev_release - releases a digital TV demux and unregisters it.
  *
  * @dmxdev: pointer to &struct dmxdev.
  */
-void dvb_dmxdev_release(struct dmxdev *dmxdev);
+void mediatree_dvb_dmxdev_release(struct dmxdev *dmxdev);
 
 #endif /* _DMXDEV_H_ */
diff --git a/include/media/dvb_ca_en50221.h b/include/media/dvb_ca_en50221.h
index a1c014b..bfc0076 100644
--- a/include/media/dvb_ca_en50221.h
+++ b/include/media/dvb_ca_en50221.h
@@ -89,37 +89,37 @@ struct dvb_ca_en50221 {
  */
 
 /**
- * dvb_ca_en50221_camchange_irq - A CAMCHANGE IRQ has occurred.
+ * mediatree_dvb_ca_en50221_camchange_irq - A CAMCHANGE IRQ has occurred.
  *
  * @pubca: CA instance.
  * @slot: Slot concerned.
  * @change_type: One of the DVB_CA_CAMCHANGE_* values
  */
-void dvb_ca_en50221_camchange_irq(struct dvb_ca_en50221 *pubca, int slot,
+void mediatree_dvb_ca_en50221_camchange_irq(struct dvb_ca_en50221 *pubca, int slot,
 				  int change_type);
 
 /**
- * dvb_ca_en50221_camready_irq - A CAMREADY IRQ has occurred.
+ * mediatree_dvb_ca_en50221_camready_irq - A CAMREADY IRQ has occurred.
  *
  * @pubca: CA instance.
  * @slot: Slot concerned.
  */
-void dvb_ca_en50221_camready_irq(struct dvb_ca_en50221 *pubca, int slot);
+void mediatree_dvb_ca_en50221_camready_irq(struct dvb_ca_en50221 *pubca, int slot);
 
 /**
- * dvb_ca_en50221_frda_irq - An FR or a DA IRQ has occurred.
+ * mediatree_dvb_ca_en50221_frda_irq - An FR or a DA IRQ has occurred.
  *
  * @ca: CA instance.
  * @slot: Slot concerned.
  */
-void dvb_ca_en50221_frda_irq(struct dvb_ca_en50221 *ca, int slot);
+void mediatree_dvb_ca_en50221_frda_irq(struct dvb_ca_en50221 *ca, int slot);
 
 /*
  * Initialisation/shutdown functions
  */
 
 /**
- * dvb_ca_en50221_init - Initialise a new DVB CA device.
+ * mediatree_dvb_ca_en50221_init - Initialise a new DVB CA device.
  *
  * @dvb_adapter: DVB adapter to attach the new CA device to.
  * @ca: The dvb_ca instance.
@@ -128,15 +128,15 @@ void dvb_ca_en50221_frda_irq(struct dvb_ca_en50221 *ca, int slot);
  *
  * @return 0 on success, nonzero on failure
  */
-int dvb_ca_en50221_init(struct dvb_adapter *dvb_adapter,
+int mediatree_dvb_ca_en50221_init(struct dvb_adapter *dvb_adapter,
 			struct dvb_ca_en50221 *ca, int flags,
 			       int slot_count);
 
 /**
- * dvb_ca_en50221_release - Release a DVB CA device.
+ * mediatree_dvb_ca_en50221_release - Release a DVB CA device.
  *
  * @ca: The associated dvb_ca instance.
  */
-void dvb_ca_en50221_release(struct dvb_ca_en50221 *ca);
+void mediatree_dvb_ca_en50221_release(struct dvb_ca_en50221 *ca);
 
 #endif
diff --git a/include/media/dvb_demux.h b/include/media/dvb_demux.h
index 3b6aeca..5a89af9 100644
--- a/include/media/dvb_demux.h
+++ b/include/media/dvb_demux.h
@@ -242,7 +242,7 @@ struct dvb_demux {
 };
 
 /**
- * dvb_dmx_init - initialize a digital TV demux struct.
+ * mediatree_dvb_dmx_init - initialize a digital TV demux struct.
  *
  * @demux: &struct dvb_demux to be initialized.
  *
@@ -260,14 +260,14 @@ struct dvb_demux {
  *	dvb->demux.feednum    = 256;
  *	dvb->demux.start_feed = driver_start_feed;
  *	dvb->demux.stop_feed  = driver_stop_feed;
- *	ret = dvb_dmx_init(&dvb->demux);
+ *	ret = mediatree_dvb_dmx_init(&dvb->demux);
  *	if (ret < 0)
  *		return ret;
  */
-int dvb_dmx_init(struct dvb_demux *demux);
+int mediatree_dvb_dmx_init(struct dvb_demux *demux);
 
 /**
- * dvb_dmx_release - releases a digital TV demux internal buffers.
+ * mediatree_dvb_dmx_release - releases a digital TV demux internal buffers.
  *
  * @demux: &struct dvb_demux to be released.
  *
@@ -275,10 +275,10 @@ int dvb_dmx_init(struct dvb_demux *demux);
  * releases those data. Please notice that the struct itelf is not
  * released, as it can be embedded on other structs.
  */
-void dvb_dmx_release(struct dvb_demux *demux);
+void mediatree_dvb_dmx_release(struct dvb_demux *demux);
 
 /**
- * dvb_dmx_swfilter_packets - use dvb software filter for a buffer with
+ * mediatree_dvb_dmx_swfilter_packets - use dvb software filter for a buffer with
  *	multiple MPEG-TS packets with 188 bytes each.
  *
  * @demux: pointer to &struct dvb_demux
@@ -292,11 +292,11 @@ void dvb_dmx_release(struct dvb_demux *demux);
  *
  * NOTE: The @buf size should have size equal to ``count * 188``.
  */
-void dvb_dmx_swfilter_packets(struct dvb_demux *demux, const u8 *buf,
+void mediatree_dvb_dmx_swfilter_packets(struct dvb_demux *demux, const u8 *buf,
 			      size_t count);
 
 /**
- * dvb_dmx_swfilter -  use dvb software filter for a buffer with
+ * mediatree_dvb_dmx_swfilter -  use dvb software filter for a buffer with
  *	multiple MPEG-TS packets with 188 bytes each.
  *
  * @demux: pointer to &struct dvb_demux
@@ -311,10 +311,10 @@ void dvb_dmx_swfilter_packets(struct dvb_demux *demux, const u8 *buf,
  *
  * NOTE: The @buf size should have size equal to ``count * 188``.
  */
-void dvb_dmx_swfilter(struct dvb_demux *demux, const u8 *buf, size_t count);
+void mediatree_dvb_dmx_swfilter(struct dvb_demux *demux, const u8 *buf, size_t count);
 
 /**
- * dvb_dmx_swfilter_204 -  use dvb software filter for a buffer with
+ * mediatree_dvb_dmx_swfilter_204 -  use dvb software filter for a buffer with
  *	multiple MPEG-TS packets with 204 bytes each.
  *
  * @demux: pointer to &struct dvb_demux
@@ -329,11 +329,11 @@ void dvb_dmx_swfilter(struct dvb_demux *demux, const u8 *buf, size_t count);
  *
  * NOTE: The @buf size should have size equal to ``count * 204``.
  */
-void dvb_dmx_swfilter_204(struct dvb_demux *demux, const u8 *buf,
+void mediatree_dvb_dmx_swfilter_204(struct dvb_demux *demux, const u8 *buf,
 			  size_t count);
 
 /**
- * dvb_dmx_swfilter_raw -  make the raw data available to userspace without
+ * mediatree_dvb_dmx_swfilter_raw -  make the raw data available to userspace without
  *	filtering
  *
  * @demux: pointer to &struct dvb_demux
@@ -348,7 +348,7 @@ void dvb_dmx_swfilter_204(struct dvb_demux *demux, const u8 *buf,
  * This function relies on &dvb_demux->feed->cb.ts to actually handle the
  * buffer.
  */
-void dvb_dmx_swfilter_raw(struct dvb_demux *demux, const u8 *buf,
+void mediatree_dvb_dmx_swfilter_raw(struct dvb_demux *demux, const u8 *buf,
 			  size_t count);
 
 #endif /* _DVB_DEMUX_H_ */
diff --git a/include/media/dvb_frontend.h b/include/media/dvb_frontend.h
index e7c4487..ab3abba 100644
--- a/include/media/dvb_frontend.h
+++ b/include/media/dvb_frontend.h
@@ -707,39 +707,39 @@ struct dvb_frontend {
 };
 
 /**
- * dvb_register_frontend() - Registers a DVB frontend at the adapter
+ * mediatree_dvb_register_frontend() - Registers a DVB frontend at the adapter
  *
  * @dvb: pointer to &struct dvb_adapter
  * @fe: pointer to &struct dvb_frontend
  *
  * Allocate and initialize the private data needed by the frontend core to
- * manage the frontend and calls dvb_register_device() to register a new
+ * manage the frontend and calls mediatree_dvb_register_device() to register a new
  * frontend. It also cleans the property cache that stores the frontend
  * parameters and selects the first available delivery system.
  */
-int dvb_register_frontend(struct dvb_adapter *dvb,
+int mediatree_dvb_register_frontend(struct dvb_adapter *dvb,
 				 struct dvb_frontend *fe);
 
 /**
- * dvb_unregister_frontend() - Unregisters a DVB frontend
+ * mediatree_dvb_unregister_frontend() - Unregisters a DVB frontend
  *
  * @fe: pointer to &struct dvb_frontend
  *
- * Stops the frontend kthread, calls dvb_unregister_device() and frees the
- * private frontend data allocated by dvb_register_frontend().
+ * Stops the frontend kthread, calls mediatree_dvb_unregister_device() and frees the
+ * private frontend data allocated by mediatree_dvb_register_frontend().
  *
  * NOTE: This function doesn't frees the memory allocated by the demod,
  * by the SEC driver and by the tuner. In order to free it, an explicit call to
- * dvb_frontend_detach() is needed, after calling this function.
+ * mediatree_dvb_frontend_detach() is needed, after calling this function.
  */
-int dvb_unregister_frontend(struct dvb_frontend *fe);
+int mediatree_dvb_unregister_frontend(struct dvb_frontend *fe);
 
 /**
- * dvb_frontend_detach() - Detaches and frees frontend specific data
+ * mediatree_dvb_frontend_detach() - Detaches and frees frontend specific data
  *
  * @fe: pointer to &struct dvb_frontend
  *
- * This function should be called after dvb_unregister_frontend(). It
+ * This function should be called after mediatree_dvb_unregister_frontend(). It
  * calls the SEC, tuner and demod release functions:
  * &dvb_frontend_ops.release_sec, &dvb_frontend_ops.tuner_ops.release,
  * &dvb_frontend_ops.analog_ops.release and &dvb_frontend_ops.release.
@@ -748,10 +748,10 @@ int dvb_unregister_frontend(struct dvb_frontend *fe);
  * the module reference count, needed to allow userspace to remove the
  * previously used DVB frontend modules.
  */
-void dvb_frontend_detach(struct dvb_frontend *fe);
+void mediatree_dvb_frontend_detach(struct dvb_frontend *fe);
 
 /**
- * dvb_frontend_suspend() - Suspends a Digital TV frontend
+ * mediatree_dvb_frontend_suspend() - Suspends a Digital TV frontend
  *
  * @fe: pointer to &struct dvb_frontend
  *
@@ -764,13 +764,13 @@ void dvb_frontend_detach(struct dvb_frontend *fe);
  * It will also call &dvb_frontend_ops.suspend\(\) to put the demod to suspend,
  * if available. Otherwise it will call &dvb_frontend_ops.sleep\(\).
  *
- * The drivers should also call dvb_frontend_suspend\(\) as part of their
+ * The drivers should also call mediatree_dvb_frontend_suspend\(\) as part of their
  * handler for the &device_driver.suspend\(\).
  */
-int dvb_frontend_suspend(struct dvb_frontend *fe);
+int mediatree_dvb_frontend_suspend(struct dvb_frontend *fe);
 
 /**
- * dvb_frontend_resume() - Resumes a Digital TV frontend
+ * mediatree_dvb_frontend_resume() - Resumes a Digital TV frontend
  *
  * @fe: pointer to &struct dvb_frontend
  *
@@ -787,13 +787,13 @@ int dvb_frontend_suspend(struct dvb_frontend *fe);
  * tone are restored to their previous values and wake up the frontend's
  * kthread in order to retune the frontend.
  *
- * The drivers should also call dvb_frontend_resume() as part of their
+ * The drivers should also call mediatree_dvb_frontend_resume() as part of their
  * handler for the &device_driver.resume\(\).
  */
-int dvb_frontend_resume(struct dvb_frontend *fe);
+int mediatree_dvb_frontend_resume(struct dvb_frontend *fe);
 
 /**
- * dvb_frontend_reinitialise() - forces a reinitialisation at the frontend
+ * mediatree_dvb_frontend_reinitialise() - forces a reinitialisation at the frontend
  *
  * @fe: pointer to &struct dvb_frontend
  *
@@ -804,10 +804,10 @@ int dvb_frontend_resume(struct dvb_frontend *fe);
  * It seems to be due to address some special issue with that specific
  * frontend.
  */
-void dvb_frontend_reinitialise(struct dvb_frontend *fe);
+void mediatree_dvb_frontend_reinitialise(struct dvb_frontend *fe);
 
 /**
- * dvb_frontend_sleep_until() - Sleep for the amount of time given by
+ * mediatree_dvb_frontend_sleep_until() - Sleep for the amount of time given by
  *                      add_usec parameter
  *
  * @waketime: pointer to &struct ktime_t
@@ -829,6 +829,6 @@ void dvb_frontend_reinitialise(struct dvb_frontend *fe);
  * be writing a &dvb_frontend_ops.dishnetwork_send_legacy_command\(\) and
  * calling this function directly.
  */
-void dvb_frontend_sleep_until(ktime_t *waketime, u32 add_usec);
+void mediatree_dvb_frontend_sleep_until(ktime_t *waketime, u32 add_usec);
 
 #endif
diff --git a/include/media/dvb_math.h b/include/media/dvb_math.h
index 8690ec4..7c9a548 100644
--- a/include/media/dvb_math.h
+++ b/include/media/dvb_math.h
@@ -21,46 +21,46 @@
 #include <linux/types.h>
 
 /**
- * intlog2 - computes log2 of a value; the result is shifted left by 24 bits
+ * mediatree_intlog2 - computes log2 of a value; the result is shifted left by 24 bits
  *
  * @value: The value (must be != 0)
  *
  * to use rational values you can use the following method:
  *
- *   intlog2(value) = intlog2(value * 2^x) - x * 2^24
+ *   mediatree_intlog2(value) = mediatree_intlog2(value * 2^x) - x * 2^24
  *
  * Some usecase examples:
  *
- *	intlog2(8) will give 3 << 24 = 3 * 2^24
+ *	mediatree_intlog2(8) will give 3 << 24 = 3 * 2^24
  *
- *	intlog2(9) will give 3 << 24 + ... = 3.16... * 2^24
+ *	mediatree_intlog2(9) will give 3 << 24 + ... = 3.16... * 2^24
  *
- *	intlog2(1.5) = intlog2(3) - 2^24 = 0.584... * 2^24
+ *	mediatree_intlog2(1.5) = mediatree_intlog2(3) - 2^24 = 0.584... * 2^24
  *
  *
  * return: log2(value) * 2^24
  */
-extern unsigned int intlog2(u32 value);
+extern unsigned int mediatree_intlog2(u32 value);
 
 /**
- * intlog10 - computes log10 of a value; the result is shifted left by 24 bits
+ * mediatree_intlog10 - computes log10 of a value; the result is shifted left by 24 bits
  *
  * @value: The value (must be != 0)
  *
  * to use rational values you can use the following method:
  *
- *   intlog10(value) = intlog10(value * 10^x) - x * 2^24
+ *   mediatree_intlog10(value) = mediatree_intlog10(value * 10^x) - x * 2^24
  *
  * An usecase example:
  *
- *	intlog10(1000) will give 3 << 24 = 3 * 2^24
+ *	mediatree_intlog10(1000) will give 3 << 24 = 3 * 2^24
  *
- *   due to the implementation intlog10(1000) might be not exactly 3 * 2^24
+ *   due to the implementation mediatree_intlog10(1000) might be not exactly 3 * 2^24
  *
- * look at intlog2 for similar examples
+ * look at mediatree_intlog2 for similar examples
  *
  * return: log10(value) * 2^24
  */
-extern unsigned int intlog10(u32 value);
+extern unsigned int mediatree_intlog10(u32 value);
 
 #endif
diff --git a/include/media/dvb_net.h b/include/media/dvb_net.h
index 5e31d37..13a1f57 100644
--- a/include/media/dvb_net.h
+++ b/include/media/dvb_net.h
@@ -56,21 +56,21 @@ struct dvb_net {
 };
 
 /**
- * dvb_net_init - nitializes a digital TV network device and registers it.
+ * mediatree_dvb_net_init - nitializes a digital TV network device and registers it.
  *
  * @adap:	pointer to &struct dvb_adapter.
  * @dvbnet:	pointer to &struct dvb_net.
  * @dmxdemux:	pointer to &struct dmx_demux.
  */
-int dvb_net_init(struct dvb_adapter *adap, struct dvb_net *dvbnet,
+int mediatree_dvb_net_init(struct dvb_adapter *adap, struct dvb_net *dvbnet,
 		  struct dmx_demux *dmxdemux);
 
 /**
- * dvb_net_release - releases a digital TV network device and unregisters it.
+ * mediatree_dvb_net_release - releases a digital TV network device and unregisters it.
  *
  * @dvbnet:	pointer to &struct dvb_net.
  */
-void dvb_net_release(struct dvb_net *dvbnet);
+void mediatree_dvb_net_release(struct dvb_net *dvbnet);
 
 #else
 
@@ -78,11 +78,11 @@ struct dvb_net {
 	struct dvb_device *dvbdev;
 };
 
-static inline void dvb_net_release(struct dvb_net *dvbnet)
+static inline void mediatree_dvb_net_release(struct dvb_net *dvbnet)
 {
 }
 
-static inline int dvb_net_init(struct dvb_adapter *adap,
+static inline int mediatree_dvb_net_init(struct dvb_adapter *adap,
 			       struct dvb_net *dvbnet, struct dmx_demux *dmx)
 {
 	return 0;
diff --git a/include/media/dvb_ringbuffer.h b/include/media/dvb_ringbuffer.h
index 8ed6bcc..7f9e0d6 100644
--- a/include/media/dvb_ringbuffer.h
+++ b/include/media/dvb_ringbuffer.h
@@ -52,39 +52,39 @@ struct dvb_ringbuffer {
 #define DVB_RINGBUFFER_PKTHDRSIZE 3
 
 /**
- * dvb_ringbuffer_init - initialize ring buffer, lock and queue
+ * mediatree_dvb_ringbuffer_init - initialize ring buffer, lock and queue
  *
  * @rbuf: pointer to struct dvb_ringbuffer
  * @data: pointer to the buffer where the data will be stored
  * @len: bytes from ring buffer into @buf
  */
-extern void dvb_ringbuffer_init(struct dvb_ringbuffer *rbuf, void *data,
+extern void mediatree_dvb_ringbuffer_init(struct dvb_ringbuffer *rbuf, void *data,
 				size_t len);
 
 /**
- * dvb_ringbuffer_empty - test whether buffer is empty
+ * mediatree_dvb_ringbuffer_empty - test whether buffer is empty
  *
  * @rbuf: pointer to struct dvb_ringbuffer
  */
-extern int dvb_ringbuffer_empty(struct dvb_ringbuffer *rbuf);
+extern int mediatree_dvb_ringbuffer_empty(struct dvb_ringbuffer *rbuf);
 
 /**
- * dvb_ringbuffer_free - returns the number of free bytes in the buffer
+ * mediatree_dvb_ringbuffer_free - returns the number of free bytes in the buffer
  *
  * @rbuf: pointer to struct dvb_ringbuffer
  *
  * Return: number of free bytes in the buffer
  */
-extern ssize_t dvb_ringbuffer_free(struct dvb_ringbuffer *rbuf);
+extern ssize_t mediatree_dvb_ringbuffer_free(struct dvb_ringbuffer *rbuf);
 
 /**
- * dvb_ringbuffer_avail - returns the number of bytes waiting in the buffer
+ * mediatree_dvb_ringbuffer_avail - returns the number of bytes waiting in the buffer
  *
  * @rbuf: pointer to struct dvb_ringbuffer
  *
  * Return: number of bytes waiting in the buffer
  */
-extern ssize_t dvb_ringbuffer_avail(struct dvb_ringbuffer *rbuf);
+extern ssize_t mediatree_dvb_ringbuffer_avail(struct dvb_ringbuffer *rbuf);
 
 /**
  * dvb_ringbuffer_reset - resets the ringbuffer to initial state
@@ -102,19 +102,19 @@ extern void dvb_ringbuffer_reset(struct dvb_ringbuffer *rbuf);
  */
 
 /**
- * dvb_ringbuffer_flush - flush buffer
+ * mediatree_dvb_ringbuffer_flush - flush buffer
  *
  * @rbuf: pointer to struct dvb_ringbuffer
  */
-extern void dvb_ringbuffer_flush(struct dvb_ringbuffer *rbuf);
+extern void mediatree_dvb_ringbuffer_flush(struct dvb_ringbuffer *rbuf);
 
 /**
- * dvb_ringbuffer_flush_spinlock_wakeup- flush buffer protected by spinlock
+ * mediatree_dvb_ringbuffer_flush_spinlock_wakeup- flush buffer protected by spinlock
  *      and wake-up waiting task(s)
  *
  * @rbuf: pointer to struct dvb_ringbuffer
  */
-extern void dvb_ringbuffer_flush_spinlock_wakeup(struct dvb_ringbuffer *rbuf);
+extern void mediatree_dvb_ringbuffer_flush_spinlock_wakeup(struct dvb_ringbuffer *rbuf);
 
 /**
  * DVB_RINGBUFFER_PEEK - peek at byte @offs in the buffer
@@ -136,7 +136,7 @@ extern void dvb_ringbuffer_flush_spinlock_wakeup(struct dvb_ringbuffer *rbuf);
 }
 
 /**
- * dvb_ringbuffer_read_user - Reads a buffer into a user pointer
+ * mediatree_dvb_ringbuffer_read_user - Reads a buffer into a user pointer
  *
  * @rbuf: pointer to struct dvb_ringbuffer
  * @buf: pointer to the buffer where the data will be stored
@@ -147,11 +147,11 @@ extern void dvb_ringbuffer_flush_spinlock_wakeup(struct dvb_ringbuffer *rbuf);
  *
  * Return: number of bytes transferred or -EFAULT
  */
-extern ssize_t dvb_ringbuffer_read_user(struct dvb_ringbuffer *rbuf,
+extern ssize_t mediatree_dvb_ringbuffer_read_user(struct dvb_ringbuffer *rbuf,
 				   u8 __user *buf, size_t len);
 
 /**
- * dvb_ringbuffer_read - Reads a buffer into a pointer
+ * mediatree_dvb_ringbuffer_read - Reads a buffer into a pointer
  *
  * @rbuf: pointer to struct dvb_ringbuffer
  * @buf: pointer to the buffer where the data will be stored
@@ -161,7 +161,7 @@ extern ssize_t dvb_ringbuffer_read_user(struct dvb_ringbuffer *rbuf,
  *
  * Return: number of bytes transferred or -EFAULT
  */
-extern void dvb_ringbuffer_read(struct dvb_ringbuffer *rbuf,
+extern void mediatree_dvb_ringbuffer_read(struct dvb_ringbuffer *rbuf,
 				   u8 *buf, size_t len);
 
 /*
@@ -179,7 +179,7 @@ extern void dvb_ringbuffer_read(struct dvb_ringbuffer *rbuf,
 			(rbuf)->pwrite = ((rbuf)->pwrite + 1) % (rbuf)->size; }
 
 /**
- * dvb_ringbuffer_write - Writes a buffer into the ringbuffer
+ * mediatree_dvb_ringbuffer_write - Writes a buffer into the ringbuffer
  *
  * @rbuf: pointer to struct dvb_ringbuffer
  * @buf: pointer to the buffer where the data will be read
@@ -189,11 +189,11 @@ extern void dvb_ringbuffer_read(struct dvb_ringbuffer *rbuf,
  *
  * return: number of bytes transferred or -EFAULT
  */
-extern ssize_t dvb_ringbuffer_write(struct dvb_ringbuffer *rbuf, const u8 *buf,
+extern ssize_t mediatree_dvb_ringbuffer_write(struct dvb_ringbuffer *rbuf, const u8 *buf,
 				    size_t len);
 
 /**
- * dvb_ringbuffer_write_user - Writes a buffer received via a user pointer
+ * mediatree_dvb_ringbuffer_write_user - Writes a buffer received via a user pointer
  *
  * @rbuf: pointer to struct dvb_ringbuffer
  * @buf: pointer to the buffer where the data will be read
@@ -204,7 +204,7 @@ extern ssize_t dvb_ringbuffer_write(struct dvb_ringbuffer *rbuf, const u8 *buf,
  *
  * Return: number of bytes transferred or -EFAULT
  */
-extern ssize_t dvb_ringbuffer_write_user(struct dvb_ringbuffer *rbuf,
+extern ssize_t mediatree_dvb_ringbuffer_write_user(struct dvb_ringbuffer *rbuf,
 					 const u8 __user *buf, size_t len);
 
 /**
@@ -232,7 +232,7 @@ extern ssize_t dvb_ringbuffer_pkt_write(struct dvb_ringbuffer *rbuf, u8 *buf,
  *
  * .. note::
  *
- *    unlike dvb_ringbuffer_read(), this does **NOT** update the read pointer
+ *    unlike mediatree_dvb_ringbuffer_read(), this does **NOT** update the read pointer
  *    in the ringbuffer. You must use dvb_ringbuffer_pkt_dispose() to mark a
  *    packet as no longer required.
  */
@@ -243,7 +243,7 @@ extern ssize_t dvb_ringbuffer_pkt_read_user(struct dvb_ringbuffer *rbuf,
 
 /**
  * dvb_ringbuffer_pkt_read - Read from a packet in the ringbuffer.
- * Note: unlike dvb_ringbuffer_read_user(), this DOES update the read pointer
+ * Note: unlike mediatree_dvb_ringbuffer_read_user(), this DOES update the read pointer
  * in the ringbuffer.
  *
  * @rbuf: Ringbuffer concerned.
diff --git a/include/media/dvbdev.h b/include/media/dvbdev.h
index 2f6b086..53245ad 100644
--- a/include/media/dvbdev.h
+++ b/include/media/dvbdev.h
@@ -25,7 +25,7 @@
 #include <linux/list.h>
 #include <media/media-device.h>
 
-#define DVB_MAJOR 212
+#define DVB_MAJOR 213
 
 #if defined(CONFIG_DVB_MAX_ADAPTERS) && CONFIG_DVB_MAX_ADAPTERS > 0
   #define DVB_MAX_ADAPTERS CONFIG_DVB_MAX_ADAPTERS
@@ -188,29 +188,29 @@ struct dvb_device {
 };
 
 /**
- * dvb_register_adapter - Registers a new DVB adapter
+ * mediatree_dvb_register_adapter - Registers a new DVB adapter
  *
  * @adap:	pointer to struct dvb_adapter
  * @name:	Adapter's name
  * @module:	initialized with THIS_MODULE at the caller
  * @device:	pointer to struct device that corresponds to the device driver
- * @adapter_nums: Array with a list of the numbers for @dvb_register_adapter;
+ * @adapter_nums: Array with a list of the numbers for @mediatree_dvb_register_adapter;
  *		to select among them. Typically, initialized with:
  *		DVB_DEFINE_MOD_OPT_ADAPTER_NR(adapter_nums)
  */
-int dvb_register_adapter(struct dvb_adapter *adap, const char *name,
+int mediatree_dvb_register_adapter(struct dvb_adapter *adap, const char *name,
 			 struct module *module, struct device *device,
 			 short *adapter_nums);
 
 /**
- * dvb_unregister_adapter - Unregisters a DVB adapter
+ * mediatree_dvb_unregister_adapter - Unregisters a DVB adapter
  *
  * @adap:	pointer to struct dvb_adapter
  */
-int dvb_unregister_adapter(struct dvb_adapter *adap);
+int mediatree_dvb_unregister_adapter(struct dvb_adapter *adap);
 
 /**
- * dvb_register_device - Registers a new DVB device
+ * mediatree_dvb_register_device - Registers a new DVB device
  *
  * @adap:	pointer to struct dvb_adapter
  * @pdvbdev:	pointer to the place where the new struct dvb_device will be
@@ -221,7 +221,7 @@ int dvb_unregister_adapter(struct dvb_adapter *adap);
  * @demux_sink_pads: Number of demux outputs, to be used to create the TS
  *		outputs via the Media Controller.
  */
-int dvb_register_device(struct dvb_adapter *adap,
+int mediatree_dvb_register_device(struct dvb_adapter *adap,
 			struct dvb_device **pdvbdev,
 			const struct dvb_device *template,
 			void *priv,
@@ -229,34 +229,34 @@ int dvb_register_device(struct dvb_adapter *adap,
 			int demux_sink_pads);
 
 /**
- * dvb_remove_device - Remove a registered DVB device
+ * mediatree_dvb_remove_device - Remove a registered DVB device
  *
- * This does not free memory.  To do that, call dvb_free_device().
+ * This does not free memory.  To do that, call mediatree_dvb_free_device().
  *
  * @dvbdev:	pointer to struct dvb_device
  */
-void dvb_remove_device(struct dvb_device *dvbdev);
+void mediatree_dvb_remove_device(struct dvb_device *dvbdev);
 
 /**
- * dvb_free_device - Free memory occupied by a DVB device.
+ * mediatree_dvb_free_device - Free memory occupied by a DVB device.
  *
- * Call dvb_unregister_device() before calling this function.
+ * Call mediatree_dvb_unregister_device() before calling this function.
  *
  * @dvbdev:	pointer to struct dvb_device
  */
-void dvb_free_device(struct dvb_device *dvbdev);
+void mediatree_dvb_free_device(struct dvb_device *dvbdev);
 
 /**
- * dvb_unregister_device - Unregisters a DVB device
+ * mediatree_dvb_unregister_device - Unregisters a DVB device
  *
- * This is a combination of dvb_remove_device() and dvb_free_device().
+ * This is a combination of mediatree_dvb_remove_device() and mediatree_dvb_free_device().
  * Using this function is usually a mistake, and is often an indicator
  * for a use-after-free bug (when a userspace process keeps a file
  * handle to a detached device).
  *
  * @dvbdev:	pointer to struct dvb_device
  */
-void dvb_unregister_device(struct dvb_device *dvbdev);
+void mediatree_dvb_unregister_device(struct dvb_device *dvbdev);
 
 #ifdef CONFIG_MEDIA_CONTROLLER_DVB
 /**
@@ -310,7 +310,7 @@ int dvb_create_media_graph(struct dvb_adapter *adap,
 #endif
 
 /**
- * dvb_generic_open - Digital TV open function, used by DVB devices
+ * mediatree_dvb_generic_open - Digital TV open function, used by DVB devices
  *
  * @inode: pointer to &struct inode.
  * @file: pointer to &struct file.
@@ -318,10 +318,10 @@ int dvb_create_media_graph(struct dvb_adapter *adap,
  * Checks if a DVB devnode is still valid, and if the permissions are
  * OK and increment negative use count.
  */
-int dvb_generic_open(struct inode *inode, struct file *file);
+int mediatree_dvb_generic_open(struct inode *inode, struct file *file);
 
 /**
- * dvb_generic_release - Digital TV close function, used by DVB devices
+ * mediatree_dvb_generic_release - Digital TV close function, used by DVB devices
  *
  * @inode: pointer to &struct inode.
  * @file: pointer to &struct file.
@@ -329,10 +329,10 @@ int dvb_generic_open(struct inode *inode, struct file *file);
  * Checks if a DVB devnode is still valid, and if the permissions are
  * OK and decrement negative use count.
  */
-int dvb_generic_release(struct inode *inode, struct file *file);
+int mediatree_dvb_generic_release(struct inode *inode, struct file *file);
 
 /**
- * dvb_generic_ioctl - Digital TV close function, used by DVB devices
+ * mediatree_dvb_generic_ioctl - Digital TV close function, used by DVB devices
  *
  * @file: pointer to &struct file.
  * @cmd: Ioctl name.
@@ -341,7 +341,7 @@ int dvb_generic_release(struct inode *inode, struct file *file);
  * Checks if a DVB devnode and struct dvbdev.kernel_ioctl is still valid.
  * If so, calls dvb_usercopy().
  */
-long dvb_generic_ioctl(struct file *file,
+long mediatree_dvb_generic_ioctl(struct file *file,
 		       unsigned int cmd, unsigned long arg);
 
 /**
